{"ast":null,"code":"//var color ;\nexport default function sketch(p) {\n  let canvas;\n  var temp_array = NULL;\n\n  p.setup = () => {\n    canvas = p.createCanvas(600, 300);\n    p.noStroke();\n  };\n\n  p.draw = () => {\n    //console.log('draw');\n    //console.log(this);\n    p.background('blue');\n    p.ellipse(p.width, 0, temp_array.length / 10, temp_array.length / 10);\n    p.fill('yellow'); //p.fill(color)\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    if (canvas) {\n      //Make sure the canvas has been created\n      console.log('customProp');\n      console.log(newProps.tempArray);\n      temp_array = newProps.tempArray.tempData;\n    } //color = newProps.color\n    //co2Length = newProps.co2Length\n    //console.log(this);\n    //console.log(newProps);\n\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/samiea.github.io/react-deploy/src/sketches/sun.js"],"names":["sketch","p","canvas","temp_array","NULL","setup","createCanvas","noStroke","draw","background","ellipse","width","length","fill","myCustomRedrawAccordingToNewPropsHandler","newProps","console","log","tempArray","tempData"],"mappings":"AACA;AAGA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,MAAIC,MAAJ;AACA,MAAIC,UAAU,GAAGC,IAAjB;;AACAH,EAAAA,CAAC,CAACI,KAAF,GAAU,MAAM;AACZH,IAAAA,MAAM,GAAGD,CAAC,CAACK,YAAF,CAAe,GAAf,EAAoB,GAApB,CAAT;AACAL,IAAAA,CAAC,CAACM,QAAF;AACH,GAHD;;AAKAN,EAAAA,CAAC,CAACO,IAAF,GAAS,MAAM;AACX;AACA;AACAP,IAAAA,CAAC,CAACQ,UAAF,CAAa,MAAb;AACAR,IAAAA,CAAC,CAACS,OAAF,CAAUT,CAAC,CAACU,KAAZ,EAAmB,CAAnB,EAAsBR,UAAU,CAACS,MAAX,GAAkB,EAAxC,EAA4CT,UAAU,CAACS,MAAX,GAAkB,EAA9D;AACAX,IAAAA,CAAC,CAACY,IAAF,CAAO,QAAP,EALW,CAMX;AACH,GAPD;;AASAZ,EAAAA,CAAC,CAACa,wCAAF,GAA8CC,QAAD,IAAc;AACzD,QAAGb,MAAH,EAAU;AAAE;AACVc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,SAArB;AACAf,MAAAA,UAAU,GAAGY,QAAQ,CAACG,SAAT,CAAmBC,QAAhC;AACD,KALwD,CAMvD;AACA;AACA;AACA;;AACD,GAVH;AAYH","sourcesContent":["\r\n//var color ;\r\n\r\n\r\nexport default function sketch(p) {\r\n    let canvas;\r\n    var temp_array = NULL;\r\n    p.setup = () => {\r\n        canvas = p.createCanvas(600, 300);\r\n        p.noStroke();\r\n    }\r\n\r\n    p.draw = () => {\r\n        //console.log('draw');\r\n        //console.log(this);\r\n        p.background('blue');\r\n        p.ellipse(p.width, 0, temp_array.length/10, temp_array.length/10);\r\n        p.fill('yellow')\r\n        //p.fill(color)\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n      if(canvas){ //Make sure the canvas has been created\r\n        console.log('customProp');\r\n        console.log(newProps.tempArray);\r\n        temp_array = newProps.tempArray.tempData\r\n      }\r\n        //color = newProps.color\r\n        //co2Length = newProps.co2Length\r\n        //console.log(this);\r\n        //console.log(newProps);\r\n      }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}