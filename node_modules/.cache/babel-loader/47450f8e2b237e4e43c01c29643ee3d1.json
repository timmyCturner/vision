{"ast":null,"code":"let canvas; //these are gonna be the variables for our garbage collection\n\nvar macro_plastic = [];\nvar macro_Size = 5;\n\nclass Plastic {\n  constructor(p) {\n    this.x = p.random(400, p.width);\n    this.y = p.random(400, 200);\n  }\n\n  show(p) {\n    p.noStroke();\n    p.fill(p.random(0, 255));\n    p.ellipse(this.x, this.y, p.random(5, micro_Size), p.random(5, macro_Size));\n  }\n\n}\n\nexport function setupPlastic(p, macroGrowth2050) {\n  //\n  //set up plastic\n  //\n  for (var i = 0; i < 200; i++) {\n    macro_plastic[i] = new Plastic(p);\n  }\n}\nexport function drawPlastic(p, macroGrowth2050, current_date) {\n  //calc microplastic\n  //\n  var currentDate = current_date.getFullYear(); //p.background(230, 230, 250);\n  //console.log(microGrowth2050);\n  //console.log(current_date);\n\n  for (var i = 0; i < macro_plastic.length; i++) {\n    macro_plastic[i].show(p);\n  }\n\n  if (macroGrowth2050 != null) {\n    var newSize = -1 * (macroGrowth2050[(currentDate - 2000) * 5][1] - 367);\n    newSize = newSize * 2 + 200; //add drops\n\n    if (newSize > macro_plastic.length) {\n      for (var i = macro_plastic.length; i < newSize; i++) {\n        macro_plastic[i] = new Plastic(p);\n      }\n    } //remove drops\n\n\n    if (newSize < macro_plastic.length) {\n      var diffrenece = macro_plastic.length - newSize;\n      macro_plastic = macro_plastic.splice(0, diffrenece);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/macroPlastic.js"],"names":["canvas","macro_plastic","macro_Size","Plastic","constructor","p","x","random","width","y","show","noStroke","fill","ellipse","micro_Size","setupPlastic","macroGrowth2050","i","drawPlastic","current_date","currentDate","getFullYear","length","newSize","diffrenece","splice"],"mappings":"AACA,IAAIA,MAAJ,C,CACA;;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,UAAU,GAAG,CAAjB;;AAGA,MAAMC,OAAN,CAAa;AAETC,EAAAA,WAAW,CAACC,CAAD,EAAG;AACZ,SAAKC,CAAL,GAASD,CAAC,CAACE,MAAF,CAAS,GAAT,EAAcF,CAAC,CAACG,KAAhB,CAAT;AACA,SAAKC,CAAL,GAASJ,CAAC,CAACE,MAAF,CAAS,GAAT,EAAc,GAAd,CAAT;AACD;;AAGDG,EAAAA,IAAI,CAACL,CAAD,EAAI;AACNA,IAAAA,CAAC,CAACM,QAAF;AACAN,IAAAA,CAAC,CAACO,IAAF,CAAOP,CAAC,CAACE,MAAF,CAAS,CAAT,EAAW,GAAX,CAAP;AACAF,IAAAA,CAAC,CAACQ,OAAF,CAAU,KAAKP,CAAf,EAAkB,KAAKG,CAAvB,EAA0BJ,CAAC,CAACE,MAAF,CAAS,CAAT,EAAWO,UAAX,CAA1B,EAAkDT,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYL,UAAZ,CAAlD;AACD;;AAZQ;;AAgBb,OAAO,SAASa,YAAT,CAAsBV,CAAtB,EAAwBW,eAAxB,EAA0C;AAE/C;AACA;AACA;AACE,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBhB,IAAAA,aAAa,CAACgB,CAAD,CAAb,GAAmB,IAAId,OAAJ,CAAYE,CAAZ,CAAnB;AACH;AACF;AAEH,OAAO,SAASa,WAAT,CAAqBb,CAArB,EAAuBW,eAAvB,EAAuCG,YAAvC,EAAqD;AAC1D;AACA;AACA,MAAIC,WAAW,GAAGD,YAAY,CAACE,WAAb,EAAlB,CAH0D,CAI1D;AACA;AACA;;AAEA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,aAAa,CAACqB,MAAlC,EAA0CL,CAAC,EAA3C,EAA+C;AAC7ChB,IAAAA,aAAa,CAACgB,CAAD,CAAb,CAAiBP,IAAjB,CAAsBL,CAAtB;AACD;;AAED,MAAIW,eAAe,IAAI,IAAvB,EAA4B;AAEzB,QAAIO,OAAO,GAAG,CAAC,CAAD,IAAIP,eAAe,CAAC,CAACI,WAAW,GAAE,IAAd,IAAoB,CAArB,CAAf,CAAuC,CAAvC,IAA0C,GAA9C,CAAd;AACAG,IAAAA,OAAO,GAAGA,OAAO,GAAE,CAAT,GAAY,GAAtB,CAHyB,CAIzB;;AACA,QAAIA,OAAO,GAACtB,aAAa,CAACqB,MAA1B,EAAiC;AAC/B,WAAK,IAAIL,CAAC,GAAGhB,aAAa,CAACqB,MAA3B,EAAmCL,CAAC,GAACM,OAArC,EAA8CN,CAAC,EAA/C,EAAkD;AAChDhB,QAAAA,aAAa,CAACgB,CAAD,CAAb,GAAmB,IAAId,OAAJ,CAAYE,CAAZ,CAAnB;AACD;AAEF,KAVwB,CAWzB;;;AACA,QAAIkB,OAAO,GAACtB,aAAa,CAACqB,MAA1B,EAAiC;AAC/B,UAAIE,UAAU,GAAGvB,aAAa,CAACqB,MAAd,GAAqBC,OAAtC;AACAtB,MAAAA,aAAa,GAAGA,aAAa,CAACwB,MAAd,CAAqB,CAArB,EAAwBD,UAAxB,CAAhB;AAED;AACH;AAIF","sourcesContent":["\r\nlet canvas;\r\n//these are gonna be the variables for our garbage collection\r\nvar macro_plastic = []\r\nvar macro_Size = 5;\r\n\r\n\r\nclass Plastic{\r\n\r\n    constructor(p){\r\n      this.x = p.random(400, p.width);\r\n      this.y = p.random(400, 200);\r\n    }\r\n\r\n\r\n    show(p) {\r\n      p.noStroke();\r\n      p.fill(p.random(0,255));\r\n      p.ellipse(this.x, this.y, p.random(5,micro_Size), p.random(5, macro_Size));\r\n    }\r\n\r\n  }\r\n\r\nexport function setupPlastic(p,macroGrowth2050)  {\r\n\r\n  //\r\n  //set up plastic\r\n  //\r\n    for(var i = 0; i < 200; i++) {\r\n        macro_plastic[i] = new Plastic(p);\r\n    }\r\n  }\r\n\r\nexport function drawPlastic(p,macroGrowth2050,current_date) {\r\n  //calc microplastic\r\n  //\r\n  var currentDate = current_date.getFullYear()\r\n  //p.background(230, 230, 250);\r\n  //console.log(microGrowth2050);\r\n  //console.log(current_date);\r\n\r\n  for (var i = 0; i < macro_plastic.length; i++) {\r\n    macro_plastic[i].show(p);\r\n  }\r\n\r\n  if (macroGrowth2050 != null){\r\n\r\n     var newSize = -1*(macroGrowth2050[(currentDate -2000)*5][1]-367)\r\n     newSize = newSize *2 +200\r\n     //add drops\r\n     if (newSize>macro_plastic.length){\r\n       for (var i = macro_plastic.length; i<newSize; i++){\r\n         macro_plastic[i] = new Plastic(p);\r\n       }\r\n\r\n     }\r\n     //remove drops\r\n     if (newSize<macro_plastic.length){\r\n       var diffrenece = macro_plastic.length-newSize\r\n       macro_plastic = macro_plastic.splice(0, diffrenece);\r\n\r\n     }\r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}