{"ast":null,"code":"//var color ;\nexport default function sketch(p) {\n  let canvas;\n  var temp_array = null;\n  var yvalues;\n\n  p.setup = () => {\n    canvas = p.createCanvas(600, 300);\n    p.noStroke();\n    yvalues = new Array(p.floor(200));\n  };\n\n  p.draw = () => {\n    //console.log('draw');\n    //console.log(this);\n    p.background('blue');\n    p.calcSun();\n    p.drawSun(); //p.fill(color)\n    //console.log(temp_array);\n  };\n\n  p.calcSun = () => {\n    //console.log(temp_array)\n    if (temp_array != null) {\n      for (let i = 0; i < temp_array.length / 8; i++) {\n        //console.log(temp_array[i*8].land);\n        //let average = temp_array[i*8].station// + parseFloat(temp_array[i*8].land))/2);\n        yvalues[i] = 2 + i; //console.log(average);\n      } //console.log(typeof temp_array[200]);\n\n    }\n  };\n\n  p.drawSun = () => {\n    if (temp_array != null) {\n      //console.log('here');\n      console.log(yvalues);\n\n      for (let i = 0; i < yvalues.length; i++) {\n        //console.log(yvalues);\n        p.ellipse(p.width, 0, yvalues[i], yvalues[i]);\n        p.fill('yellow');\n      }\n    }\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    if (canvas) {\n      //Make sure the canvas has been created\n      console.log('customProp'); //console.log(newProps.tempArray);\n\n      temp_array = newProps.tempArray.tempData;\n      console.log(newProps.tempArray.tempData);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/samiea.github.io/react-deploy/src/sketches/sun.js"],"names":["sketch","p","canvas","temp_array","yvalues","setup","createCanvas","noStroke","Array","floor","draw","background","calcSun","drawSun","i","length","console","log","ellipse","width","fill","myCustomRedrawAccordingToNewPropsHandler","newProps","tempArray","tempData"],"mappings":"AACA;AAGA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,MAAIC,MAAJ;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,OAAJ;;AAGAH,EAAAA,CAAC,CAACI,KAAF,GAAU,MAAM;AACZH,IAAAA,MAAM,GAAGD,CAAC,CAACK,YAAF,CAAe,GAAf,EAAoB,GAApB,CAAT;AACAL,IAAAA,CAAC,CAACM,QAAF;AACAH,IAAAA,OAAO,GAAG,IAAII,KAAJ,CAAUP,CAAC,CAACQ,KAAF,CAAQ,GAAR,CAAV,CAAV;AAEH,GALD;;AAOAR,EAAAA,CAAC,CAACS,IAAF,GAAS,MAAM;AACX;AACA;AACAT,IAAAA,CAAC,CAACU,UAAF,CAAa,MAAb;AACAV,IAAAA,CAAC,CAACW,OAAF;AACAX,IAAAA,CAAC,CAACY,OAAF,GALW,CAMX;AACA;AACH,GARD;;AASAZ,EAAAA,CAAC,CAACW,OAAF,GAAW,MAAM;AAEf;AACA,QAAIT,UAAU,IAAI,IAAlB,EAAuB;AACrB,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIX,UAAU,CAACY,MAAX,GAAkB,CAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C;AACA;AACAV,QAAAA,OAAO,CAACU,CAAD,CAAP,GAAa,IAAEA,CAAf,CAH8C,CAI9C;AACD,OANoB,CAOrB;;AACD;AACF,GAZD;;AAaAb,EAAAA,CAAC,CAACY,OAAF,GAAW,MAAM;AACf,QAAIV,UAAU,IAAI,IAAlB,EAAuB;AACrB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;;AACA,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIV,OAAO,CAACW,MAA7B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC;AACAb,QAAAA,CAAC,CAACiB,OAAF,CAAUjB,CAAC,CAACkB,KAAZ,EAAmB,CAAnB,EAAsBf,OAAO,CAACU,CAAD,CAA7B,EAAkCV,OAAO,CAACU,CAAD,CAAzC;AACAb,QAAAA,CAAC,CAACmB,IAAF,CAAO,QAAP;AACD;AACF;AACF,GAVD;;AAWAnB,EAAAA,CAAC,CAACoB,wCAAF,GAA8CC,QAAD,IAAc;AACzD,QAAGpB,MAAH,EAAU;AAAE;AACVc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADQ,CAER;;AACAd,MAAAA,UAAU,GAAGmB,QAAQ,CAACC,SAAT,CAAmBC,QAAhC;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACC,SAAT,CAAmBC,QAA/B;AAED;AAEF,GATD;AAaH","sourcesContent":["\r\n//var color ;\r\n\r\n\r\nexport default function sketch(p) {\r\n    let canvas;\r\n    var temp_array = null;\r\n    var yvalues;\r\n\r\n\r\n    p.setup = () => {\r\n        canvas = p.createCanvas(600, 300);\r\n        p.noStroke();\r\n        yvalues = new Array(p.floor(200));\r\n\r\n    }\r\n\r\n    p.draw = () => {\r\n        //console.log('draw');\r\n        //console.log(this);\r\n        p.background('blue');\r\n        p.calcSun();\r\n        p.drawSun();\r\n        //p.fill(color)\r\n        //console.log(temp_array);\r\n    }\r\n    p.calcSun= () => {\r\n\r\n      //console.log(temp_array)\r\n      if (temp_array != null){\r\n        for (let i = 0; i < (temp_array.length/8); i++) {\r\n          //console.log(temp_array[i*8].land);\r\n          //let average = temp_array[i*8].station// + parseFloat(temp_array[i*8].land))/2);\r\n          yvalues[i] = 2+i;\r\n          //console.log(average);\r\n        }\r\n        //console.log(typeof temp_array[200]);\r\n      }\r\n    }\r\n    p.drawSun= () => {\r\n      if (temp_array != null){\r\n        //console.log('here');\r\n        console.log(yvalues);\r\n        for (let i = 0; i < (yvalues.length); i++) {\r\n          //console.log(yvalues);\r\n          p.ellipse(p.width, 0, yvalues[i], yvalues[i]);\r\n          p.fill('yellow')\r\n        }\r\n      }\r\n    }\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n      if(canvas){ //Make sure the canvas has been created\r\n        console.log('customProp');\r\n        //console.log(newProps.tempArray);\r\n        temp_array = newProps.tempArray.tempData\r\n        console.log(newProps.tempArray.tempData);\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}