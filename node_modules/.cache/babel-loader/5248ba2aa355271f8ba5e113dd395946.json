{"ast":null,"code":"let smogClouds = [];\nlet originalData = null;\nconst initial_clouds = 4;\nlet extra_clouds = 0;\n\nclass SmogCloud {\n  constructor(p) {\n    this.todayData = null;\n    this.xVelocity = p.random(-2, 2); //cloud movement velocity\n\n    this.x = p.random(50, p.width);\n    this.y = p.random(50, 200);\n    this.width = p.random(100, 300);\n    this.height = p.random(50, 100);\n    this.smogBubbles = [];\n    this.opacity = p.random(50, 200);\n    this.addlimit = 0;\n\n    for (let x = 0; x < 25; x++) {\n      this.smogBubbles[x] = new SmogBubble(p, this.width, this.height);\n    }\n\n    this.display = function (todayData) {\n      this.oldData = this.todayData;\n      this.todayData = todayData;\n\n      if (this.todayData == undefined) {\n        this.todayData = this.oldData;\n      } // console.log(\"Displaying smog cloud\");\n\n\n      if (this.oldData != undefined) {\n        p.noStroke();\n        let cloudColor = p.color(100);\n        cloudColor.setAlpha(this.opacity);\n        p.fill(cloudColor);\n        this.width += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average)) * 10;\n        this.height += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average)) * 10;\n        p.ellipse(this.x, this.y, this.width, this.height);\n        p.beginShape();\n\n        for (let x = 0; x < this.smogBubbles.length; x++) {\n          cloudColor.setAlpha(this.smogBubbles[x].opacity);\n          p.fill(cloudColor);\n          this.smogBubbles[x].rx += (this.todayData.average - this.oldData.average) * 10;\n          this.smogBubbles[x].ry += (this.todayData.average - this.oldData.average) * 10; //this.smogBubbles[x].rxVelocity += (this.todayData.average - this.oldData.average)\n          //this.smogBubbles[x].ryVelocity += (this.todayData.average - this.oldData.average) \n\n          p.ellipse(this.x + this.smogBubbles[x].xOffset, this.y + this.smogBubbles[x].yOffset, this.smogBubbles[x].rx, this.smogBubbles[x].ry);\n          p.curveVertex(this.x + this.smogBubbles[x].xOffset, this.y + this.smogBubbles[x].yOffset);\n        }\n      }\n\n      p.endShape(p.CLOSE);\n    };\n\n    this.move = function () {\n      if (this.oldData != undefined) {\n        this.addlimit += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average)) * 10;\n\n        for (let x = 0; x < this.smogBubbles.length; x++) {\n          if (Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 - 10 + this.addLimit) {\n            this.smogBubbles[x].xVelocity *= -1;\n          }\n\n          if (Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 - 10 + this.addLimit) {\n            this.smogBubbles[x].yVelocity *= -1;\n          }\n\n          if (this.smogBubbles[x].rx < 70 + this.addlimit || this.smogBubbles[x].rx > 150 + this.addlimit) {\n            this.smogBubbles[x].rxVelocity *= -1;\n          }\n\n          if (this.smogBubbles[x].ry < 70 + this.addlimit || this.smogBubbles[x].ry > 150 + this.addlimit) {\n            this.smogBubbles[x].ryVelocity *= -1;\n          }\n\n          this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\n          this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\n          this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\n          this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;\n        }\n      }\n\n      if (this.x > p.width + 50) {\n        this.x = -50;\n      } else if (this.x < -50) {\n        this.x = p.width - 100;\n      }\n\n      this.x += this.xVelocity;\n    };\n  }\n\n}\n\nclass SmogBubble {\n  constructor(p, xlimit, ylimit) {\n    this.opacity = p.random(50, 200);\n    this.xVelocity = p.random(0.03, 0.07);\n    this.yVelocity = p.random(0.03, 0.07);\n    this.xOffset = p.random(xlimit / 2 * -1, xlimit / 2);\n    this.yOffset = p.random(ylimit / 2 * -1, ylimit / 2);\n    this.rx = p.random(70, 150);\n    this.ry = p.random(70, 150);\n    this.rxVelocity = p.random(0.1, 0.5);\n    this.ryVelocity = p.random(0.1, 0.5);\n  }\n\n}\n\nexport function setupSmogClouds(p, nitrousData, currentDate) {\n  for (let i = 0; i < initial_clouds; i++) {\n    smogClouds[i] = new SmogCloud(p, nitrousData, currentDate);\n  }\n}\nexport function drawSmogClouds(p, nitrousData, currentDate) {\n  let currIndex = 33 + (currentDate.getFullYear() - 2004) * 12 + currentDate.getMonth();\n\n  if (originalData == null && nitrousData != null) {\n    originalData = nitrousData[0];\n  } else if (nitrousData != undefined && currIndex > 0 && currIndex < nitrousData.length) {\n    let diff = Math.round((nitrousData[currIndex].average - originalData.average) / 10) - extra_clouds;\n    console.log(diff);\n\n    if (diff > 0) {\n      for (let x = 0; x < diff; x++) {\n        smogClouds[smogClouds.length] = new SmogCloud(p, nitrousData, currentDate);\n        extra_clouds++;\n      }\n    } else if (diff < 0) {\n      let slice = smogClouds.length - 1 + diff;\n      extra_clouds -= smogClouds.length - 1 - slice;\n      smogClouds = smogClouds.slice(0, slice);\n    }\n  }\n\n  if (currIndex >= 0) {\n    for (var i = 0; i < smogClouds.length; i++) {\n      smogClouds[i].move();\n      smogClouds[i].display(nitrousData[currIndex]);\n    }\n  } else {\n    for (var i = 0; i < smogClouds.length; i++) {\n      smogClouds[i].move();\n      smogClouds[i].display(nitrousData[0]);\n    }\n  }\n} //nitrousData[;","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/smogClouds.js"],"names":["smogClouds","originalData","initial_clouds","extra_clouds","SmogCloud","constructor","p","todayData","xVelocity","random","x","width","y","height","smogBubbles","opacity","addlimit","SmogBubble","display","oldData","undefined","noStroke","cloudColor","color","setAlpha","fill","parseFloat","average","ellipse","beginShape","length","rx","ry","xOffset","yOffset","curveVertex","endShape","CLOSE","move","Math","abs","addLimit","yVelocity","rxVelocity","ryVelocity","xlimit","ylimit","setupSmogClouds","nitrousData","currentDate","i","drawSmogClouds","currIndex","getFullYear","getMonth","diff","round","console","log","slice"],"mappings":"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","sourcesContent":["let smogClouds = [];\r\nlet originalData = null;\r\nconst initial_clouds = 4;\r\nlet extra_clouds = 0;\r\n\r\nclass SmogCloud {\r\n    constructor(p) {\r\n        this.todayData = null;\r\n\r\n        this.xVelocity = p.random(-2, 2); //cloud movement velocity\r\n        this.x = p.random(50, p.width);\r\n        this.y = p.random(50, 200);\r\n        this.width = p.random(100, 300);\r\n        this.height = p.random(50, 100);\r\n        this.smogBubbles = [];\r\n        this.opacity = p.random(50, 200);\r\n        this.addlimit = 0;\r\n        \r\n        for (let x = 0; x < 25; x++) {\r\n            this.smogBubbles[x] = new SmogBubble(p, this.width, this.height);\r\n        }\r\n\r\n        this.display = function (todayData) {\r\n            this.oldData = this.todayData\r\n            this.todayData = todayData;\r\n            if(this.todayData == undefined) {\r\n                this.todayData = this.oldData;\r\n            }\r\n            // console.log(\"Displaying smog cloud\");\r\n\r\n            if(this.oldData != undefined) {\r\n                p.noStroke();\r\n                let cloudColor = p.color(100);\r\n                cloudColor.setAlpha(this.opacity);\r\n                p.fill(cloudColor);\r\n\r\n                this.width += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))* 10\r\n                this.height += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))* 10\r\n\r\n                p.ellipse(this.x, this.y, this.width, this.height);\r\n                p.beginShape();\r\n                for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                    cloudColor.setAlpha(this.smogBubbles[x].opacity);\r\n                    p.fill(cloudColor);\r\n                    this.smogBubbles[x].rx += (this.todayData.average - this.oldData.average)* 10\r\n                    this.smogBubbles[x].ry += (this.todayData.average - this.oldData.average)* 10\r\n\r\n                    //this.smogBubbles[x].rxVelocity += (this.todayData.average - this.oldData.average)\r\n                    //this.smogBubbles[x].ryVelocity += (this.todayData.average - this.oldData.average) \r\n\r\n                    p.ellipse(\r\n                        this.x + this.smogBubbles[x].xOffset,\r\n                        this.y + this.smogBubbles[x].yOffset,\r\n                        this.smogBubbles[x].rx,\r\n                        this.smogBubbles[x].ry\r\n                    );\r\n                    p.curveVertex(\r\n                        this.x + this.smogBubbles[x].xOffset,\r\n                        this.y + this.smogBubbles[x].yOffset\r\n                    );\r\n                }\r\n            }\r\n            p.endShape(p.CLOSE);\r\n        };\r\n\r\n        this.move = function () {\r\n            if(this.oldData != undefined) {\r\n                this.addlimit += (parseFloat(this.todayData.average) - parseFloat(this.oldData.average))* 10;\r\n                for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                    if (Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 - 10 + this.addLimit) {\r\n                        this.smogBubbles[x].xVelocity *= -1;\r\n                    }\r\n                    if (Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 - 10 + this.addLimit) {\r\n                        this.smogBubbles[x].yVelocity *= -1;\r\n                    }\r\n                    if (this.smogBubbles[x].rx < 70 + this.addlimit || this.smogBubbles[x].rx > 150 + this.addlimit) {\r\n                        this.smogBubbles[x].rxVelocity *= -1;\r\n                    }\r\n                    if (this.smogBubbles[x].ry < 70 + this.addlimit || this.smogBubbles[x].ry > 150 + this.addlimit) {\r\n                        this.smogBubbles[x].ryVelocity *= -1;\r\n                    }\r\n\r\n                    this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\r\n                    this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\r\n\r\n                    this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\r\n                    this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;\r\n                }\r\n            }\r\n            if (this.x > p.width + 50) {\r\n                this.x = -50;\r\n            } else if (this.x < -50) {\r\n                this.x = p.width - 100;\r\n            }\r\n            this.x += this.xVelocity;\r\n        };\r\n    }\r\n}\r\n\r\nclass SmogBubble {\r\n    constructor(p, xlimit, ylimit) {\r\n        this.opacity = p.random(50, 200);\r\n        this.xVelocity = p.random(0.03, 0.07);\r\n        this.yVelocity = p.random(0.03, 0.07);\r\n        this.xOffset = p.random((xlimit / 2) * -1, xlimit / 2);\r\n        this.yOffset = p.random((ylimit / 2) * -1, ylimit / 2);\r\n        this.rx = p.random(70, 150);\r\n        this.ry = p.random(70, 150);\r\n\r\n        this.rxVelocity = p.random(0.1, 0.5);\r\n        this.ryVelocity = p.random(0.1, 0.5);\r\n    }\r\n}\r\n\r\nexport function setupSmogClouds(p, nitrousData, currentDate) {\r\n    for (let i = 0; i < initial_clouds; i++) {\r\n        smogClouds[i] = new SmogCloud(p, nitrousData, currentDate);\r\n    }\r\n    \r\n}\r\n\r\nexport function drawSmogClouds(p, nitrousData, currentDate) {\r\n        let currIndex = 33 + ((currentDate.getFullYear() - 2004) * 12) + currentDate.getMonth()\r\n\r\n        if(originalData == null && nitrousData != null) {\r\n            originalData = nitrousData[0];\r\n        }\r\n        else if(nitrousData != undefined && currIndex > 0 && currIndex < nitrousData.length) {\r\n            let diff = Math.round(((nitrousData[currIndex].average - originalData.average)/10)) - extra_clouds;\r\n            console.log(diff);\r\n\r\n            if(diff > 0) {\r\n                for(let x = 0 ; x < diff; x++) {\r\n                    smogClouds[smogClouds.length] = new SmogCloud(p, nitrousData, currentDate);\r\n                    extra_clouds++;\r\n                }\r\n            }\r\n            else if(diff < 0) {\r\n                let slice = smogClouds.length - 1 + diff;\r\n                extra_clouds -= smogClouds.length - 1 - slice;\r\n                smogClouds = smogClouds.slice(0, slice);\r\n            }\r\n        }\r\n\r\n        if(currIndex >= 0) {\r\n            for (var i = 0; i < smogClouds.length; i++) {\r\n                smogClouds[i].move();\r\n                smogClouds[i].display(nitrousData[currIndex]);\r\n            }\r\n        }\r\n        else {\r\n            for(var i = 0; i < smogClouds.length; i++) {\r\n                smogClouds[i].move();\r\n                smogClouds[i].display(nitrousData[0]);\r\n            }\r\n        }\r\n\r\n    \r\n}\r\n\r\n//nitrousData[;\r\n"]},"metadata":{},"sourceType":"module"}