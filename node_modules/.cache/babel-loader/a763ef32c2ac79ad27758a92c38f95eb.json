{"ast":null,"code":"import { drawSun } from './sun';\nconst noiseSpeed = 0.01;\nconst noiseHeight = 20;\nconst num_clouds = 3;\nconst num_bubbles = 30;\nconst cloud_ellipses = [{\n  x: 0,\n  y: 20,\n  rx: 70,\n  ry: 40\n}, {\n  x: 25,\n  y: -3,\n  rx: 50,\n  ry: 28\n}, {\n  x: 70,\n  y: 3,\n  rx: 50,\n  ry: 28\n}, {\n  x: 100,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 115,\n  y: -2,\n  rx: 24,\n  ry: 24\n}, {\n  x: 130,\n  y: -2,\n  rx: 24,\n  ry: 24\n}, {\n  x: 145,\n  y: 0,\n  rx: 24,\n  ry: 24\n}, {\n  x: 160,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 173,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 185,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 198,\n  y: -3,\n  rx: 24,\n  ry: 24\n}, {\n  x: 215,\n  y: 3,\n  rx: 28,\n  ry: 24\n}, {\n  x: 230,\n  y: 4,\n  rx: 30,\n  ry: 24\n}, {\n  x: 245,\n  y: 6,\n  rx: 30,\n  ry: 24\n}, {\n  x: 260,\n  y: 6,\n  rx: 30,\n  ry: 24\n}, {\n  x: 270,\n  y: 3,\n  rx: 26,\n  ry: 24\n}, {\n  x: 285,\n  y: 10,\n  rx: 30,\n  ry: 24\n}, {\n  x: 310,\n  y: 4,\n  rx: 30,\n  ry: 24\n}, {\n  x: 325,\n  y: 4,\n  rx: 16,\n  ry: 16\n}, {\n  x: 339,\n  y: 2,\n  rx: 24,\n  ry: 24\n}, {\n  x: 365,\n  y: 5,\n  rx: 44,\n  ry: 28\n}, {\n  x: 400,\n  y: 0,\n  rx: 40,\n  ry: 24\n}, {\n  x: 435,\n  y: -5,\n  rx: 50,\n  ry: 30\n}, {\n  x: 465,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 490,\n  y: -3,\n  rx: 38,\n  ry: 30\n}, {\n  x: 524,\n  y: -3,\n  rx: 40,\n  ry: 24\n}, {\n  x: 550,\n  y: -10,\n  rx: 60,\n  ry: 50\n}, {\n  x: 595,\n  y: 3,\n  rx: 58,\n  ry: 40\n}, {\n  x: 627,\n  y: 12,\n  rx: 24,\n  ry: 24\n}, {\n  x: 643,\n  y: 20,\n  rx: 40,\n  ry: 24\n}, {\n  x: 665,\n  y: 19,\n  rx: 30,\n  ry: 24\n}, {\n  x: 695,\n  y: 20,\n  rx: 50,\n  ry: 24\n}, {\n  x: 715,\n  y: 25,\n  rx: 45,\n  ry: 30\n}, {\n  x: 740,\n  y: 25,\n  rx: 45,\n  ry: 30\n}, {\n  x: 754,\n  y: 17,\n  rx: 27,\n  ry: 24\n}, {\n  x: 766,\n  y: 17,\n  rx: 20,\n  ry: 20\n}, {\n  x: 780,\n  y: 17,\n  rx: 25,\n  ry: 20\n}, {\n  x: 800,\n  y: 10,\n  rx: 30,\n  ry: 20\n}, {\n  x: 820,\n  y: 10,\n  rx: 40,\n  ry: 40\n}, {\n  x: 860,\n  y: 10,\n  rx: 80,\n  ry: 60\n}, {\n  x: 890,\n  y: -5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 910,\n  y: -10,\n  rx: 40,\n  ry: 40\n}, {\n  x: 950,\n  y: -18,\n  rx: 69,\n  ry: 50\n}, {\n  x: 990,\n  y: -18,\n  rx: 40,\n  ry: 30\n}, {\n  x: 1010,\n  y: 0,\n  rx: 40,\n  ry: 30\n}, {\n  x: 1030,\n  y: 10,\n  rx: 24,\n  ry: 24\n}, {\n  x: 1050,\n  y: 8,\n  rx: 24,\n  ry: 24\n}, {\n  x: 1065,\n  y: 10,\n  rx: 24,\n  ry: 24\n}, {\n  x: 1090,\n  y: 15,\n  rx: 50,\n  ry: 24\n}, {\n  x: 1115,\n  y: 20,\n  rx: 24,\n  ry: 24\n}, {\n  x: 1135,\n  y: 25,\n  rx: 40,\n  ry: 24\n}, {\n  x: 1155,\n  y: 25,\n  rx: 40,\n  ry: 24\n}, {\n  x: 1180,\n  y: 20,\n  rx: 38,\n  ry: 25\n}, {\n  x: 1200,\n  y: 100,\n  rx: 70,\n  ry: 40\n}];\nlet noiseY;\nlet clouds = [];\nlet bubbles = [];\nexport function setupLandscape(p) {\n  for (let i = 0; i < 3; i++) {\n    // initialize the clouds\n    clouds[i] = new Cloud(p, num_clouds - i);\n  }\n\n  for (let i = 0; i < 30; i++) {\n    // initialize the bubbles\n    bubbles[i] = new Bubble(p, p.random(0, p.width), p.random(-1.5, -1), p.random(10, 30));\n  }\n\n  noiseY = p.height * 3 / 4; // y-noise for waves\n}\n;\nexport function drawLandscape(p, temperatureData, currentDate) {\n  // this loops everything inside body\n  makeClouds();\n  makeWaves(p);\n  p.noStroke();\n  makeBubbles();\n}\n\nfunction makeClouds() {\n  // create the clouds and call their moethods\n  for (var i = 0; i < num_clouds; i++) {\n    clouds[i].move();\n    clouds[i].display();\n  }\n}\n\nfunction makeBubbles() {\n  // create the bubbles and call their methods\n  for (let i = 0; i < num_bubbles; i++) {\n    bubbles[i].move();\n    bubbles[i].display();\n  }\n}\n\nfunction makeWaves(p) {\n  // create the waves\n  createWave(0, {\n    r: 194,\n    g: 247,\n    b: 254\n  });\n  createWave(65, {\n    r: 84,\n    g: 182,\n    b: 282\n  });\n  createWave(80, {\n    r: 112,\n    g: 219,\n    b: 245\n  });\n\n  function createWave(offsetY, rgb) {\n    p.noFill();\n    p.stroke(rgb.r, rgb.g, rgb.b); // draw wave\n\n    p.strokeWeight(p.height / 2);\n    p.beginShape(); // create shape for area under waves\n\n    p.curveVertex(0, p.height / 2);\n\n    for (let i = 0; i < p.width; i += 50) {\n      let y = p.noise(p.frameCount * noiseSpeed + i) * noiseHeight + noiseY + offsetY; // redraw y-coordinates for waves\n\n      p.curveVertex(i, y);\n    }\n\n    p.curveVertex(p.width, p.height / 2);\n    p.endShape(p.LINES); // end shape for area under waves\n  }\n}\n\nfunction Bubble(p, xstart, yspeed, size) {\n  // class for bubble objects\n  this.x = xstart; // starting x-position of bubbles\n\n  this.y = p.random(p.height, p.height * 1.5); // starting y-position of bubbles under height\n\n  this.degree = 0;\n\n  this.display = function () {\n    p.fill(255, 255, 255, 50);\n    p.ellipse(this.x, this.y, size);\n    p.fill(255, 255, 255, 180);\n    p.ellipse(this.x + 0.2 * size, this.y - 0.2 * size, 0.2 * size);\n  };\n\n  this.move = function () {\n    this.y += yspeed; // bubble movement speed\n\n    if (this.y < p.height * 0.63) {\n      this.y = p.height * 1.2;\n    }\n\n    this.x += p.cos(p.radians(this.degree)); // base x-shifts on cosine waves\n\n    this.degree += p.random(0.0, 1.0);\n  };\n}\n\nfunction Cloud(p, key) {\n  // class for cloud objects\n  this.x = p.width - 1200 * key; // initial x position\n\n  this.y = p.height / 2 - 15; // initial y position\n\n  this.display = function () {\n    p.stroke(255); // white stroke\n\n    p.strokeWeight(1);\n    p.fill(255);\n    p.beginShape(); // create shape for area under ellipses\n\n    for (let i = 0; i < cloud_ellipses.length; i++) {\n      p.ellipse( // create ellipses that form clouds\n      this.x + cloud_ellipses[i].x, this.y + cloud_ellipses[i].y, cloud_ellipses[i].rx, cloud_ellipses[i].ry);\n      p.curveVertex( // create vertices to paint area under cloud white\n      this.x + cloud_ellipses[i].x, this.y + cloud_ellipses[i].y);\n    }\n\n    p.curveVertex(p.width, p.height);\n    p.endShape(p.CLOSE); // end shape for area under ellipses\n  };\n\n  this.move = function () {\n    this.x += 0.2; // cloud movement speed\n\n    if (this.x >= p.width) {\n      this.x = p.width - 1200 * num_clouds; // reset cloud to this position\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/landscape.js"],"names":["drawSun","noiseSpeed","noiseHeight","num_clouds","num_bubbles","cloud_ellipses","x","y","rx","ry","noiseY","clouds","bubbles","setupLandscape","p","i","Cloud","Bubble","random","width","height","drawLandscape","temperatureData","currentDate","makeClouds","makeWaves","noStroke","makeBubbles","move","display","createWave","r","g","b","offsetY","rgb","noFill","stroke","strokeWeight","beginShape","curveVertex","noise","frameCount","endShape","LINES","xstart","yspeed","size","degree","fill","ellipse","cos","radians","key","length","CLOSE"],"mappings":"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","sourcesContent":["import { drawSun } from './sun';\r\n\r\nconst noiseSpeed = 0.01;\r\nconst noiseHeight = 20;\r\nconst num_clouds = 3;\r\nconst num_bubbles = 30;\r\nconst cloud_ellipses = [\r\n    { x: 0, y: 20, rx: 70, ry: 40 },\r\n    { x: 25, y: -3, rx: 50, ry: 28 },\r\n    { x: 70, y: 3, rx: 50, ry: 28 },\r\n    { x: 100, y: 5, rx: 24, ry: 24 },\r\n    { x: 115, y: -2, rx: 24, ry: 24 },\r\n    { x: 130, y: -2, rx: 24, ry: 24 },\r\n    { x: 145, y: 0, rx: 24, ry: 24 },\r\n    { x: 160, y: 5, rx: 24, ry: 24 },\r\n    { x: 173, y: 5, rx: 24, ry: 24 },\r\n    { x: 185, y: 5, rx: 24, ry: 24 },\r\n    { x: 198, y: -3, rx: 24, ry: 24 },\r\n    { x: 215, y: 3, rx: 28, ry: 24 },\r\n    { x: 230, y: 4, rx: 30, ry: 24 },\r\n    { x: 245, y: 6, rx: 30, ry: 24 },\r\n    { x: 260, y: 6, rx: 30, ry: 24 },\r\n    { x: 270, y: 3, rx: 26, ry: 24 },\r\n    { x: 285, y: 10, rx: 30, ry: 24 },\r\n    { x: 310, y: 4, rx: 30, ry: 24 },\r\n    { x: 325, y: 4, rx: 16, ry: 16 },\r\n    { x: 339, y: 2, rx: 24, ry: 24 },\r\n    { x: 365, y: 5, rx: 44, ry: 28 },\r\n    { x: 400, y: 0, rx: 40, ry: 24 },\r\n    { x: 435, y: -5, rx: 50, ry: 30 },\r\n    { x: 465, y: 5, rx: 24, ry: 24 },\r\n    { x: 490, y: -3, rx: 38, ry: 30 },\r\n    { x: 524, y: -3, rx: 40, ry: 24 },\r\n    { x: 550, y: -10, rx: 60, ry: 50 },\r\n    { x: 595, y: 3, rx: 58, ry: 40 },\r\n    { x: 627, y: 12, rx: 24, ry: 24 },\r\n    { x: 643, y: 20, rx: 40, ry: 24 },\r\n    { x: 665, y: 19, rx: 30, ry: 24 },\r\n    { x: 695, y: 20, rx: 50, ry: 24 },\r\n    { x: 715, y: 25, rx: 45, ry: 30 },\r\n    { x: 740, y: 25, rx: 45, ry: 30 },\r\n    { x: 754, y: 17, rx: 27, ry: 24 },\r\n    { x: 766, y: 17, rx: 20, ry: 20 },\r\n    { x: 780, y: 17, rx: 25, ry: 20 },\r\n    { x: 800, y: 10, rx: 30, ry: 20 },\r\n    { x: 820, y: 10, rx: 40, ry: 40 },\r\n    { x: 860, y: 10, rx: 80, ry: 60 },\r\n    { x: 890, y: -5, rx: 24, ry: 24 },\r\n    { x: 910, y: -10, rx: 40, ry: 40 },\r\n    { x: 950, y: -18, rx: 69, ry: 50 },\r\n    { x: 990, y: -18, rx: 40, ry: 30 },\r\n    { x: 1010, y: 0, rx: 40, ry: 30 },\r\n    { x: 1030, y: 10, rx: 24, ry: 24 },\r\n    { x: 1050, y: 8, rx: 24, ry: 24 },\r\n    { x: 1065, y: 10, rx: 24, ry: 24 },\r\n    { x: 1090, y: 15, rx: 50, ry: 24 },\r\n    { x: 1115, y: 20, rx: 24, ry: 24 },\r\n    { x: 1135, y: 25, rx: 40, ry: 24 },\r\n    { x: 1155, y: 25, rx: 40, ry: 24 },\r\n    { x: 1180, y: 20, rx: 38, ry: 25 },\r\n    { x: 1200, y: 100, rx: 70, ry: 40 },\r\n];\r\nlet noiseY;\r\nlet clouds = [];\r\nlet bubbles = [];\r\n\r\nexport function setupLandscape(p) {\r\n    for (let i = 0; i < 3; i++) { // initialize the clouds\r\n        clouds[i] = new Cloud(p, num_clouds - i);\r\n    }\r\n\r\n    for (let i = 0; i < 30; i++) { // initialize the bubbles\r\n        bubbles[i] = new Bubble(p,\r\n            p.random(0, p.width),\r\n            p.random(-1.5, -1),\r\n            p.random(10, 30)\r\n        );\r\n    }\r\n\r\n    noiseY = (p.height * 3) / 4; // y-noise for waves\r\n};\r\n\r\n\r\nexport function drawLandscape(p, temperatureData, currentDate) { // this loops everything inside body\r\n  \r\n    makeClouds();\r\n    makeWaves(p);\r\n    p.noStroke();\r\n    makeBubbles();\r\n}\r\n\r\nfunction makeClouds() { // create the clouds and call their moethods\r\n    for (var i = 0; i < num_clouds; i++) {\r\n        clouds[i].move();\r\n        clouds[i].display();\r\n    }\r\n}\r\n\r\nfunction makeBubbles() { // create the bubbles and call their methods\r\n    for (let i = 0; i < num_bubbles; i++) {\r\n        bubbles[i].move();\r\n        bubbles[i].display();\r\n    }\r\n}\r\n\r\nfunction makeWaves(p) { // create the waves\r\n    createWave(0, { r: 194, g: 247, b: 254 });\r\n    createWave(65, { r: 84, g: 182, b: 282 });\r\n    createWave(80, { r: 112, g: 219, b: 245 });\r\n\r\n    function createWave(offsetY, rgb) {\r\n        p.noFill();\r\n        p.stroke(rgb.r, rgb.g, rgb.b); // draw wave\r\n        p.strokeWeight(p.height / 2);\r\n        p.beginShape(); // create shape for area under waves\r\n        p.curveVertex(0, p.height / 2);\r\n        for (let i = 0; i < p.width; i += 50) {\r\n            let y =\r\n                p.noise(p.frameCount * noiseSpeed + i) * noiseHeight +\r\n                noiseY +\r\n                offsetY; // redraw y-coordinates for waves\r\n            p.curveVertex(i, y);\r\n        }\r\n        p.curveVertex(p.width, p.height / 2);\r\n        p.endShape(p.LINES); // end shape for area under waves\r\n    }\r\n}\r\n\r\nfunction Bubble(p, xstart, yspeed, size) { // class for bubble objects\r\n    this.x = xstart; // starting x-position of bubbles\r\n    this.y = p.random(p.height, p.height * 1.5); // starting y-position of bubbles under height\r\n    this.degree = 0;\r\n    this.display = function () {\r\n        p.fill(255, 255, 255, 50);\r\n        p.ellipse(this.x, this.y, size);\r\n        p.fill(255, 255, 255, 180);\r\n        p.ellipse(this.x + 0.2 * size, this.y - 0.2 * size, 0.2 * size);\r\n    };\r\n\r\n    this.move = function () {\r\n        this.y += yspeed; // bubble movement speed\r\n        if (this.y < p.height * 0.63) {\r\n            this.y = p.height * 1.2;\r\n        }\r\n        this.x += p.cos(p.radians(this.degree)); // base x-shifts on cosine waves\r\n        this.degree += p.random(0.0, 1.0);\r\n    };\r\n}\r\n\r\nfunction Cloud(p, key) { // class for cloud objects\r\n    this.x = (p.width - 1200 * key); // initial x position\r\n    this.y = p.height / 2 - 15; // initial y position\r\n\r\n    this.display = function () {\r\n        p.stroke(255); // white stroke\r\n        p.strokeWeight(1);\r\n        p.fill(255);\r\n        p.beginShape(); // create shape for area under ellipses\r\n        for (let i = 0; i < cloud_ellipses.length; i++) {\r\n            p.ellipse( // create ellipses that form clouds\r\n                this.x + cloud_ellipses[i].x,\r\n                this.y + cloud_ellipses[i].y,\r\n                cloud_ellipses[i].rx,\r\n                cloud_ellipses[i].ry\r\n            );\r\n            p.curveVertex( // create vertices to paint area under cloud white\r\n                this.x + cloud_ellipses[i].x,\r\n                this.y + cloud_ellipses[i].y\r\n            );\r\n        }\r\n        p.curveVertex(p.width, p.height);\r\n        p.endShape(p.CLOSE); // end shape for area under ellipses\r\n    };\r\n\r\n    this.move = function () {\r\n        this.x += 0.2; // cloud movement speed\r\n\r\n        if (this.x >= p.width) {\r\n            this.x = p.width - 1200 * num_clouds; // reset cloud to this position\r\n        }\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}