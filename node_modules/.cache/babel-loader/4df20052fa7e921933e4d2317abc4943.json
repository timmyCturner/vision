{"ast":null,"code":"const env = 'browser';\nconst ImageData = self.ImageData;\nconst DOMImage = self.Image;\nexport function createCanvas(width, height) {\n  let canvas = self.document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\nexport function fetchBinary(url, {\n  withCredentials = false\n} = {}) {\n  return new Promise(function (resolve, reject) {\n    let xhr = new self.XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.withCredentials = withCredentials;\n\n    xhr.onload = function (e) {\n      if (this.status !== 200) reject(e);else resolve(this.response);\n    };\n\n    xhr.onerror = reject;\n    xhr.send();\n  });\n}\nexport function createWriteStream() {\n  throw new Error('createWriteStream does not exist in the browser');\n}\nexport function writeFile() {\n  throw new Error('writeFile does not exist in the browser');\n}\nexport { env, ImageData, DOMImage };","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/image-js/src/browser/environment.js"],"names":["env","ImageData","self","DOMImage","Image","createCanvas","width","height","canvas","document","createElement","fetchBinary","url","withCredentials","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","e","status","response","onerror","send","createWriteStream","Error","writeFile"],"mappings":"AAAA,MAAMA,GAAG,GAAG,SAAZ;AACA,MAAMC,SAAS,GAAGC,IAAI,CAACD,SAAvB;AACA,MAAME,QAAQ,GAAGD,IAAI,CAACE,KAAtB;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AAC1C,MAAIC,MAAM,GAAGN,IAAI,CAACO,QAAL,CAAcC,aAAd,CAA4B,QAA5B,CAAb;AACAF,EAAAA,MAAM,CAACF,KAAP,GAAeA,KAAf;AACAE,EAAAA,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AACA,SAAOC,MAAP;AACD;AAED,OAAO,SAASG,WAAT,CAAqBC,GAArB,EAA0B;AAAEC,EAAAA,eAAe,GAAG;AAApB,IAA8B,EAAxD,EAA4D;AACjE,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,GAAG,GAAG,IAAIf,IAAI,CAACgB,cAAT,EAAV;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBP,GAAhB,EAAqB,IAArB;AACAK,IAAAA,GAAG,CAACG,YAAJ,GAAmB,aAAnB;AACAH,IAAAA,GAAG,CAACJ,eAAJ,GAAsBA,eAAtB;;AAEAI,IAAAA,GAAG,CAACI,MAAJ,GAAa,UAAUC,CAAV,EAAa;AACxB,UAAI,KAAKC,MAAL,KAAgB,GAApB,EAAyBP,MAAM,CAACM,CAAD,CAAN,CAAzB,KACKP,OAAO,CAAC,KAAKS,QAAN,CAAP;AACN,KAHD;;AAIAP,IAAAA,GAAG,CAACQ,OAAJ,GAAcT,MAAd;AACAC,IAAAA,GAAG,CAACS,IAAJ;AACD,GAZM,CAAP;AAaD;AAED,OAAO,SAASC,iBAAT,GAA6B;AAClC,QAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;AAED,OAAO,SAASC,SAAT,GAAqB;AAC1B,QAAM,IAAID,KAAJ,CAAU,yCAAV,CAAN;AACD;AAED,SAAS5B,GAAT,EAAcC,SAAd,EAAyBE,QAAzB","sourcesContent":["const env = 'browser';\nconst ImageData = self.ImageData;\nconst DOMImage = self.Image;\n\nexport function createCanvas(width, height) {\n  let canvas = self.document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function fetchBinary(url, { withCredentials = false } = {}) {\n  return new Promise(function (resolve, reject) {\n    let xhr = new self.XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.withCredentials = withCredentials;\n\n    xhr.onload = function (e) {\n      if (this.status !== 200) reject(e);\n      else resolve(this.response);\n    };\n    xhr.onerror = reject;\n    xhr.send();\n  });\n}\n\nexport function createWriteStream() {\n  throw new Error('createWriteStream does not exist in the browser');\n}\n\nexport function writeFile() {\n  throw new Error('writeFile does not exist in the browser');\n}\n\nexport { env, ImageData, DOMImage };\n"]},"metadata":{},"sourceType":"module"}