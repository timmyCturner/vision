{"ast":null,"code":"import { drawSun } from './sun';\nconst noiseSpeed = 0.01;\nconst noiseHeight = 20;\nconst num_clouds = 3;\nconst num_bubbles = 30;\nconst smogWidth = 40;\nconst smogHeight = 20;\nconst cloud_ellipses = [{\n  x: 0,\n  y: 20,\n  rx: 70,\n  ry: 40\n}, {\n  x: 25,\n  y: -3,\n  rx: 50,\n  ry: 28\n}, {\n  x: 70,\n  y: 3,\n  rx: 50,\n  ry: 28\n}, {\n  x: 100,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 115,\n  y: -2,\n  rx: 24,\n  ry: 24\n}, {\n  x: 130,\n  y: -2,\n  rx: 24,\n  ry: 24\n}, {\n  x: 145,\n  y: 0,\n  rx: 24,\n  ry: 24\n}, {\n  x: 160,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 173,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 185,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 198,\n  y: -3,\n  rx: 24,\n  ry: 24\n}, {\n  x: 215,\n  y: 3,\n  rx: 28,\n  ry: 24\n}, {\n  x: 230,\n  y: 4,\n  rx: 30,\n  ry: 24\n}, {\n  x: 245,\n  y: 6,\n  rx: 30,\n  ry: 24\n}, {\n  x: 260,\n  y: 6,\n  rx: 30,\n  ry: 24\n}, {\n  x: 270,\n  y: 3,\n  rx: 26,\n  ry: 24\n}, {\n  x: 285,\n  y: 10,\n  rx: 30,\n  ry: 24\n}, {\n  x: 310,\n  y: 4,\n  rx: 30,\n  ry: 24\n}, {\n  x: 325,\n  y: 4,\n  rx: 16,\n  ry: 16\n}, {\n  x: 339,\n  y: 2,\n  rx: 24,\n  ry: 24\n}, {\n  x: 365,\n  y: 5,\n  rx: 44,\n  ry: 28\n}, {\n  x: 400,\n  y: 0,\n  rx: 40,\n  ry: 24\n}, {\n  x: 435,\n  y: -5,\n  rx: 50,\n  ry: 30\n}, {\n  x: 465,\n  y: 5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 490,\n  y: -3,\n  rx: 38,\n  ry: 30\n}, {\n  x: 524,\n  y: -3,\n  rx: 40,\n  ry: 24\n}, {\n  x: 550,\n  y: -10,\n  rx: 60,\n  ry: 50\n}, {\n  x: 595,\n  y: 3,\n  rx: 58,\n  ry: 40\n}, {\n  x: 627,\n  y: 12,\n  rx: 24,\n  ry: 24\n}, {\n  x: 643,\n  y: 20,\n  rx: 40,\n  ry: 24\n}, {\n  x: 665,\n  y: 19,\n  rx: 30,\n  ry: 24\n}, {\n  x: 695,\n  y: 20,\n  rx: 50,\n  ry: 24\n}, {\n  x: 715,\n  y: 25,\n  rx: 45,\n  ry: 30\n}, {\n  x: 740,\n  y: 25,\n  rx: 45,\n  ry: 30\n}, {\n  x: 754,\n  y: 17,\n  rx: 27,\n  ry: 24\n}, {\n  x: 766,\n  y: 17,\n  rx: 20,\n  ry: 20\n}, {\n  x: 780,\n  y: 17,\n  rx: 25,\n  ry: 20\n}, {\n  x: 800,\n  y: 10,\n  rx: 30,\n  ry: 20\n}, {\n  x: 820,\n  y: 10,\n  rx: 40,\n  ry: 40\n}, {\n  x: 860,\n  y: 10,\n  rx: 80,\n  ry: 60\n}, {\n  x: 890,\n  y: -5,\n  rx: 24,\n  ry: 24\n}, {\n  x: 910,\n  y: -10,\n  rx: 40,\n  ry: 40\n}, {\n  x: 950,\n  y: -18,\n  rx: 69,\n  ry: 50\n}, {\n  x: 990,\n  y: -18,\n  rx: 40,\n  ry: 30\n}, {\n  x: 1010,\n  y: 0,\n  rx: 40,\n  ry: 30\n}, {\n  x: 1030,\n  y: 10,\n  rx: 24,\n  ry: 24\n}, {\n  x: 1050,\n  y: 8,\n  rx: 24,\n  ry: 24\n}, {\n  x: 1065,\n  y: 10,\n  rx: 24,\n  ry: 24\n}, {\n  x: 1090,\n  y: 15,\n  rx: 50,\n  ry: 24\n}, {\n  x: 1115,\n  y: 20,\n  rx: 24,\n  ry: 24\n}, {\n  x: 1135,\n  y: 25,\n  rx: 40,\n  ry: 24\n}, {\n  x: 1155,\n  y: 25,\n  rx: 40,\n  ry: 24\n}, {\n  x: 1180,\n  y: 20,\n  rx: 38,\n  ry: 25\n}, {\n  x: 1200,\n  y: 100,\n  rx: 70,\n  ry: 40\n}];\nlet noiseY;\nlet clouds = [];\nlet bubbles = [];\nlet smogClouds = [];\nexport function setupLandscape(p) {\n  for (let i = 0; i < 3; i++) {\n    // initialize the clouds\n    clouds[i] = new Cloud(p, num_clouds - i);\n  }\n\n  for (let i = 0; i < 30; i++) {\n    // initialize the bubbles\n    bubbles[i] = new Bubble(p, p.random(0, p.width), p.random(-1.5, -1), p.random(10, 30));\n  }\n\n  for (let i = 0; i < 4; i++) {\n    smogClouds[i] = new SmogCloud(p);\n  }\n\n  noiseY = p.height * 3 / 4; // y-noise for waves\n}\n;\nexport function drawLandscape(p, temperatureData, currentDate) {\n  // this loops everything inside body\n  makeClouds();\n  makeWaves(p);\n  p.noStroke();\n  makeBubbles();\n  makeSmog();\n}\n\nfunction makeClouds() {\n  // create the clouds and call their moethods\n  for (var i = 0; i < num_clouds; i++) {\n    clouds[i].move();\n    clouds[i].display();\n  }\n}\n\nfunction makeSmog() {\n  for (var i = 0; i < smogClouds.length; i++) {\n    smogClouds[i].move();\n    smogClouds[i].display();\n  }\n}\n\nfunction makeBubbles() {\n  // create the bubbles and call their methods\n  for (let i = 0; i < num_bubbles; i++) {\n    bubbles[i].move();\n    bubbles[i].display();\n  }\n}\n\nfunction makeWaves(p) {\n  // create the waves\n  createWave(0, {\n    r: 194,\n    g: 247,\n    b: 254\n  });\n  createWave(65, {\n    r: 84,\n    g: 182,\n    b: 282\n  });\n  createWave(80, {\n    r: 112,\n    g: 219,\n    b: 245\n  });\n\n  function createWave(offsetY, rgb) {\n    p.noFill();\n    p.stroke(rgb.r, rgb.g, rgb.b); // draw wave\n\n    p.strokeWeight(p.height / 2);\n    p.beginShape(); // create shape for area under waves\n\n    p.curveVertex(0, p.height / 2);\n\n    for (let i = 0; i < p.width; i += 50) {\n      let y = p.noise(p.frameCount * noiseSpeed + i) * noiseHeight + noiseY + offsetY; // redraw y-coordinates for waves\n\n      p.curveVertex(i, y);\n    }\n\n    p.curveVertex(p.width, p.height / 2);\n    p.endShape(p.LINES); // end shape for area under waves\n  }\n}\n\nfunction Bubble(p, xstart, yspeed, size) {\n  // class for bubble objects\n  this.x = xstart; // starting x-position of bubbles\n\n  this.y = p.random(p.height, p.height * 1.5); // starting y-position of bubbles under height\n\n  this.degree = 0;\n\n  this.display = function () {\n    p.fill(255, 255, 255, 50);\n    p.ellipse(this.x, this.y, size);\n    p.fill(255, 255, 255, 180);\n    p.ellipse(this.x + 0.2 * size, this.y - 0.2 * size, 0.2 * size);\n  };\n\n  this.move = function () {\n    this.y += yspeed; // bubble movement speed\n\n    if (this.y < p.height * 0.63) {\n      this.y = p.height * 1.2;\n    }\n\n    this.x += p.cos(p.radians(this.degree)); // base x-shifts on cosine waves\n\n    this.degree += p.random(0.0, 1.0);\n  };\n}\n\nfunction SmogCloud(p) {\n  this.xVelocity = p.random(-2, 2); //cloud movement velocity\n\n  this.x = p.random(50, p.width);\n  this.y = p.random(50, 200);\n  this.width = p.random(100, 300);\n  this.height = p.random(50, 100);\n  this.smogBubbles = [];\n  this.opacity = p.random(50, 200);\n\n  for (let x = 0; x < 25; x++) {\n    this.smogBubbles[x] = new SmogBubble(p, this.width, this.height);\n  }\n\n  this.display = function () {\n    console.log(\"Displaying smog cloud\");\n    p.noStroke();\n    let cloudColor = p.color(100);\n    cloudColor.setAlpha(this.opacity);\n    p.fill(cloudColor);\n    p.ellipse(this.x, this.y, this.width, this.height);\n    p.beginShape();\n\n    for (let x = 0; x < this.smogBubbles.length; x++) {\n      cloudColor.setAlpha(this.smogBubbles[x].opacity);\n      p.fill(cloudColor);\n      p.ellipse(this.x + this.smogBubbles[x].xOffset, this.y + this.smogBubbles[x].yOffset, this.smogBubbles[x].rx, this.smogBubbles[x].ry);\n      p.curveVertex(this.x + this.smogBubbles[x].xOffset, this.y + this.smogBubbles[x].yOffset);\n    }\n\n    p.endShape(p.CLOSE);\n  };\n\n  this.move = function () {\n    for (let x = 0; x < this.smogBubbles.length; x++) {\n      if (Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 - 10) {\n        this.smogBubbles[x].xVelocity *= -1;\n      }\n\n      if (Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 - 10) {\n        this.smogBubbles[x].yVelocity *= -1;\n      }\n\n      if (this.smogBubbles[x].rx < 70 || this.smogBubbles[x].rx > 150) {\n        this.smogBubbles[x].rxVelocity *= -1;\n      }\n\n      if (this.smogBubbles[x].ry < 70 || this.smogBubbles[x].ry > 150) {\n        this.smogBubbles[x].ryVelocity *= -1;\n      }\n\n      this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\n      this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\n      this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\n      this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;\n    }\n\n    if (this.x > p.width) {\n      this.x = 50;\n    } else if (this.x < 0) {\n      this.x = p.width - 50;\n    }\n\n    this.x += this.xVelocity;\n  };\n}\n\nfunction SmogBubble(p, xlimit, ylimit) {\n  this.opacity = p.random(50, 200);\n  this.xVelocity = p.random(0.03, 0.07);\n  this.yVelocity = p.random(0.03, 0.07);\n  this.xOffset = p.random(xlimit / 2 * -1, xlimit / 2);\n  this.yOffset = p.random(ylimit / 2 * -1, ylimit / 2);\n  this.rx = p.random(70, 150);\n  this.ry = p.random(70, 150);\n  this.rxVelocity = p.random(0.01, 0.01);\n  this.ryVelocity = p.random(0.01, 0.02);\n}\n\nfunction Cloud(p, key) {\n  // class for cloud objects\n  this.x = p.width - 1200 * key; // initial x position\n\n  this.y = p.height / 2 - 15; // initial y position\n\n  this.display = function () {\n    p.stroke(255); // white stroke\n\n    p.strokeWeight(1);\n    p.fill(255);\n    p.beginShape(); // create shape for area under ellipses\n\n    for (let i = 0; i < cloud_ellipses.length; i++) {\n      p.ellipse( // create ellipses that form clouds\n      this.x + cloud_ellipses[i].x, this.y + cloud_ellipses[i].y, cloud_ellipses[i].rx, cloud_ellipses[i].ry);\n      p.curveVertex( // create vertices to paint area under cloud white\n      this.x + cloud_ellipses[i].x, this.y + cloud_ellipses[i].y);\n    }\n\n    p.curveVertex(p.width, p.height);\n    p.endShape(p.CLOSE); // end shape for area under ellipses\n  };\n\n  this.move = function () {\n    this.x += 0.2; // cloud movement speed\n\n    if (this.x >= p.width) {\n      this.x = p.width - 1200 * num_clouds; // reset cloud to this position\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/landscape.js"],"names":["drawSun","noiseSpeed","noiseHeight","num_clouds","num_bubbles","smogWidth","smogHeight","cloud_ellipses","x","y","rx","ry","noiseY","clouds","bubbles","smogClouds","setupLandscape","p","i","Cloud","Bubble","random","width","SmogCloud","height","drawLandscape","temperatureData","currentDate","makeClouds","makeWaves","noStroke","makeBubbles","makeSmog","move","display","length","createWave","r","g","b","offsetY","rgb","noFill","stroke","strokeWeight","beginShape","curveVertex","noise","frameCount","endShape","LINES","xstart","yspeed","size","degree","fill","ellipse","cos","radians","xVelocity","smogBubbles","opacity","SmogBubble","console","log","cloudColor","color","setAlpha","xOffset","yOffset","CLOSE","Math","abs","yVelocity","rxVelocity","ryVelocity","xlimit","ylimit","key"],"mappings":"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","sourcesContent":["import { drawSun } from './sun';\r\n\r\nconst noiseSpeed = 0.01;\r\nconst noiseHeight = 20;\r\nconst num_clouds = 3;\r\nconst num_bubbles = 30;\r\nconst smogWidth = 40;\r\nconst smogHeight = 20;\r\nconst cloud_ellipses = [\r\n    { x: 0, y: 20, rx: 70, ry: 40 },\r\n    { x: 25, y: -3, rx: 50, ry: 28 },\r\n    { x: 70, y: 3, rx: 50, ry: 28 },\r\n    { x: 100, y: 5, rx: 24, ry: 24 },\r\n    { x: 115, y: -2, rx: 24, ry: 24 },\r\n    { x: 130, y: -2, rx: 24, ry: 24 },\r\n    { x: 145, y: 0, rx: 24, ry: 24 },\r\n    { x: 160, y: 5, rx: 24, ry: 24 },\r\n    { x: 173, y: 5, rx: 24, ry: 24 },\r\n    { x: 185, y: 5, rx: 24, ry: 24 },\r\n    { x: 198, y: -3, rx: 24, ry: 24 },\r\n    { x: 215, y: 3, rx: 28, ry: 24 },\r\n    { x: 230, y: 4, rx: 30, ry: 24 },\r\n    { x: 245, y: 6, rx: 30, ry: 24 },\r\n    { x: 260, y: 6, rx: 30, ry: 24 },\r\n    { x: 270, y: 3, rx: 26, ry: 24 },\r\n    { x: 285, y: 10, rx: 30, ry: 24 },\r\n    { x: 310, y: 4, rx: 30, ry: 24 },\r\n    { x: 325, y: 4, rx: 16, ry: 16 },\r\n    { x: 339, y: 2, rx: 24, ry: 24 },\r\n    { x: 365, y: 5, rx: 44, ry: 28 },\r\n    { x: 400, y: 0, rx: 40, ry: 24 },\r\n    { x: 435, y: -5, rx: 50, ry: 30 },\r\n    { x: 465, y: 5, rx: 24, ry: 24 },\r\n    { x: 490, y: -3, rx: 38, ry: 30 },\r\n    { x: 524, y: -3, rx: 40, ry: 24 },\r\n    { x: 550, y: -10, rx: 60, ry: 50 },\r\n    { x: 595, y: 3, rx: 58, ry: 40 },\r\n    { x: 627, y: 12, rx: 24, ry: 24 },\r\n    { x: 643, y: 20, rx: 40, ry: 24 },\r\n    { x: 665, y: 19, rx: 30, ry: 24 },\r\n    { x: 695, y: 20, rx: 50, ry: 24 },\r\n    { x: 715, y: 25, rx: 45, ry: 30 },\r\n    { x: 740, y: 25, rx: 45, ry: 30 },\r\n    { x: 754, y: 17, rx: 27, ry: 24 },\r\n    { x: 766, y: 17, rx: 20, ry: 20 },\r\n    { x: 780, y: 17, rx: 25, ry: 20 },\r\n    { x: 800, y: 10, rx: 30, ry: 20 },\r\n    { x: 820, y: 10, rx: 40, ry: 40 },\r\n    { x: 860, y: 10, rx: 80, ry: 60 },\r\n    { x: 890, y: -5, rx: 24, ry: 24 },\r\n    { x: 910, y: -10, rx: 40, ry: 40 },\r\n    { x: 950, y: -18, rx: 69, ry: 50 },\r\n    { x: 990, y: -18, rx: 40, ry: 30 },\r\n    { x: 1010, y: 0, rx: 40, ry: 30 },\r\n    { x: 1030, y: 10, rx: 24, ry: 24 },\r\n    { x: 1050, y: 8, rx: 24, ry: 24 },\r\n    { x: 1065, y: 10, rx: 24, ry: 24 },\r\n    { x: 1090, y: 15, rx: 50, ry: 24 },\r\n    { x: 1115, y: 20, rx: 24, ry: 24 },\r\n    { x: 1135, y: 25, rx: 40, ry: 24 },\r\n    { x: 1155, y: 25, rx: 40, ry: 24 },\r\n    { x: 1180, y: 20, rx: 38, ry: 25 },\r\n    { x: 1200, y: 100, rx: 70, ry: 40 },\r\n];\r\nlet noiseY;\r\nlet clouds = [];\r\nlet bubbles = [];\r\nlet smogClouds = [];\r\n\r\nexport function setupLandscape(p) {\r\n    for (let i = 0; i < 3; i++) { // initialize the clouds\r\n        clouds[i] = new Cloud(p, num_clouds - i);\r\n    }\r\n\r\n    for (let i = 0; i < 30; i++) { // initialize the bubbles\r\n        bubbles[i] = new Bubble(p,\r\n            p.random(0, p.width),\r\n            p.random(-1.5, -1),\r\n            p.random(10, 30)\r\n        );\r\n    }\r\n    for(let i = 0; i < 4; i++ ) {\r\n        smogClouds[i] = new SmogCloud(p);\r\n    }\r\n\r\n    noiseY = (p.height * 3) / 4; // y-noise for waves\r\n};\r\n\r\n\r\nexport function drawLandscape(p, temperatureData, currentDate) { // this loops everything inside body\r\n  \r\n    makeClouds();\r\n    makeWaves(p);\r\n    p.noStroke();\r\n    makeBubbles();\r\n    makeSmog();\r\n}\r\n\r\nfunction makeClouds() { // create the clouds and call their moethods\r\n    for (var i = 0; i < num_clouds; i++) {\r\n        clouds[i].move();\r\n        clouds[i].display();\r\n    }\r\n}\r\n\r\nfunction makeSmog() {\r\n    for (var i = 0; i < smogClouds.length; i++) {\r\n        smogClouds[i].move();\r\n        smogClouds[i].display();\r\n    }\r\n}\r\n\r\nfunction makeBubbles() { // create the bubbles and call their methods\r\n    for (let i = 0; i < num_bubbles; i++) {\r\n        bubbles[i].move();\r\n        bubbles[i].display();\r\n    }\r\n}\r\n\r\nfunction makeWaves(p) { // create the waves\r\n    createWave(0, { r: 194, g: 247, b: 254 });\r\n    createWave(65, { r: 84, g: 182, b: 282 });\r\n    createWave(80, { r: 112, g: 219, b: 245 });\r\n\r\n    function createWave(offsetY, rgb) {\r\n        p.noFill();\r\n        p.stroke(rgb.r, rgb.g, rgb.b); // draw wave\r\n        p.strokeWeight(p.height / 2);\r\n        p.beginShape(); // create shape for area under waves\r\n        p.curveVertex(0, p.height / 2);\r\n        for (let i = 0; i < p.width; i += 50) {\r\n            let y =\r\n                p.noise(p.frameCount * noiseSpeed + i) * noiseHeight +\r\n                noiseY +\r\n                offsetY; // redraw y-coordinates for waves\r\n            p.curveVertex(i, y);\r\n        }\r\n        p.curveVertex(p.width, p.height / 2);\r\n        p.endShape(p.LINES); // end shape for area under waves\r\n    }\r\n}\r\n\r\nfunction Bubble(p, xstart, yspeed, size) { // class for bubble objects\r\n    this.x = xstart; // starting x-position of bubbles\r\n    this.y = p.random(p.height, p.height * 1.5); // starting y-position of bubbles under height\r\n    this.degree = 0;\r\n    this.display = function () {\r\n        p.fill(255, 255, 255, 50);\r\n        p.ellipse(this.x, this.y, size);\r\n        p.fill(255, 255, 255, 180);\r\n        p.ellipse(this.x + 0.2 * size, this.y - 0.2 * size, 0.2 * size);\r\n    };\r\n\r\n    this.move = function () {\r\n        this.y += yspeed; // bubble movement speed\r\n        if (this.y < p.height * 0.63) {\r\n            this.y = p.height * 1.2;\r\n        }\r\n        this.x += p.cos(p.radians(this.degree)); // base x-shifts on cosine waves\r\n        this.degree += p.random(0.0, 1.0);\r\n    };\r\n}\r\n\r\nfunction SmogCloud(p) {\r\n    this.xVelocity = p.random(-2, 2); //cloud movement velocity\r\n    this.x = p.random(50, p.width); \r\n    this.y = p.random(50, 200);\r\n    this.width = p.random(100, 300);\r\n    this.height = p.random(50, 100);\r\n    this.smogBubbles = [];\r\n    this.opacity = p.random(50,200);\r\n    for(let x = 0; x < 25; x++) {\r\n        this.smogBubbles[x] = new SmogBubble(p, this.width, this.height);\r\n    }\r\n\r\n    this.display = function() {\r\n        console.log(\"Displaying smog cloud\");\r\n        p.noStroke();\r\n        let cloudColor = p.color(100);\r\n        cloudColor.setAlpha(this.opacity);\r\n        p.fill(cloudColor);\r\n        p.ellipse(this.x, this.y, this.width, this.height);\r\n        p.beginShape();\r\n        for(let x = 0; x < this.smogBubbles.length; x++) {\r\n            cloudColor.setAlpha(this.smogBubbles[x].opacity);\r\n            p.fill(cloudColor);\r\n            p.ellipse(\r\n                this.x + this.smogBubbles[x].xOffset,\r\n                this.y + this.smogBubbles[x].yOffset,\r\n                this.smogBubbles[x].rx,\r\n                this.smogBubbles[x].ry\r\n            );\r\n            p.curveVertex(\r\n                this.x + this.smogBubbles[x].xOffset,\r\n                this.y + this.smogBubbles[x].yOffset\r\n            );\r\n        }\r\n        \r\n        p.endShape(p.CLOSE);\r\n    }\r\n\r\n    this.move = function() {\r\n        \r\n        for(let x = 0; x < this.smogBubbles.length; x++) {\r\n            if(Math.abs(this.smogBubbles[x].xOffset) > this.width/2 - 10) {\r\n                this.smogBubbles[x].xVelocity *= -1;\r\n            }\r\n            if(Math.abs(this.smogBubbles[x].yOffset) > this.height/2 - 10) {\r\n                this.smogBubbles[x].yVelocity *= -1;\r\n            }\r\n            if(this.smogBubbles[x].rx < 70 || this.smogBubbles[x].rx > 150) {\r\n                this.smogBubbles[x].rxVelocity *= -1;\r\n            }\r\n            if(this.smogBubbles[x].ry < 70 || this.smogBubbles[x].ry > 150) {\r\n                this.smogBubbles[x].ryVelocity *= -1;\r\n            }\r\n\r\n            this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\r\n            this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\r\n\r\n            this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\r\n            this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;    \r\n        }\r\n\r\n        if(this.x > p.width) {\r\n            this.x = 50;\r\n        }\r\n        else if(this.x < 0) {\r\n            this.x = p.width-50;\r\n        }\r\n        this.x += this.xVelocity;\r\n    }\r\n     \r\n}\r\n\r\nfunction SmogBubble(p, xlimit, ylimit) {\r\n    this.opacity = p.random(50,200);\r\n    this.xVelocity = p.random(0.03, 0.07);\r\n    this.yVelocity = p.random(0.03, 0.07);\r\n    this.xOffset = p.random((xlimit/2)*(-1), xlimit/2);\r\n    this.yOffset = p.random((ylimit/2)*(-1), ylimit/2);\r\n    this.rx = p.random(70, 150);\r\n    this.ry = p.random(70, 150);\r\n\r\n    this.rxVelocity = p.random(0.01, 0.01);\r\n    this.ryVelocity = p.random(0.01, 0.02);\r\n}\r\n\r\nfunction Cloud(p, key) { // class for cloud objects\r\n    this.x = (p.width - 1200 * key); // initial x position\r\n    this.y = p.height / 2 - 15; // initial y position\r\n\r\n    this.display = function () {\r\n        p.stroke(255); // white stroke\r\n        p.strokeWeight(1);\r\n        p.fill(255);\r\n        p.beginShape(); // create shape for area under ellipses\r\n        for (let i = 0; i < cloud_ellipses.length; i++) {\r\n            p.ellipse( // create ellipses that form clouds\r\n                this.x + cloud_ellipses[i].x,\r\n                this.y + cloud_ellipses[i].y,\r\n                cloud_ellipses[i].rx,\r\n                cloud_ellipses[i].ry\r\n            );\r\n            p.curveVertex( // create vertices to paint area under cloud white\r\n                this.x + cloud_ellipses[i].x,\r\n                this.y + cloud_ellipses[i].y\r\n            );\r\n        }\r\n        p.curveVertex(p.width, p.height);\r\n        p.endShape(p.CLOSE); // end shape for area under ellipses\r\n    };\r\n\r\n    this.move = function () {\r\n        this.x += 0.2; // cloud movement speed\r\n\r\n        if (this.x >= p.width) {\r\n            this.x = p.width - 1200 * num_clouds; // reset cloud to this position\r\n        }\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}