{"ast":null,"code":"'use strict';\n\nconst defaultOptions = {\n  degree: 1,\n  constant: 1,\n  scale: 1\n};\n\nclass PolynomialKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.degree = options.degree;\n    this.constant = options.constant;\n    this.scale = options.scale;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n\n    for (var i = 0; i < x.length; i++) {\n      sum += x[i] * y[i];\n    }\n\n    return Math.pow(this.scale * sum + this.constant, this.degree);\n  }\n\n}\n\nmodule.exports = PolynomialKernel;","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/ml-kernel-polynomial/polynomial-kernel.js"],"names":["defaultOptions","degree","constant","scale","PolynomialKernel","constructor","options","Object","assign","compute","x","y","sum","i","length","Math","pow","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,CADa;AAErBC,EAAAA,QAAQ,EAAE,CAFW;AAGrBC,EAAAA,KAAK,EAAE;AAHc,CAAvB;;AAMA,MAAMC,gBAAN,CAAuB;AACrBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnBA,IAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,cAAlB,EAAkCM,OAAlC,CAAV;AAEA,SAAKL,MAAL,GAAcK,OAAO,CAACL,MAAtB;AACA,SAAKC,QAAL,GAAgBI,OAAO,CAACJ,QAAxB;AACA,SAAKC,KAAL,GAAaG,OAAO,CAACH,KAArB;AACD;;AAEDM,EAAAA,OAAO,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACZ,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAAC,CAACI,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjCD,MAAAA,GAAG,IAAIF,CAAC,CAACG,CAAD,CAAD,GAAOF,CAAC,CAACE,CAAD,CAAf;AACD;;AACD,WAAOE,IAAI,CAACC,GAAL,CAAS,KAAKb,KAAL,GAAaS,GAAb,GAAmB,KAAKV,QAAjC,EAA2C,KAAKD,MAAhD,CAAP;AACD;;AAfoB;;AAkBvBgB,MAAM,CAACC,OAAP,GAAiBd,gBAAjB","sourcesContent":["'use strict';\n\nconst defaultOptions = {\n  degree: 1,\n  constant: 1,\n  scale: 1\n};\n\nclass PolynomialKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    this.degree = options.degree;\n    this.constant = options.constant;\n    this.scale = options.scale;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    for (var i = 0; i < x.length; i++) {\n      sum += x[i] * y[i];\n    }\n    return Math.pow(this.scale * sum + this.constant, this.degree);\n  }\n}\n\nmodule.exports = PolynomialKernel;\n"]},"metadata":{},"sourceType":"script"}