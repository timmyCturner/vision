{"ast":null,"code":"let smogClouds = [];\n\nclass SmogCloud {\n  constructor(p) {\n    this.xVelocity = p.random(-2, 2); //cloud movement velocity\n\n    this.x = p.random(50, p.width);\n    this.y = p.random(50, 200);\n    this.width = p.random(100, 300);\n    this.height = p.random(50, 100);\n    this.smogBubbles = [];\n    this.opacity = p.random(50, 200);\n\n    for (let x = 0; x < 25; x++) {\n      this.smogBubbles[x] = new SmogBubble(p, this.width, this.height);\n    }\n\n    this.display = function () {\n      // console.log(\"Displaying smog cloud\");\n      p.noStroke();\n      let cloudColor = p.color(100);\n      cloudColor.setAlpha(this.opacity);\n      p.fill(cloudColor);\n      p.ellipse(this.x, this.y, this.width, this.height);\n      p.beginShape();\n\n      for (let x = 0; x < this.smogBubbles.length; x++) {\n        cloudColor.setAlpha(this.smogBubbles[x].opacity);\n        p.fill(cloudColor);\n        p.ellipse(this.x + this.smogBubbles[x].xOffset, this.y + this.smogBubbles[x].yOffset, this.smogBubbles[x].rx, this.smogBubbles[x].ry);\n        p.curveVertex(this.x + this.smogBubbles[x].xOffset, this.y + this.smogBubbles[x].yOffset);\n      }\n\n      p.endShape(p.CLOSE);\n    };\n\n    this.move = function () {\n      for (let x = 0; x < this.smogBubbles.length; x++) {\n        if (Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 - 10) {\n          this.smogBubbles[x].xVelocity *= -1;\n        }\n\n        if (Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 - 10) {\n          this.smogBubbles[x].yVelocity *= -1;\n        }\n\n        if (this.smogBubbles[x].rx < 70 || this.smogBubbles[x].rx > 150) {\n          this.smogBubbles[x].rxVelocity *= -1;\n        }\n\n        if (this.smogBubbles[x].ry < 70 || this.smogBubbles[x].ry > 150) {\n          this.smogBubbles[x].ryVelocity *= -1;\n        }\n\n        this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\n        this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\n        this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\n        this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;\n      }\n\n      if (this.x > p.width) {\n        this.x = 50;\n      } else if (this.x < 0) {\n        this.x = p.width - 50;\n      }\n\n      this.x += this.xVelocity;\n    };\n  }\n\n}\n\nclass SmogBubble {\n  constructor(p, xlimit, ylimit) {\n    this.opacity = p.random(50, 200);\n    this.xVelocity = p.random(0.03, 0.07);\n    this.yVelocity = p.random(0.03, 0.07);\n    this.xOffset = p.random(xlimit / 2 * -1, xlimit / 2);\n    this.yOffset = p.random(ylimit / 2 * -1, ylimit / 2);\n    this.rx = p.random(70, 150);\n    this.ry = p.random(70, 150);\n    this.rxVelocity = p.random(0.01, 0.01);\n    this.ryVelocity = p.random(0.01, 0.02);\n  }\n\n}\n\nexport function setupSmogClouds(p) {\n  for (let i = 0; i < 4; i++) {\n    smogClouds[i] = new SmogCloud(p);\n  }\n}\nexport function drawSmogClouds(p) {\n  for (var i = 0; i < smogClouds.length; i++) {\n    smogClouds[i].move();\n    smogClouds[i].display();\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/smogClouds.js"],"names":["smogClouds","SmogCloud","constructor","p","xVelocity","random","x","width","y","height","smogBubbles","opacity","SmogBubble","display","noStroke","cloudColor","color","setAlpha","fill","ellipse","beginShape","length","xOffset","yOffset","rx","ry","curveVertex","endShape","CLOSE","move","Math","abs","yVelocity","rxVelocity","ryVelocity","xlimit","ylimit","setupSmogClouds","i","drawSmogClouds"],"mappings":"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","sourcesContent":["let smogClouds = [];\r\n\r\nclass SmogCloud {\r\n    constructor(p) {\r\n        this.xVelocity = p.random(-2, 2); //cloud movement velocity\r\n        this.x = p.random(50, p.width);\r\n        this.y = p.random(50, 200);\r\n        this.width = p.random(100, 300);\r\n        this.height = p.random(50, 100);\r\n        this.smogBubbles = [];\r\n        this.opacity = p.random(50, 200);\r\n        \r\n        for (let x = 0; x < 25; x++) {\r\n            this.smogBubbles[x] = new SmogBubble(p, this.width, this.height);\r\n        }\r\n\r\n        this.display = function () {\r\n            // console.log(\"Displaying smog cloud\");\r\n            p.noStroke();\r\n            let cloudColor = p.color(100);\r\n            cloudColor.setAlpha(this.opacity);\r\n            p.fill(cloudColor);\r\n            p.ellipse(this.x, this.y, this.width, this.height);\r\n            p.beginShape();\r\n            for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                cloudColor.setAlpha(this.smogBubbles[x].opacity);\r\n                p.fill(cloudColor);\r\n                p.ellipse(\r\n                    this.x + this.smogBubbles[x].xOffset,\r\n                    this.y + this.smogBubbles[x].yOffset,\r\n                    this.smogBubbles[x].rx,\r\n                    this.smogBubbles[x].ry\r\n                );\r\n                p.curveVertex(\r\n                    this.x + this.smogBubbles[x].xOffset,\r\n                    this.y + this.smogBubbles[x].yOffset\r\n                );\r\n            }\r\n\r\n            p.endShape(p.CLOSE);\r\n        };\r\n\r\n        this.move = function () {\r\n            for (let x = 0; x < this.smogBubbles.length; x++) {\r\n                if (Math.abs(this.smogBubbles[x].xOffset) > this.width / 2 - 10) {\r\n                    this.smogBubbles[x].xVelocity *= -1;\r\n                }\r\n                if (Math.abs(this.smogBubbles[x].yOffset) > this.height / 2 - 10) {\r\n                    this.smogBubbles[x].yVelocity *= -1;\r\n                }\r\n                if (this.smogBubbles[x].rx < 70 || this.smogBubbles[x].rx > 150) {\r\n                    this.smogBubbles[x].rxVelocity *= -1;\r\n                }\r\n                if (this.smogBubbles[x].ry < 70 || this.smogBubbles[x].ry > 150) {\r\n                    this.smogBubbles[x].ryVelocity *= -1;\r\n                }\r\n\r\n                this.smogBubbles[x].xOffset += this.smogBubbles[x].xVelocity;\r\n                this.smogBubbles[x].yOffset += this.smogBubbles[x].yVelocity;\r\n\r\n                this.smogBubbles[x].rx += this.smogBubbles[x].rxVelocity;\r\n                this.smogBubbles[x].ry += this.smogBubbles[x].ryVelocity;\r\n            }\r\n\r\n            if (this.x > p.width) {\r\n                this.x = 50;\r\n            } else if (this.x < 0) {\r\n                this.x = p.width - 50;\r\n            }\r\n            this.x += this.xVelocity;\r\n        };\r\n    }\r\n}\r\n\r\nclass SmogBubble {\r\n    constructor(p, xlimit, ylimit) {\r\n        this.opacity = p.random(50, 200);\r\n        this.xVelocity = p.random(0.03, 0.07);\r\n        this.yVelocity = p.random(0.03, 0.07);\r\n        this.xOffset = p.random((xlimit / 2) * -1, xlimit / 2);\r\n        this.yOffset = p.random((ylimit / 2) * -1, ylimit / 2);\r\n        this.rx = p.random(70, 150);\r\n        this.ry = p.random(70, 150);\r\n\r\n        this.rxVelocity = p.random(0.01, 0.01);\r\n        this.ryVelocity = p.random(0.01, 0.02);\r\n    }\r\n}\r\n\r\nexport function setupSmogClouds(p) {\r\n    for (let i = 0; i < 4; i++) {\r\n        smogClouds[i] = new SmogCloud(p);\r\n    }\r\n}\r\n\r\nexport function drawSmogClouds(p) {\r\n    for (var i = 0; i < smogClouds.length; i++) {\r\n        smogClouds[i].move();\r\n        smogClouds[i].display();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}