{"ast":null,"code":"let xspacing = 16; // Distance between each horizontal location\n\nlet w; // Width of entire wave\n\nlet theta = 0.0; // Start angle at 0\n\nlet amplitude = 75.0; // Height of wave\n\nlet period = 500.0; // How many pixels before the wave repeats\n\nlet dx; // Value for incrementing x\n\nlet yvalues; // Using an array to store height values for the wave\n\nfunction setup() {\n  createCanvas(710, 400);\n  w = width + 16;\n  dx = TWO_PI / period * xspacing;\n  yvalues = new Array(floor(w / xspacing));\n}\n\nfunction draw() {\n  background(0);\n  calcWave();\n  renderWave();\n}\n\nfunction calcWave() {\n  // Increment theta (try different values for\n  // 'angular velocity' here)\n  theta += 0.02; // For every x value, calculate a y value with sine function\n\n  let x = theta;\n\n  for (let i = 0; i < yvalues.length; i++) {\n    yvalues[i] = sin(x) * amplitude;\n    x += dx;\n  }\n}\n\nfunction renderWave() {\n  noStroke();\n  fill(255); // A simple way to draw the wave with an ellipse at each location\n\n  for (let x = 0; x < yvalues.length; x++) {\n    ellipse(x * xspacing, height / 2 + yvalues[x], 16, 16);\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/samiea.github.io/react-deploy/src/sketches/wave.js"],"names":["xspacing","w","theta","amplitude","period","dx","yvalues","setup","createCanvas","width","TWO_PI","Array","floor","draw","background","calcWave","renderWave","x","i","length","sin","noStroke","fill","ellipse","height"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,EAAf,C,CAAmB;;AACnB,IAAIC,CAAJ,C,CAAO;;AACP,IAAIC,KAAK,GAAG,GAAZ,C,CAAiB;;AACjB,IAAIC,SAAS,GAAG,IAAhB,C,CAAsB;;AACtB,IAAIC,MAAM,GAAG,KAAb,C,CAAoB;;AACpB,IAAIC,EAAJ,C,CAAQ;;AACR,IAAIC,OAAJ,C,CAAa;;AAEb,SAASC,KAAT,GAAiB;AACfC,EAAAA,YAAY,CAAC,GAAD,EAAM,GAAN,CAAZ;AACAP,EAAAA,CAAC,GAAGQ,KAAK,GAAG,EAAZ;AACAJ,EAAAA,EAAE,GAAIK,MAAM,GAAGN,MAAV,GAAoBJ,QAAzB;AACAM,EAAAA,OAAO,GAAG,IAAIK,KAAJ,CAAUC,KAAK,CAACX,CAAC,GAAGD,QAAL,CAAf,CAAV;AACD;;AACD,SAASa,IAAT,GAAgB;AACdC,EAAAA,UAAU,CAAC,CAAD,CAAV;AACAC,EAAAA,QAAQ;AACRC,EAAAA,UAAU;AACX;;AAED,SAASD,QAAT,GAAoB;AAClB;AACA;AACAb,EAAAA,KAAK,IAAI,IAAT,CAHkB,CAKlB;;AACA,MAAIe,CAAC,GAAGf,KAAR;;AACA,OAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,OAAO,CAACa,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCZ,IAAAA,OAAO,CAACY,CAAD,CAAP,GAAaE,GAAG,CAACH,CAAD,CAAH,GAASd,SAAtB;AACAc,IAAAA,CAAC,IAAIZ,EAAL;AACD;AACF;;AACD,SAASW,UAAT,GAAsB;AACpBK,EAAAA,QAAQ;AACRC,EAAAA,IAAI,CAAC,GAAD,CAAJ,CAFoB,CAGpB;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,OAAO,CAACa,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvCM,IAAAA,OAAO,CAACN,CAAC,GAAGjB,QAAL,EAAewB,MAAM,GAAG,CAAT,GAAalB,OAAO,CAACW,CAAD,CAAnC,EAAwC,EAAxC,EAA4C,EAA5C,CAAP;AACD;AACF","sourcesContent":["let xspacing = 16; // Distance between each horizontal location\r\nlet w; // Width of entire wave\r\nlet theta = 0.0; // Start angle at 0\r\nlet amplitude = 75.0; // Height of wave\r\nlet period = 500.0; // How many pixels before the wave repeats\r\nlet dx; // Value for incrementing x\r\nlet yvalues; // Using an array to store height values for the wave\r\n\r\nfunction setup() {\r\n  createCanvas(710, 400);\r\n  w = width + 16;\r\n  dx = (TWO_PI / period) * xspacing;\r\n  yvalues = new Array(floor(w / xspacing));\r\n}\r\nfunction draw() {\r\n  background(0);\r\n  calcWave();\r\n  renderWave();\r\n}\r\n\r\nfunction calcWave() {\r\n  // Increment theta (try different values for\r\n  // 'angular velocity' here)\r\n  theta += 0.02;\r\n\r\n  // For every x value, calculate a y value with sine function\r\n  let x = theta;\r\n  for (let i = 0; i < yvalues.length; i++) {\r\n    yvalues[i] = sin(x) * amplitude;\r\n    x += dx;\r\n  }\r\n}\r\nfunction renderWave() {\r\n  noStroke();\r\n  fill(255);\r\n  // A simple way to draw the wave with an ellipse at each location\r\n  for (let x = 0; x < yvalues.length; x++) {\r\n    ellipse(x * xspacing, height / 2 + yvalues[x], 16, 16);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}