{"ast":null,"code":"export default function sketch(p) {\n  var temperatureData = null;\n  var yvalues;\n  var size_index = 0;\n\n  p.setup = () => {\n    p.createCanvas(600, 300);\n    p.noStroke();\n    yvalues = new Array(p.floor(200));\n  };\n\n  p.draw = () => {\n    p.background(\"blue\");\n    p.calcSun();\n    p.changeY();\n    p.drawSun();\n  };\n\n  p.calcSun = () => {\n    if (temperatureData != null) {\n      for (let i = 0; i < temperatureData.length / 8; i++) {\n        var average = parseFloat(temperatureData[i * 8].station); // + parseFloat(temperatureData[i * 8].land)) / 2);\n\n        yvalues[i] = average + 1;\n      }\n    }\n  };\n\n  p.changeY = () => {\n    if (size_index === yvalues.length) size_index = 0;\n    size_index += 1;\n  };\n\n  p.drawSun = () => {\n    if (temperatureData != null) {\n      p.ellipse(p.width, 0, yvalues[size_index] * 50, yvalues[size_index] * 50);\n      p.fill(\"yellow\");\n    }\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    // newProps receives two props from parent contained within default tempArray object\n    // note: tempArray is not to be confused with temperature; it's short for temporary array\n    temperatureData = newProps.temperatureData;\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/sun.js"],"names":["sketch","p","temperatureData","yvalues","size_index","setup","createCanvas","noStroke","Array","floor","draw","background","calcSun","changeY","drawSun","i","length","average","parseFloat","station","ellipse","width","fill","myCustomRedrawAccordingToNewPropsHandler","newProps"],"mappings":"AAAA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,OAAJ;AACA,MAAIC,UAAU,GAAG,CAAjB;;AAEAH,EAAAA,CAAC,CAACI,KAAF,GAAU,MAAM;AACZJ,IAAAA,CAAC,CAACK,YAAF,CAAe,GAAf,EAAoB,GAApB;AACAL,IAAAA,CAAC,CAACM,QAAF;AACAJ,IAAAA,OAAO,GAAG,IAAIK,KAAJ,CAAUP,CAAC,CAACQ,KAAF,CAAQ,GAAR,CAAV,CAAV;AACH,GAJD;;AAMAR,EAAAA,CAAC,CAACS,IAAF,GAAS,MAAM;AACXT,IAAAA,CAAC,CAACU,UAAF,CAAa,MAAb;AACAV,IAAAA,CAAC,CAACW,OAAF;AACAX,IAAAA,CAAC,CAACY,OAAF;AACAZ,IAAAA,CAAC,CAACa,OAAF;AACH,GALD;;AAOAb,EAAAA,CAAC,CAACW,OAAF,GAAY,MAAM;AACd,QAAIV,eAAe,IAAI,IAAvB,EAA6B;AACzB,WAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,eAAe,CAACc,MAAhB,GAAyB,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,YAAIE,OAAO,GAAGC,UAAU,CAAChB,eAAe,CAACa,CAAC,GAAG,CAAL,CAAf,CAAuBI,OAAxB,CAAxB,CADiD,CACS;;AAC1DhB,QAAAA,OAAO,CAACY,CAAD,CAAP,GAAaE,OAAO,GAAG,CAAvB;AACH;AACJ;AACJ,GAPD;;AASAhB,EAAAA,CAAC,CAACY,OAAF,GAAY,MAAM;AACd,QAAIT,UAAU,KAAKD,OAAO,CAACa,MAA3B,EAAmCZ,UAAU,GAAG,CAAb;AAEnCA,IAAAA,UAAU,IAAI,CAAd;AACH,GAJD;;AAMAH,EAAAA,CAAC,CAACa,OAAF,GAAY,MAAM;AACd,QAAIZ,eAAe,IAAI,IAAvB,EAA6B;AACzBD,MAAAA,CAAC,CAACmB,OAAF,CACInB,CAAC,CAACoB,KADN,EAEI,CAFJ,EAGIlB,OAAO,CAACC,UAAD,CAAP,GAAsB,EAH1B,EAIID,OAAO,CAACC,UAAD,CAAP,GAAsB,EAJ1B;AAMAH,MAAAA,CAAC,CAACqB,IAAF,CAAO,QAAP;AACH;AACJ,GAVD;;AAYArB,EAAAA,CAAC,CAACsB,wCAAF,GAA8CC,QAAD,IAAc;AACvD;AACA;AACAtB,IAAAA,eAAe,GAAGsB,QAAQ,CAACtB,eAA3B;AACH,GAJD;AAKH","sourcesContent":["export default function sketch(p) {\r\n    var temperatureData = null;\r\n    var yvalues;\r\n    var size_index = 0;\r\n\r\n    p.setup = () => {\r\n        p.createCanvas(600, 300);\r\n        p.noStroke();\r\n        yvalues = new Array(p.floor(200));\r\n    };\r\n\r\n    p.draw = () => {\r\n        p.background(\"blue\");\r\n        p.calcSun();\r\n        p.changeY();\r\n        p.drawSun();\r\n    };\r\n\r\n    p.calcSun = () => {\r\n        if (temperatureData != null) {\r\n            for (let i = 0; i < temperatureData.length / 8; i++) {\r\n                var average = parseFloat(temperatureData[i * 8].station); // + parseFloat(temperatureData[i * 8].land)) / 2);\r\n                yvalues[i] = average + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    p.changeY = () => {\r\n        if (size_index === yvalues.length) size_index = 0;\r\n\r\n        size_index += 1;\r\n    };\r\n\r\n    p.drawSun = () => {\r\n        if (temperatureData != null) {\r\n            p.ellipse(\r\n                p.width,\r\n                0,\r\n                yvalues[size_index] * 50,\r\n                yvalues[size_index] * 50\r\n            );\r\n            p.fill(\"yellow\");\r\n        }\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n        // newProps receives two props from parent contained within default tempArray object\r\n        // note: tempArray is not to be confused with temperature; it's short for temporary array\r\n        temperatureData = newProps.temperatureData;\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}