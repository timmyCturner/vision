{"ast":null,"code":"import LinkedList from 'fast-list';\nimport Image from '../Image';\nexport default function floodFill(options = {}) {\n  const {\n    x = 0,\n    y = 0,\n    inPlace = true\n  } = options;\n  const destination = inPlace ? this : Image.createFrom(this);\n  this.checkProcessable('floodFill', {\n    bitDepth: 1\n  });\n  const bit = this.getBitXY(x, y);\n  if (bit) return destination;\n  const queue = new LinkedList();\n  queue.push(new Node(x, y));\n\n  while (queue.length > 0) {\n    const node = queue.shift();\n    destination.setBitXY(node.x, node.y);\n\n    for (let i = node.x + 1; i < this.width; i++) {\n      if (!destination.getBitXY(i, node.y) && !this.getBitXY(i, node.y)) {\n        destination.setBitXY(i, node.y);\n\n        if (node.y + 1 < this.height && !this.getBitXY(i, node.y + 1)) {\n          queue.push(new Node(i, node.y + 1));\n        }\n\n        if (node.y - 1 >= 0 && !this.getBitXY(i, node.y - 1)) {\n          queue.push(new Node(i, node.y - 1));\n        }\n      } else {\n        break;\n      }\n    } // eslint-disable-next-line for-direction\n\n\n    for (let i = node.x - 1; i >= 0; i++) {\n      if (!destination.getBitXY(i, node.y) && !this.getBitXY(i, node.y)) {\n        destination.setBitXY(i, node.y);\n\n        if (node.y + 1 < this.height && !this.getBitXY(i, node.y + 1)) {\n          queue.push(new Node(i, node.y + 1));\n        }\n\n        if (node.y - 1 >= 0 && !this.getBitXY(i, node.y - 1)) {\n          queue.push(new Node(i, node.y - 1));\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  return destination;\n}\n\nfunction Node(x, y) {\n  this.x = x;\n  this.y = y;\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/image-js/src/image/operator/floodFill.js"],"names":["LinkedList","Image","floodFill","options","x","y","inPlace","destination","createFrom","checkProcessable","bitDepth","bit","getBitXY","queue","push","Node","length","node","shift","setBitXY","i","width","height"],"mappings":"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","sourcesContent":["import LinkedList from 'fast-list';\n\nimport Image from '../Image';\n\nexport default function floodFill(options = {}) {\n  const { x = 0, y = 0, inPlace = true } = options;\n\n  const destination = inPlace ? this : Image.createFrom(this);\n\n  this.checkProcessable('floodFill', { bitDepth: 1 });\n\n  const bit = this.getBitXY(x, y);\n  if (bit) return destination;\n  const queue = new LinkedList();\n  queue.push(new Node(x, y));\n  while (queue.length > 0) {\n    const node = queue.shift();\n    destination.setBitXY(node.x, node.y);\n    for (let i = node.x + 1; i < this.width; i++) {\n      if (!destination.getBitXY(i, node.y) && !this.getBitXY(i, node.y)) {\n        destination.setBitXY(i, node.y);\n        if (node.y + 1 < this.height && !this.getBitXY(i, node.y + 1)) {\n          queue.push(new Node(i, node.y + 1));\n        }\n        if (node.y - 1 >= 0 && !this.getBitXY(i, node.y - 1)) {\n          queue.push(new Node(i, node.y - 1));\n        }\n      } else {\n        break;\n      }\n    }\n    // eslint-disable-next-line for-direction\n    for (let i = node.x - 1; i >= 0; i++) {\n      if (!destination.getBitXY(i, node.y) && !this.getBitXY(i, node.y)) {\n        destination.setBitXY(i, node.y);\n        if (node.y + 1 < this.height && !this.getBitXY(i, node.y + 1)) {\n          queue.push(new Node(i, node.y + 1));\n        }\n        if (node.y - 1 >= 0 && !this.getBitXY(i, node.y - 1)) {\n          queue.push(new Node(i, node.y - 1));\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  return destination;\n}\n\nfunction Node(x, y) {\n  this.x = x;\n  this.y = y;\n}\n"]},"metadata":{},"sourceType":"module"}