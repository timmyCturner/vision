{"ast":null,"code":"'use strict';\n\nfunction assertNumber(number) {\n  if (typeof number !== 'number') {\n    throw new TypeError('Expected a number');\n  }\n}\n\nexports.ascending = (left, right) => {\n  assertNumber(left);\n  assertNumber(right);\n\n  if (Number.isNaN(left)) {\n    return -1;\n  }\n\n  if (Number.isNaN(right)) {\n    return 1;\n  }\n\n  return left - right;\n};\n\nexports.descending = (left, right) => {\n  assertNumber(left);\n  assertNumber(right);\n\n  if (Number.isNaN(left)) {\n    return 1;\n  }\n\n  if (Number.isNaN(right)) {\n    return -1;\n  }\n\n  return right - left;\n};","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/num-sort/index.js"],"names":["assertNumber","number","TypeError","exports","ascending","left","right","Number","isNaN","descending"],"mappings":"AAAA;;AAEA,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC7B,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC/B,UAAM,IAAIC,SAAJ,CAAc,mBAAd,CAAN;AACA;AACD;;AAEDC,OAAO,CAACC,SAAR,GAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpCN,EAAAA,YAAY,CAACK,IAAD,CAAZ;AACAL,EAAAA,YAAY,CAACM,KAAD,CAAZ;;AAEA,MAAIC,MAAM,CAACC,KAAP,CAAaH,IAAb,CAAJ,EAAwB;AACvB,WAAO,CAAC,CAAR;AACA;;AAED,MAAIE,MAAM,CAACC,KAAP,CAAaF,KAAb,CAAJ,EAAyB;AACxB,WAAO,CAAP;AACA;;AAED,SAAOD,IAAI,GAAGC,KAAd;AACA,CAbD;;AAeAH,OAAO,CAACM,UAAR,GAAqB,CAACJ,IAAD,EAAOC,KAAP,KAAiB;AACrCN,EAAAA,YAAY,CAACK,IAAD,CAAZ;AACAL,EAAAA,YAAY,CAACM,KAAD,CAAZ;;AAEA,MAAIC,MAAM,CAACC,KAAP,CAAaH,IAAb,CAAJ,EAAwB;AACvB,WAAO,CAAP;AACA;;AAED,MAAIE,MAAM,CAACC,KAAP,CAAaF,KAAb,CAAJ,EAAyB;AACxB,WAAO,CAAC,CAAR;AACA;;AAED,SAAOA,KAAK,GAAGD,IAAf;AACA,CAbD","sourcesContent":["'use strict';\n\nfunction assertNumber(number) {\n\tif (typeof number !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n}\n\nexports.ascending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn -1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn 1;\n\t}\n\n\treturn left - right;\n};\n\nexports.descending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn 1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn -1;\n\t}\n\n\treturn right - left;\n};\n"]},"metadata":{},"sourceType":"script"}