{"ast":null,"code":"/**\n * Flip an image horizontally.\n * @memberof Image\n * @instance\n * @return {this}\n */\nexport default function flipX() {\n  this.checkProcessable('flipX', {\n    bitDepth: [8, 16]\n  });\n\n  for (let i = 0; i < this.height; i++) {\n    let offsetY = i * this.width * this.channels;\n\n    for (let j = 0; j < Math.floor(this.width / 2); j++) {\n      let posCurrent = j * this.channels + offsetY;\n      let posOpposite = (this.width - j - 1) * this.channels + offsetY;\n\n      for (let k = 0; k < this.channels; k++) {\n        let tmp = this.data[posCurrent + k];\n        this.data[posCurrent + k] = this.data[posOpposite + k];\n        this.data[posOpposite + k] = tmp;\n      }\n    }\n  }\n\n  return this;\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/image-js/src/image/filter/flipX.js"],"names":["flipX","checkProcessable","bitDepth","i","height","offsetY","width","channels","j","Math","floor","posCurrent","posOpposite","k","tmp","data"],"mappings":"AAAA;;;;;;AAMA,eAAe,SAASA,KAAT,GAAiB;AAC9B,OAAKC,gBAAL,CAAsB,OAAtB,EAA+B;AAC7BC,IAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,EAAJ;AADmB,GAA/B;;AAIA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,OAAO,GAAGF,CAAC,GAAG,KAAKG,KAAT,GAAiB,KAAKC,QAApC;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKJ,KAAL,GAAa,CAAxB,CAApB,EAAgDE,CAAC,EAAjD,EAAqD;AACnD,UAAIG,UAAU,GAAGH,CAAC,GAAG,KAAKD,QAAT,GAAoBF,OAArC;AACA,UAAIO,WAAW,GAAG,CAAC,KAAKN,KAAL,GAAaE,CAAb,GAAiB,CAAlB,IAAuB,KAAKD,QAA5B,GAAuCF,OAAzD;;AAEA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,QAAzB,EAAmCM,CAAC,EAApC,EAAwC;AACtC,YAAIC,GAAG,GAAG,KAAKC,IAAL,CAAUJ,UAAU,GAAGE,CAAvB,CAAV;AACA,aAAKE,IAAL,CAAUJ,UAAU,GAAGE,CAAvB,IAA4B,KAAKE,IAAL,CAAUH,WAAW,GAAGC,CAAxB,CAA5B;AACA,aAAKE,IAAL,CAAUH,WAAW,GAAGC,CAAxB,IAA6BC,GAA7B;AACD;AACF;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["/**\n * Flip an image horizontally.\n * @memberof Image\n * @instance\n * @return {this}\n */\nexport default function flipX() {\n  this.checkProcessable('flipX', {\n    bitDepth: [8, 16],\n  });\n\n  for (let i = 0; i < this.height; i++) {\n    let offsetY = i * this.width * this.channels;\n\n    for (let j = 0; j < Math.floor(this.width / 2); j++) {\n      let posCurrent = j * this.channels + offsetY;\n      let posOpposite = (this.width - j - 1) * this.channels + offsetY;\n\n      for (let k = 0; k < this.channels; k++) {\n        let tmp = this.data[posCurrent + k];\n        this.data[posCurrent + k] = this.data[posOpposite + k];\n        this.data[posOpposite + k] = tmp;\n      }\n    }\n  }\n\n  return this;\n}\n"]},"metadata":{},"sourceType":"module"}