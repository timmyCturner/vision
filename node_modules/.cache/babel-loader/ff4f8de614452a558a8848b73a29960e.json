{"ast":null,"code":"//var color ;\nexport default function sketch(p) {\n  let canvas;\n  var temp_array = null;\n  var yvalues;\n  var size_index = 0;\n\n  p.setup = () => {\n    canvas = p.createCanvas(600, 300);\n    p.noStroke();\n    yvalues = new Array(p.floor(200));\n  };\n\n  p.draw = () => {\n    //console.log('draw');\n    //console.log(this);\n    p.background('blue');\n    p.calcSun();\n    p.changeY();\n    p.drawSun(); //p.fill(color)\n    //console.log(temp_array);\n  };\n\n  p.calcSun = () => {\n    //console.log(temp_array)\n    if (temp_array != null) {\n      for (let i = 0; i < temp_array.length / 8; i++) {\n        //console.log(typeof parseFloat(temp_array[i*8].land));\n        var average = parseFloat(temp_array[i * 8].station); // + parseFloat(temp_array[i*8].land))/2);\n        //console.log(typeof average);\n\n        yvalues[i] = average + 1; //console.log(average);\n      } //console.log(typeof temp_array[200]);\n\n    }\n  };\n\n  p.changeY = () => {\n    if (size_index == yvalues.length) size_index = 0;\n    size_index += 1;\n  };\n\n  p.drawSun = () => {\n    if (temp_array != null) {\n      //console.log('here');\n      //console.log(yvalues);\n      //console.log(yvalues);\n      p.ellipse(p.width, 0, yvalues[size_index] * 50, yvalues[size_index] * 50);\n      p.fill('yellow');\n    }\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    if (canvas) {\n      //Make sure the canvas has been created\n      //console.log('customProp');\n      console.log(newProps.tempArray);\n      temp_array = newProps.tempArray; //console.log(newProps.tempArray.tempData);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/sun.js"],"names":["sketch","p","canvas","temp_array","yvalues","size_index","setup","createCanvas","noStroke","Array","floor","draw","background","calcSun","changeY","drawSun","i","length","average","parseFloat","station","ellipse","width","fill","myCustomRedrawAccordingToNewPropsHandler","newProps","console","log","tempArray"],"mappings":"AACA;AAGA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,MAAIC,MAAJ;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,OAAJ;AACA,MAAIC,UAAU,GAAC,CAAf;;AAGAJ,EAAAA,CAAC,CAACK,KAAF,GAAU,MAAM;AACZJ,IAAAA,MAAM,GAAGD,CAAC,CAACM,YAAF,CAAe,GAAf,EAAoB,GAApB,CAAT;AACAN,IAAAA,CAAC,CAACO,QAAF;AACAJ,IAAAA,OAAO,GAAG,IAAIK,KAAJ,CAAUR,CAAC,CAACS,KAAF,CAAQ,GAAR,CAAV,CAAV;AAEH,GALD;;AAOAT,EAAAA,CAAC,CAACU,IAAF,GAAS,MAAM;AACX;AACA;AACAV,IAAAA,CAAC,CAACW,UAAF,CAAa,MAAb;AACAX,IAAAA,CAAC,CAACY,OAAF;AACAZ,IAAAA,CAAC,CAACa,OAAF;AACAb,IAAAA,CAAC,CAACc,OAAF,GANW,CAOX;AACA;AACH,GATD;;AAUAd,EAAAA,CAAC,CAACY,OAAF,GAAW,MAAM;AAEf;AACA,QAAIV,UAAU,IAAI,IAAlB,EAAuB;AACrB,WAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIb,UAAU,CAACc,MAAX,GAAkB,CAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C;AACA,YAAIE,OAAO,GAAGC,UAAU,CAAChB,UAAU,CAACa,CAAC,GAAC,CAAH,CAAV,CAAgBI,OAAjB,CAAxB,CAF8C,CAEG;AACjD;;AACAhB,QAAAA,OAAO,CAACY,CAAD,CAAP,GAAaE,OAAO,GAAC,CAArB,CAJ8C,CAK9C;AACD,OAPoB,CAQrB;;AACD;AACF,GAbD;;AAcAjB,EAAAA,CAAC,CAACa,OAAF,GAAW,MAAM;AACf,QAAIT,UAAU,IAAID,OAAO,CAACa,MAA1B,EACEZ,UAAU,GAAG,CAAb;AAEFA,IAAAA,UAAU,IAAE,CAAZ;AACD,GALD;;AAMAJ,EAAAA,CAAC,CAACc,OAAF,GAAW,MAAM;AACf,QAAIZ,UAAU,IAAI,IAAlB,EAAuB;AACrB;AACA;AAEE;AACAF,MAAAA,CAAC,CAACoB,OAAF,CAAUpB,CAAC,CAACqB,KAAZ,EAAmB,CAAnB,EAAsBlB,OAAO,CAACC,UAAD,CAAP,GAAoB,EAA1C,EAA8CD,OAAO,CAACC,UAAD,CAAP,GAAoB,EAAlE;AACAJ,MAAAA,CAAC,CAACsB,IAAF,CAAO,QAAP;AAEH;AACF,GAVD;;AAWAtB,EAAAA,CAAC,CAACuB,wCAAF,GAA8CC,QAAD,IAAc;AACzD,QAAGvB,MAAH,EAAU;AAAE;AACV;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,SAArB;AACAzB,MAAAA,UAAU,GAAGsB,QAAQ,CAACG,SAAtB,CAHQ,CAIR;AAED;AAEF,GATD;AAaH","sourcesContent":["\r\n//var color ;\r\n\r\n\r\nexport default function sketch(p) {\r\n    let canvas;\r\n    var temp_array = null;\r\n    var yvalues;\r\n    var size_index=0;\r\n\r\n\r\n    p.setup = () => {\r\n        canvas = p.createCanvas(600, 300);\r\n        p.noStroke();\r\n        yvalues = new Array(p.floor(200));\r\n\r\n    }\r\n\r\n    p.draw = () => {\r\n        //console.log('draw');\r\n        //console.log(this);\r\n        p.background('blue');\r\n        p.calcSun();\r\n        p.changeY();\r\n        p.drawSun();\r\n        //p.fill(color)\r\n        //console.log(temp_array);\r\n    }\r\n    p.calcSun= () => {\r\n\r\n      //console.log(temp_array)\r\n      if (temp_array != null){\r\n        for (let i = 0; i < (temp_array.length/8); i++) {\r\n          //console.log(typeof parseFloat(temp_array[i*8].land));\r\n          var average = parseFloat(temp_array[i*8].station)// + parseFloat(temp_array[i*8].land))/2);\r\n          //console.log(typeof average);\r\n          yvalues[i] = average+1;\r\n          //console.log(average);\r\n        }\r\n        //console.log(typeof temp_array[200]);\r\n      }\r\n    }\r\n    p.changeY= () => {\r\n      if (size_index == yvalues.length)\r\n        size_index = 0;\r\n\r\n      size_index+=1\r\n    }\r\n    p.drawSun= () => {\r\n      if (temp_array != null){\r\n        //console.log('here');\r\n        //console.log(yvalues);\r\n\r\n          //console.log(yvalues);\r\n          p.ellipse(p.width, 0, yvalues[size_index]*50, yvalues[size_index]*50);\r\n          p.fill('yellow')\r\n\r\n      }\r\n    }\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n      if(canvas){ //Make sure the canvas has been created\r\n        //console.log('customProp');\r\n        console.log(newProps.tempArray);\r\n        temp_array = newProps.tempArray\r\n        //console.log(newProps.tempArray.tempData);\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}