{"ast":null,"code":"//var yvalues;\n//var size_index = 0;\nvar currentY_value = 0;\nexport function setupSun(p) {\n  //p.noStroke();\n  //yvalues = new Array(p.floor(200));\n  p.background(\"blue\");\n}\nexport function sun(p, temperatureData, current_date) {\n  calcSun(temperatureData, current_date); //changeY(current_date);\n  //console.log(temperatureData);\n\n  drawSun(p, temperatureData);\n}\n\nfunction calcSun(temperatureData, current_date) {\n  if (temperatureData != null) {\n    //get current date based on scroller\n    //get year\n    var currentDate = current_date.getFullYear();\n\n    if (currentDate == 2020) {\n      currentDate = 2015;\n    }\n\n    var index = (currentDate - 1880) * temperatureData.length / 140 - 100;\n    var i = Math.round(index);\n    var average = 0;\n\n    for (var count = 0; count < 100; count++) {\n      average += temperatureData[i + count].station;\n    } //console.log(i);\n\n\n    currentY_value = average / 100 + 2; //yvalues[i] = average + 1;\n\n    /*for (let i = 0; i < temperatureData.length / 8; i++) {\r\n        var average = parseFloat(temperatureData[i * 8].station); // + parseFloat(temperatureData[i * 8].land)) / 2);\r\n        yvalues[i] = average + 1;\r\n    }*/\n  }\n}\n\n;\n/*function changeY ()  {\r\n    if (size_index === yvalues.length) size_index = 0;\r\n\r\n    size_index += 1;\r\n};*/\n\nfunction drawSun(p, temperatureData) {\n  if (temperatureData != null) {\n    //console.log(currentY_value);\n    p.ellipse(p.width, 0, //yvalues[size_index] * 50,\n    //yvalues[size_index] * 50\n    currentY_value * 100, currentY_value * 100);\n    p.fill(\"yellow\");\n  }\n}\n\n;","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/sun.js"],"names":["currentY_value","setupSun","p","background","sun","temperatureData","current_date","calcSun","drawSun","currentDate","getFullYear","index","length","i","Math","round","average","count","station","ellipse","width","fill"],"mappings":"AAAA;AACA;AACA,IAAIA,cAAc,GAAG,CAArB;AAEA,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACxB;AACA;AACAA,EAAAA,CAAC,CAACC,UAAF,CAAa,MAAb;AACH;AAED,OAAO,SAASC,GAAT,CAAaF,CAAb,EAAgBG,eAAhB,EAAiCC,YAAjC,EAA+C;AAElDC,EAAAA,OAAO,CAACF,eAAD,EAAiBC,YAAjB,CAAP,CAFkD,CAGlD;AACA;;AACAE,EAAAA,OAAO,CAACN,CAAD,EAAIG,eAAJ,CAAP;AACH;;AAED,SAASE,OAAT,CAAiBF,eAAjB,EAAiCC,YAAjC,EAA+C;AAC3C,MAAID,eAAe,IAAI,IAAvB,EAA6B;AAE3B;AACA;AACA,QAAII,WAAW,GAACH,YAAY,CAACI,WAAb,EAAhB;;AACA,QAAID,WAAW,IAAI,IAAnB,EAAwB;AACtBA,MAAAA,WAAW,GAAG,IAAd;AAED;;AACD,QAAIE,KAAK,GAAG,CAACF,WAAW,GAAC,IAAb,IAAmBJ,eAAe,CAACO,MAAnC,GAA0C,GAA1C,GAA+C,GAA3D;AAEA,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;AACA,QAAIK,OAAO,GAAG,CAAd;;AACA,SAAK,IAAIC,KAAK,GAAC,CAAf,EAAiBA,KAAK,GAAC,GAAvB,EAA2BA,KAAK,EAAhC,EAAmC;AACjCD,MAAAA,OAAO,IAAEX,eAAe,CAACQ,CAAC,GAACI,KAAH,CAAf,CAAyBC,OAAlC;AACD,KAf0B,CAgB3B;;;AACAlB,IAAAA,cAAc,GAAIgB,OAAO,GAAC,GAAT,GAAc,CAA/B,CAjB2B,CAkB3B;;AACE;;;;AAIH;AACJ;;AAAA;AAED;;;;;;AAMA,SAASR,OAAT,CAAiBN,CAAjB,EAAoBG,eAApB,EAAqC;AACjC,MAAIA,eAAe,IAAI,IAAvB,EAA6B;AACzB;AACAH,IAAAA,CAAC,CAACiB,OAAF,CACIjB,CAAC,CAACkB,KADN,EAEI,CAFJ,EAGI;AACA;AACApB,IAAAA,cAAc,GAAG,GALrB,EAMIA,cAAc,GAAE,GANpB;AAQAE,IAAAA,CAAC,CAACmB,IAAF,CAAO,QAAP;AACH;AACJ;;AAAA","sourcesContent":["//var yvalues;\r\n//var size_index = 0;\r\nvar currentY_value = 0;\r\n\r\nexport function setupSun(p) {\r\n    //p.noStroke();\r\n    //yvalues = new Array(p.floor(200));\r\n    p.background(\"blue\");\r\n}\r\n\r\nexport function sun(p, temperatureData, current_date) {\r\n\r\n    calcSun(temperatureData,current_date);\r\n    //changeY(current_date);\r\n    //console.log(temperatureData);\r\n    drawSun(p, temperatureData);\r\n}\r\n\r\nfunction calcSun(temperatureData,current_date) {\r\n    if (temperatureData != null) {\r\n\r\n      //get current date based on scroller\r\n      //get year\r\n      var currentDate=current_date.getFullYear()\r\n      if (currentDate == 2020){\r\n        currentDate = 2015\r\n\r\n      }\r\n      var index = (currentDate-1880)*temperatureData.length/140 -100\r\n\r\n      var i = Math.round(index)\r\n      var average = 0;\r\n      for (var count=0;count<100;count++){\r\n        average+=temperatureData[i+count].station\r\n      }\r\n      //console.log(i);\r\n      currentY_value = (average/100)+2\r\n      //yvalues[i] = average + 1;\r\n        /*for (let i = 0; i < temperatureData.length / 8; i++) {\r\n            var average = parseFloat(temperatureData[i * 8].station); // + parseFloat(temperatureData[i * 8].land)) / 2);\r\n            yvalues[i] = average + 1;\r\n        }*/\r\n    }\r\n};\r\n\r\n/*function changeY ()  {\r\n    if (size_index === yvalues.length) size_index = 0;\r\n\r\n    size_index += 1;\r\n};*/\r\n\r\nfunction drawSun(p, temperatureData) {\r\n    if (temperatureData != null) {\r\n        //console.log(currentY_value);\r\n        p.ellipse(\r\n            p.width,\r\n            0,\r\n            //yvalues[size_index] * 50,\r\n            //yvalues[size_index] * 50\r\n            currentY_value * 100,\r\n            currentY_value *100\r\n        );\r\n        p.fill(\"yellow\");\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}