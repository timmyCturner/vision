{"ast":null,"code":"'use strict';\n\nvar worker = function () {\n  var window = self.window = self;\n\n  function ManagedWorker() {\n    this._listeners = {};\n  }\n\n  ManagedWorker.prototype.on = function (event, callback) {\n    if (this._listeners[event]) throw new RangeError('there is already a listener for ' + event);\n    if (typeof callback !== 'function') throw new TypeError('callback argument must be a function');\n    this._listeners[event] = callback;\n  };\n\n  ManagedWorker.prototype._send = function (id, data, transferable) {\n    if (transferable === undefined) {\n      transferable = [];\n    } else if (!Array.isArray(transferable)) {\n      transferable = [transferable];\n    }\n\n    self.postMessage({\n      id: id,\n      data: data\n    }, transferable);\n  };\n\n  ManagedWorker.prototype._trigger = function (event, args) {\n    if (!this._listeners[event]) throw new Error('event ' + event + ' is not defined');\n\n    this._listeners[event].apply(null, args);\n  };\n\n  var worker = new ManagedWorker();\n\n  self.onmessage = function (event) {\n    switch (event.data.action) {\n      case 'exec':\n        event.data.args.unshift(function (data, transferable) {\n          worker._send(event.data.id, data, transferable);\n        });\n\n        worker._trigger(event.data.event, event.data.args);\n\n        break;\n\n      case 'ping':\n        worker._send(event.data.id, 'pong');\n\n        break;\n\n      default:\n        throw new Error('unexpected action: ' + event.data.action);\n    }\n  };\n\n  \"CODE\";\n};\n\nvar workerStr = worker.toString().split('\"CODE\";');\n\nexports.newWorkerURL = function newWorkerURL(code, deps) {\n  var blob = new Blob(['(', workerStr[0], 'importScripts.apply(self, ' + JSON.stringify(deps) + ');\\n', '(', code, ')();', workerStr[1], ')();'], {\n    type: 'application/javascript'\n  });\n  return URL.createObjectURL(blob);\n};","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/web-worker-manager/src/workerTemplate.js"],"names":["worker","window","self","ManagedWorker","_listeners","prototype","on","event","callback","RangeError","TypeError","_send","id","data","transferable","undefined","Array","isArray","postMessage","_trigger","args","Error","apply","onmessage","action","unshift","workerStr","toString","split","exports","newWorkerURL","code","deps","blob","Blob","JSON","stringify","type","URL","createObjectURL"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAG,YAAY;AACrB,MAAIC,MAAM,GAAGC,IAAI,CAACD,MAAL,GAAcC,IAA3B;;AACA,WAASC,aAAT,GAAyB;AACrB,SAAKC,UAAL,GAAkB,EAAlB;AACH;;AACDD,EAAAA,aAAa,CAACE,SAAd,CAAwBC,EAAxB,GAA6B,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AACpD,QAAI,KAAKJ,UAAL,CAAgBG,KAAhB,CAAJ,EACI,MAAM,IAAIE,UAAJ,CAAe,qCAAqCF,KAApD,CAAN;AACJ,QAAI,OAAOC,QAAP,KAAoB,UAAxB,EACI,MAAM,IAAIE,SAAJ,CAAc,sCAAd,CAAN;AACJ,SAAKN,UAAL,CAAgBG,KAAhB,IAAyBC,QAAzB;AACH,GAND;;AAOAL,EAAAA,aAAa,CAACE,SAAd,CAAwBM,KAAxB,GAAgC,UAAUC,EAAV,EAAcC,IAAd,EAAoBC,YAApB,EAAkC;AAC9D,QAAIA,YAAY,KAAKC,SAArB,EAAgC;AAC5BD,MAAAA,YAAY,GAAG,EAAf;AACH,KAFD,MAEO,IAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,YAAd,CAAL,EAAkC;AACrCA,MAAAA,YAAY,GAAG,CAACA,YAAD,CAAf;AACH;;AACDZ,IAAAA,IAAI,CAACgB,WAAL,CAAiB;AACbN,MAAAA,EAAE,EAAEA,EADS;AAEbC,MAAAA,IAAI,EAAEA;AAFO,KAAjB,EAGGC,YAHH;AAIH,GAVD;;AAWAX,EAAAA,aAAa,CAACE,SAAd,CAAwBc,QAAxB,GAAmC,UAAUZ,KAAV,EAAiBa,IAAjB,EAAuB;AACtD,QAAI,CAAC,KAAKhB,UAAL,CAAgBG,KAAhB,CAAL,EACI,MAAM,IAAIc,KAAJ,CAAU,WAAWd,KAAX,GAAmB,iBAA7B,CAAN;;AACJ,SAAKH,UAAL,CAAgBG,KAAhB,EAAuBe,KAAvB,CAA6B,IAA7B,EAAmCF,IAAnC;AACH,GAJD;;AAKA,MAAIpB,MAAM,GAAG,IAAIG,aAAJ,EAAb;;AACAD,EAAAA,IAAI,CAACqB,SAAL,GAAiB,UAAUhB,KAAV,EAAiB;AAC9B,YAAOA,KAAK,CAACM,IAAN,CAAWW,MAAlB;AACI,WAAK,MAAL;AACIjB,QAAAA,KAAK,CAACM,IAAN,CAAWO,IAAX,CAAgBK,OAAhB,CAAwB,UAAUZ,IAAV,EAAgBC,YAAhB,EAA8B;AAClDd,UAAAA,MAAM,CAACW,KAAP,CAAaJ,KAAK,CAACM,IAAN,CAAWD,EAAxB,EAA4BC,IAA5B,EAAkCC,YAAlC;AACH,SAFD;;AAGAd,QAAAA,MAAM,CAACmB,QAAP,CAAgBZ,KAAK,CAACM,IAAN,CAAWN,KAA3B,EAAkCA,KAAK,CAACM,IAAN,CAAWO,IAA7C;;AACA;;AACJ,WAAK,MAAL;AACIpB,QAAAA,MAAM,CAACW,KAAP,CAAaJ,KAAK,CAACM,IAAN,CAAWD,EAAxB,EAA4B,MAA5B;;AACA;;AACJ;AACI,cAAM,IAAIS,KAAJ,CAAU,wBAAwBd,KAAK,CAACM,IAAN,CAAWW,MAA7C,CAAN;AAXR;AAaH,GAdD;;AAeA;AACH,CA7CD;;AA+CA,IAAIE,SAAS,GAAG1B,MAAM,CAAC2B,QAAP,GAAkBC,KAAlB,CAAwB,SAAxB,CAAhB;;AAEAC,OAAO,CAACC,YAAR,GAAuB,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AACrD,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,GAAD,EAAMR,SAAS,CAAC,CAAD,CAAf,EAAoB,+BAA+BS,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA/B,GAAsD,MAA1E,EAAkF,GAAlF,EAAuFD,IAAvF,EAA6F,MAA7F,EAAqGL,SAAS,CAAC,CAAD,CAA9G,EAAmH,MAAnH,CAAT,EAAqI;AAACW,IAAAA,IAAI,EAAE;AAAP,GAArI,CAAX;AACA,SAAOC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAP;AACH,CAHD","sourcesContent":["'use strict';\n\nvar worker = function () {\n    var window = self.window = self;\n    function ManagedWorker() {\n        this._listeners = {};\n    }\n    ManagedWorker.prototype.on = function (event, callback) {\n        if (this._listeners[event])\n            throw new RangeError('there is already a listener for ' + event);\n        if (typeof callback !== 'function')\n            throw new TypeError('callback argument must be a function');\n        this._listeners[event] = callback;\n    };\n    ManagedWorker.prototype._send = function (id, data, transferable) {\n        if (transferable === undefined) {\n            transferable = [];\n        } else if (!Array.isArray(transferable)) {\n            transferable = [transferable];\n        }\n        self.postMessage({\n            id: id,\n            data: data\n        }, transferable);\n    };\n    ManagedWorker.prototype._trigger = function (event, args) {\n        if (!this._listeners[event])\n            throw new Error('event ' + event + ' is not defined');\n        this._listeners[event].apply(null, args);\n    };\n    var worker = new ManagedWorker();\n    self.onmessage = function (event) {\n        switch(event.data.action) {\n            case 'exec':\n                event.data.args.unshift(function (data, transferable) {\n                    worker._send(event.data.id, data, transferable);\n                });\n                worker._trigger(event.data.event, event.data.args);\n                break;\n            case 'ping':\n                worker._send(event.data.id, 'pong');\n                break;\n            default:\n                throw new Error('unexpected action: ' + event.data.action);\n        }\n    };\n    \"CODE\";\n};\n\nvar workerStr = worker.toString().split('\"CODE\";');\n\nexports.newWorkerURL = function newWorkerURL(code, deps) {\n    var blob = new Blob(['(', workerStr[0], 'importScripts.apply(self, ' + JSON.stringify(deps) + ');\\n', '(', code, ')();', workerStr[1], ')();'], {type: 'application/javascript'});\n    return URL.createObjectURL(blob);\n};\n"]},"metadata":{},"sourceType":"script"}