{"ast":null,"code":"let types = new Map([[1, [1, readByte]], [2, [1, readASCII]], [3, [2, readShort]], [4, [4, readLong]], [5, [8, readRational]], [6, [1, readSByte]], [7, [1, readByte]], [8, [2, readSShort]], [9, [4, readSLong]], [10, [8, readSRational]], [11, [4, readFloat]], [12, [8, readDouble]]]);\nexport function getByteLength(type, count) {\n  const val = types.get(type);\n  if (!val) throw new Error(`type not found: ${type}`);\n  return val[0] * count;\n}\nexport function readData(decoder, type, count) {\n  const val = types.get(type);\n  if (!val) throw new Error(`type not found: ${type}`);\n  return val[1](decoder, count);\n}\n\nfunction readByte(decoder, count) {\n  if (count === 1) return decoder.readUint8();\n  let array = new Uint8Array(count);\n\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint8();\n  }\n\n  return array;\n}\n\nfunction readASCII(decoder, count) {\n  let strings = [];\n  let currentString = '';\n\n  for (let i = 0; i < count; i++) {\n    let char = String.fromCharCode(decoder.readUint8());\n\n    if (char === '\\0') {\n      strings.push(currentString);\n      currentString = '';\n    } else {\n      currentString += char;\n    }\n  }\n\n  if (strings.length === 1) {\n    return strings[0];\n  } else {\n    return strings;\n  }\n}\n\nfunction readShort(decoder, count) {\n  if (count === 1) return decoder.readUint16();\n  let array = new Uint16Array(count);\n\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint16();\n  }\n\n  return array;\n}\n\nfunction readLong(decoder, count) {\n  if (count === 1) return decoder.readUint32();\n  let array = new Uint32Array(count);\n\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readUint32();\n  }\n\n  return array;\n}\n\nfunction readRational(decoder, count) {\n  if (count === 1) {\n    return decoder.readUint32() / decoder.readUint32();\n  }\n\n  let rationals = new Array(count);\n\n  for (let i = 0; i < count; i++) {\n    rationals[i] = decoder.readUint32() / decoder.readUint32();\n  }\n\n  return rationals;\n}\n\nfunction readSByte(decoder, count) {\n  if (count === 1) return decoder.readInt8();\n  let array = new Int8Array(count);\n\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt8();\n  }\n\n  return array;\n}\n\nfunction readSShort(decoder, count) {\n  if (count === 1) return decoder.readInt16();\n  let array = new Int16Array(count);\n\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt16();\n  }\n\n  return array;\n}\n\nfunction readSLong(decoder, count) {\n  if (count === 1) return decoder.readInt32();\n  let array = new Int32Array(count);\n\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readInt32();\n  }\n\n  return array;\n}\n\nfunction readSRational(decoder, count) {\n  if (count === 1) {\n    return decoder.readInt32() / decoder.readInt32();\n  }\n\n  let rationals = new Array(count);\n\n  for (let i = 0; i < count; i++) {\n    rationals[i] = decoder.readInt32() / decoder.readInt32();\n  }\n\n  return rationals;\n}\n\nfunction readFloat(decoder, count) {\n  if (count === 1) return decoder.readFloat32();\n  let array = new Float32Array(count);\n\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readFloat32();\n  }\n\n  return array;\n}\n\nfunction readDouble(decoder, count) {\n  if (count === 1) return decoder.readFloat64();\n  let array = new Float64Array(count);\n\n  for (let i = 0; i < count; i++) {\n    array[i] = decoder.readFloat64();\n  }\n\n  return array;\n}","map":{"version":3,"sources":["../src/ifdValue.ts"],"names":[],"mappings":"AAEA,IAAI,KAAK,GAAG,IAAI,GAAJ,CAGV,CACA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,QAAJ,CAAJ,CADA,EAEA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,SAAJ,CAAJ,CAFA,EAGA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,SAAJ,CAAJ,CAHA,EAIA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,QAAJ,CAAJ,CAJA,EAKA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,YAAJ,CAAJ,CALA,EAMA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,SAAJ,CAAJ,CANA,EAOA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,QAAJ,CAAJ,CAPA,EAQA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,UAAJ,CAAJ,CARA,EASA,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,SAAJ,CAAJ,CATA,EAUA,CAAC,EAAD,EAAK,CAAC,CAAD,EAAI,aAAJ,CAAL,CAVA,EAWA,CAAC,EAAD,EAAK,CAAC,CAAD,EAAI,SAAJ,CAAL,CAXA,EAYA,CAAC,EAAD,EAAK,CAAC,CAAD,EAAI,UAAJ,CAAL,CAZA,CAHU,CAAZ;AAkBA,OAAM,SAAU,aAAV,CAAwB,IAAxB,EAAsC,KAAtC,EAAmD;AACvD,QAAM,GAAG,GAAG,KAAK,CAAC,GAAN,CAAU,IAAV,CAAZ;AACA,MAAI,CAAC,GAAL,EAAU,MAAM,IAAI,KAAJ,CAAU,mBAAmB,IAAI,EAAjC,CAAN;AACV,SAAO,GAAG,CAAC,CAAD,CAAH,GAAS,KAAhB;AACD;AAED,OAAM,SAAU,QAAV,CACJ,OADI,EAEJ,IAFI,EAGJ,KAHI,EAGS;AAEb,QAAM,GAAG,GAAG,KAAK,CAAC,GAAN,CAAU,IAAV,CAAZ;AACA,MAAI,CAAC,GAAL,EAAU,MAAM,IAAI,KAAJ,CAAU,mBAAmB,IAAI,EAAjC,CAAN;AACV,SAAO,GAAG,CAAC,CAAD,CAAH,CAAO,OAAP,EAAgB,KAAhB,CAAP;AACD;;AAED,SAAS,QAAT,CAAkB,OAAlB,EAAwC,KAAxC,EAAqD;AACnD,MAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,OAAO,CAAC,SAAR,EAAP;AACjB,MAAI,KAAK,GAAG,IAAI,UAAJ,CAAe,KAAf,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,OAAO,CAAC,SAAR,EAAX;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,SAAT,CAAmB,OAAnB,EAAyC,KAAzC,EAAsD;AACpD,MAAI,OAAO,GAAG,EAAd;AACA,MAAI,aAAa,GAAG,EAApB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,QAAI,IAAI,GAAG,MAAM,CAAC,YAAP,CAAoB,OAAO,CAAC,SAAR,EAApB,CAAX;;AACA,QAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,MAAA,OAAO,CAAC,IAAR,CAAa,aAAb;AACA,MAAA,aAAa,GAAG,EAAhB;AACD,KAHD,MAGO;AACL,MAAA,aAAa,IAAI,IAAjB;AACD;AACF;;AACD,MAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,WAAO,OAAO,CAAC,CAAD,CAAd;AACD,GAFD,MAEO;AACL,WAAO,OAAP;AACD;AACF;;AAED,SAAS,SAAT,CAAmB,OAAnB,EAAyC,KAAzC,EAAsD;AACpD,MAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,OAAO,CAAC,UAAR,EAAP;AACjB,MAAI,KAAK,GAAG,IAAI,WAAJ,CAAgB,KAAhB,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,OAAO,CAAC,UAAR,EAAX;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,QAAT,CAAkB,OAAlB,EAAwC,KAAxC,EAAqD;AACnD,MAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,OAAO,CAAC,UAAR,EAAP;AACjB,MAAI,KAAK,GAAG,IAAI,WAAJ,CAAgB,KAAhB,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,OAAO,CAAC,UAAR,EAAX;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,YAAT,CAAsB,OAAtB,EAA4C,KAA5C,EAAyD;AACvD,MAAI,KAAK,KAAK,CAAd,EAAiB;AACf,WAAO,OAAO,CAAC,UAAR,KAAuB,OAAO,CAAC,UAAR,EAA9B;AACD;;AACD,MAAI,SAAS,GAAG,IAAI,KAAJ,CAAU,KAAV,CAAhB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,SAAS,CAAC,CAAD,CAAT,GAAe,OAAO,CAAC,UAAR,KAAuB,OAAO,CAAC,UAAR,EAAtC;AACD;;AACD,SAAO,SAAP;AACD;;AAED,SAAS,SAAT,CAAmB,OAAnB,EAAyC,KAAzC,EAAsD;AACpD,MAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,OAAO,CAAC,QAAR,EAAP;AACjB,MAAI,KAAK,GAAG,IAAI,SAAJ,CAAc,KAAd,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,OAAO,CAAC,QAAR,EAAX;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,UAAT,CAAoB,OAApB,EAA0C,KAA1C,EAAuD;AACrD,MAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,OAAO,CAAC,SAAR,EAAP;AACjB,MAAI,KAAK,GAAG,IAAI,UAAJ,CAAe,KAAf,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,OAAO,CAAC,SAAR,EAAX;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,SAAT,CAAmB,OAAnB,EAAyC,KAAzC,EAAsD;AACpD,MAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,OAAO,CAAC,SAAR,EAAP;AACjB,MAAI,KAAK,GAAG,IAAI,UAAJ,CAAe,KAAf,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,OAAO,CAAC,SAAR,EAAX;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,aAAT,CAAuB,OAAvB,EAA6C,KAA7C,EAA0D;AACxD,MAAI,KAAK,KAAK,CAAd,EAAiB;AACf,WAAO,OAAO,CAAC,SAAR,KAAsB,OAAO,CAAC,SAAR,EAA7B;AACD;;AACD,MAAI,SAAS,GAAG,IAAI,KAAJ,CAAU,KAAV,CAAhB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,SAAS,CAAC,CAAD,CAAT,GAAe,OAAO,CAAC,SAAR,KAAsB,OAAO,CAAC,SAAR,EAArC;AACD;;AACD,SAAO,SAAP;AACD;;AAED,SAAS,SAAT,CAAmB,OAAnB,EAAyC,KAAzC,EAAsD;AACpD,MAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,OAAO,CAAC,WAAR,EAAP;AACjB,MAAI,KAAK,GAAG,IAAI,YAAJ,CAAiB,KAAjB,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,OAAO,CAAC,WAAR,EAAX;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,UAAT,CACE,OADF,EAEE,KAFF,EAEe;AAEb,MAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,OAAO,CAAC,WAAR,EAAP;AACjB,MAAI,KAAK,GAAG,IAAI,YAAJ,CAAiB,KAAjB,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,OAAO,CAAC,WAAR,EAAX;AACD;;AACD,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["let types = new Map([\r\n    [1, [1, readByte]],\r\n    [2, [1, readASCII]],\r\n    [3, [2, readShort]],\r\n    [4, [4, readLong]],\r\n    [5, [8, readRational]],\r\n    [6, [1, readSByte]],\r\n    [7, [1, readByte]],\r\n    [8, [2, readSShort]],\r\n    [9, [4, readSLong]],\r\n    [10, [8, readSRational]],\r\n    [11, [4, readFloat]],\r\n    [12, [8, readDouble]],\r\n]);\r\nexport function getByteLength(type, count) {\r\n    const val = types.get(type);\r\n    if (!val)\r\n        throw new Error(`type not found: ${type}`);\r\n    return val[0] * count;\r\n}\r\nexport function readData(decoder, type, count) {\r\n    const val = types.get(type);\r\n    if (!val)\r\n        throw new Error(`type not found: ${type}`);\r\n    return val[1](decoder, count);\r\n}\r\nfunction readByte(decoder, count) {\r\n    if (count === 1)\r\n        return decoder.readUint8();\r\n    let array = new Uint8Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        array[i] = decoder.readUint8();\r\n    }\r\n    return array;\r\n}\r\nfunction readASCII(decoder, count) {\r\n    let strings = [];\r\n    let currentString = '';\r\n    for (let i = 0; i < count; i++) {\r\n        let char = String.fromCharCode(decoder.readUint8());\r\n        if (char === '\\0') {\r\n            strings.push(currentString);\r\n            currentString = '';\r\n        }\r\n        else {\r\n            currentString += char;\r\n        }\r\n    }\r\n    if (strings.length === 1) {\r\n        return strings[0];\r\n    }\r\n    else {\r\n        return strings;\r\n    }\r\n}\r\nfunction readShort(decoder, count) {\r\n    if (count === 1)\r\n        return decoder.readUint16();\r\n    let array = new Uint16Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        array[i] = decoder.readUint16();\r\n    }\r\n    return array;\r\n}\r\nfunction readLong(decoder, count) {\r\n    if (count === 1)\r\n        return decoder.readUint32();\r\n    let array = new Uint32Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        array[i] = decoder.readUint32();\r\n    }\r\n    return array;\r\n}\r\nfunction readRational(decoder, count) {\r\n    if (count === 1) {\r\n        return decoder.readUint32() / decoder.readUint32();\r\n    }\r\n    let rationals = new Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        rationals[i] = decoder.readUint32() / decoder.readUint32();\r\n    }\r\n    return rationals;\r\n}\r\nfunction readSByte(decoder, count) {\r\n    if (count === 1)\r\n        return decoder.readInt8();\r\n    let array = new Int8Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        array[i] = decoder.readInt8();\r\n    }\r\n    return array;\r\n}\r\nfunction readSShort(decoder, count) {\r\n    if (count === 1)\r\n        return decoder.readInt16();\r\n    let array = new Int16Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        array[i] = decoder.readInt16();\r\n    }\r\n    return array;\r\n}\r\nfunction readSLong(decoder, count) {\r\n    if (count === 1)\r\n        return decoder.readInt32();\r\n    let array = new Int32Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        array[i] = decoder.readInt32();\r\n    }\r\n    return array;\r\n}\r\nfunction readSRational(decoder, count) {\r\n    if (count === 1) {\r\n        return decoder.readInt32() / decoder.readInt32();\r\n    }\r\n    let rationals = new Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        rationals[i] = decoder.readInt32() / decoder.readInt32();\r\n    }\r\n    return rationals;\r\n}\r\nfunction readFloat(decoder, count) {\r\n    if (count === 1)\r\n        return decoder.readFloat32();\r\n    let array = new Float32Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        array[i] = decoder.readFloat32();\r\n    }\r\n    return array;\r\n}\r\nfunction readDouble(decoder, count) {\r\n    if (count === 1)\r\n        return decoder.readFloat64();\r\n    let array = new Float64Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n        array[i] = decoder.readFloat64();\r\n    }\r\n    return array;\r\n}\r\n//# sourceMappingURL=ifdValue.js.map"]},"metadata":{},"sourceType":"module"}