{"ast":null,"code":"/**\n * Nearest neighbor resizing algorithm\n * @private\n * @param {Image} newImage\n * @param {number} newWidth\n * @param {number} newHeight\n */\nexport default function nearestNeighbor(newImage, newWidth, newHeight) {\n  const wRatio = this.width / newWidth;\n  const hRatio = this.height / newHeight;\n\n  if (this.bitDepth > 1) {\n    for (let i = 0; i < newWidth; i++) {\n      const w = Math.floor((i + 0.5) * wRatio);\n\n      for (let j = 0; j < newHeight; j++) {\n        const h = Math.floor((j + 0.5) * hRatio);\n\n        for (let c = 0; c < this.channels; c++) {\n          newImage.setValueXY(i, j, c, this.getValueXY(w, h, c));\n        }\n      }\n    }\n  } else {\n    for (let i = 0; i < newWidth; i++) {\n      const w = Math.floor((i + 0.5) * wRatio);\n\n      for (let j = 0; j < newHeight; j++) {\n        const h = Math.floor((j + 0.5) * hRatio);\n\n        if (this.getBitXY(w, h)) {\n          newImage.setBitXY(i, j);\n        }\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/image-js/src/image/transform/resize/nearestNeighbor.js"],"names":["nearestNeighbor","newImage","newWidth","newHeight","wRatio","width","hRatio","height","bitDepth","i","w","Math","floor","j","h","c","channels","setValueXY","getValueXY","getBitXY","setBitXY"],"mappings":"AAAA;;;;;;;AAOA,eAAe,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,QAAnC,EAA6CC,SAA7C,EAAwD;AACrE,QAAMC,MAAM,GAAG,KAAKC,KAAL,GAAaH,QAA5B;AACA,QAAMI,MAAM,GAAG,KAAKC,MAAL,GAAcJ,SAA7B;;AAEA,MAAI,KAAKK,QAAL,GAAgB,CAApB,EAAuB;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAApB,EAA8BO,CAAC,EAA/B,EAAmC;AACjC,YAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,CAAC,GAAG,GAAL,IAAYL,MAAvB,CAAV;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,SAApB,EAA+BU,CAAC,EAAhC,EAAoC;AAClC,cAAMC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAW,CAACC,CAAC,GAAG,GAAL,IAAYP,MAAvB,CAAV;;AACA,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,QAAzB,EAAmCD,CAAC,EAApC,EAAwC;AACtCd,UAAAA,QAAQ,CAACgB,UAAT,CAAoBR,CAApB,EAAuBI,CAAvB,EAA0BE,CAA1B,EAA6B,KAAKG,UAAL,CAAgBR,CAAhB,EAAmBI,CAAnB,EAAsBC,CAAtB,CAA7B;AACD;AACF;AACF;AACF,GAVD,MAUO;AACL,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAApB,EAA8BO,CAAC,EAA/B,EAAmC;AACjC,YAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,CAAC,GAAG,GAAL,IAAYL,MAAvB,CAAV;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,SAApB,EAA+BU,CAAC,EAAhC,EAAoC;AAClC,cAAMC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAW,CAACC,CAAC,GAAG,GAAL,IAAYP,MAAvB,CAAV;;AACA,YAAI,KAAKa,QAAL,CAAcT,CAAd,EAAiBI,CAAjB,CAAJ,EAAyB;AACvBb,UAAAA,QAAQ,CAACmB,QAAT,CAAkBX,CAAlB,EAAqBI,CAArB;AACD;AACF;AACF;AACF;AACF","sourcesContent":["/**\n * Nearest neighbor resizing algorithm\n * @private\n * @param {Image} newImage\n * @param {number} newWidth\n * @param {number} newHeight\n */\nexport default function nearestNeighbor(newImage, newWidth, newHeight) {\n  const wRatio = this.width / newWidth;\n  const hRatio = this.height / newHeight;\n\n  if (this.bitDepth > 1) {\n    for (let i = 0; i < newWidth; i++) {\n      const w = Math.floor((i + 0.5) * wRatio);\n      for (let j = 0; j < newHeight; j++) {\n        const h = Math.floor((j + 0.5) * hRatio);\n        for (let c = 0; c < this.channels; c++) {\n          newImage.setValueXY(i, j, c, this.getValueXY(w, h, c));\n        }\n      }\n    }\n  } else {\n    for (let i = 0; i < newWidth; i++) {\n      const w = Math.floor((i + 0.5) * wRatio);\n      for (let j = 0; j < newHeight; j++) {\n        const h = Math.floor((j + 0.5) * hRatio);\n        if (this.getBitXY(w, h)) {\n          newImage.setBitXY(i, j);\n        }\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}