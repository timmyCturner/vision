{"ast":null,"code":"//these are gonna be the variables for our garbage collection\nvar drops = [];\nvar micro_Size = 5;\n\nclass Drop {\n  constructor(p) {\n    this.START_HEIGHT = p.height * 0.56;\n    this.x = p.random(0, p.width);\n    this.y = p.random(this.START_HEIGHT, p.height);\n  }\n\n  show(p) {\n    p.noStroke();\n    p.fill(255);\n    p.ellipse(this.x, this.y, p.random(5, micro_Size), p.random(5, micro_Size));\n  }\n\n  update(p) {\n    this.speed = this.speed = p.random(2, 4);\n    this.gravity = 1.05;\n    this.y = this.y + this.speed * this.gravity;\n\n    if (this.y > p.height) {\n      this.y = this.START_HEIGHT;\n      this.gravity = 0;\n    }\n  }\n\n}\n\nexport function setupMicroPlasticDrops(p) {\n  //\n  //set up plastic\n  //\n  for (var i = 0; i < 200; i++) {\n    drops[i] = new Drop(p);\n  }\n}\nexport function drawMicroPlasticDots(p, microGrowth2050, current_date) {\n  //calc microplastic\n  //\n  var currentDate = current_date.getFullYear(); //p.background(230, 230, 250);\n  //console.log(microGrowth2050);\n  //console.log(current_date);\n\n  for (var i = 0; i < drops.length; i++) {\n    drops[i].update(p);\n    drops[i].show(p);\n  }\n\n  if (microGrowth2050 != null) {\n    var newSize = -1 * (microGrowth2050[currentDate - 1950][1] - 367);\n    newSize = newSize * 2 + 200; //add drops\n\n    if (newSize > drops.length) {\n      for (var j = drops.length; j < newSize; j++) {\n        drops[j] = new Drop(p);\n      }\n    } //remove drops\n\n\n    if (newSize < drops.length) {\n      var diff = drops.length - newSize;\n      drops = drops.splice(diff);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/microPlastics.js"],"names":["drops","micro_Size","Drop","constructor","p","START_HEIGHT","height","x","random","width","y","show","noStroke","fill","ellipse","update","speed","gravity","setupMicroPlasticDrops","i","drawMicroPlasticDots","microGrowth2050","current_date","currentDate","getFullYear","length","newSize","j","diff","splice"],"mappings":"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","sourcesContent":["//these are gonna be the variables for our garbage collection\r\nvar drops = [];\r\nvar micro_Size = 5;\r\n\r\nclass Drop {\r\n    constructor(p) {\r\n        this.START_HEIGHT = p.height * 0.56;\r\n        this.x = p.random(0, p.width);\r\n        this.y = p.random(this.START_HEIGHT, p.height);\r\n    }\r\n\r\n    show(p) {\r\n        p.noStroke();\r\n        p.fill(255);\r\n        p.ellipse(\r\n            this.x,\r\n            this.y,\r\n            p.random(5, micro_Size),\r\n            p.random(5, micro_Size)\r\n        );\r\n    }\r\n\r\n    update(p) {\r\n        this.speed = this.speed = p.random(2, 4);\r\n        this.gravity = 1.05;\r\n        this.y = this.y + this.speed * this.gravity;\r\n\r\n        if (this.y > p.height) {\r\n            this.y = this.START_HEIGHT;\r\n            this.gravity = 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function setupMicroPlasticDrops(p) {\r\n    //\r\n    //set up plastic\r\n    //\r\n    for (var i = 0; i < 200; i++) {\r\n        drops[i] = new Drop(p);\r\n    }\r\n}\r\n\r\nexport function drawMicroPlasticDots(p, microGrowth2050, current_date) {\r\n    //calc microplastic\r\n    //\r\n    var currentDate = current_date.getFullYear();\r\n    //p.background(230, 230, 250);\r\n    //console.log(microGrowth2050);\r\n    //console.log(current_date);\r\n\r\n    for (var i = 0; i < drops.length; i++) {\r\n        drops[i].update(p);\r\n        drops[i].show(p);\r\n    }\r\n\r\n    if (microGrowth2050 != null) {\r\n        var newSize = -1 * (microGrowth2050[currentDate - 1950][1] - 367);\r\n        newSize = newSize * 2 + 200;\r\n        //add drops\r\n        if (newSize > drops.length) {\r\n            for (var j = drops.length; j < newSize; j++) {\r\n                drops[j] = new Drop(p);\r\n            }\r\n        }\r\n        //remove drops\r\n        if (newSize < drops.length) {\r\n            var diff = drops.length - newSize;\r\n            drops = drops.splice(diff);\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}