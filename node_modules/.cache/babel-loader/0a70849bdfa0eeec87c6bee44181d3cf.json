{"ast":null,"code":"import { setUpSun, drawSun, hoveredSunData, resizeSun } from \"./sun\";\nimport { setupLandscape, drawLandscape, drawSeaboard } from \"./landscape\";\nimport { setupMicroPlasticDrops, drawMicroPlasticDots, resizeMicroPlastics, hoveredMicroPlasticData } from \"./microPlastics\";\nimport { setupMacroPlastics, drawMacroPlastics, resizeMacroPlastics, hoveredMacroPlasticData } from \"./macroPlastics\";\nimport { setupMethaneBubbles, drawMethaneBubbles } from \"./methaneBubbles\";\nimport { setupSmogClouds, drawSmogClouds, hoveredSmogData } from \"./smogClouds\";\nimport { drawSky } from \"./skyColor\";\nimport { drawLegend, drawGuide } from \"./legend\";\nimport { hoveredBubbleData } from \"./methaneBubbles\";\nexport default function sketch(p) {\n  const wrapper = document.getElementById(\"page-wrapper\");\n  let showLegend = true;\n  let temperatureData = null;\n  let microGrowth2050 = null;\n  let macroGrowth2050 = null;\n  let currentDate = null;\n  let carbonData = null;\n  let methaneData = null;\n  let seaLevelRise = null;\n  let nitrousData = null;\n\n  p.setup = () => {\n    p.frameRate(30);\n    const canvas = p.createCanvas(wrapper.offsetWidth, window.innerHeight); // adjust to window width and height\n\n    canvas.id(\"p5-canvas\");\n    canvas.parent().remove();\n    canvas.parent(\"app\");\n    const p5Canvas = document.getElementById(\"p5-canvas\");\n    if (p5Canvas) p5Canvas.style.display = \"block\";\n    const guideButton = document.getElementById(\"guide-button\");\n    if (guideButton) guideButton.onclick = () => showLegend = !showLegend; // set guide button to show guide and (use noFill)\n\n    const playAudioButton = document.getElementById(\"play-audio-button\");\n    if (playAudioButton) playAudioButton.style.margin = '10px';\n    const slider = document.getElementById(\"slider\");\n\n    if (slider) {\n      slider.style.bottom = `-${wrapper.offsetHeight}px`;\n      slider.style.visibility = 'visible';\n    }\n\n    setUpSun(p, temperatureData, currentDate);\n    setupMethaneBubbles(p, methaneData);\n    setupLandscape(p);\n    setupSmogClouds(p); //setupMicroPlasticDrops(p);\n\n    setupMacroPlastics(p);\n  };\n\n  p.draw = () => {\n    p.clear();\n    if (carbonData) drawSky(p, carbonData, currentDate);\n    if (temperatureData) drawSun(p, temperatureData, currentDate);\n    if (temperatureData) drawLandscape(p, currentDate, seaLevelRise, temperatureData);\n    if (nitrousData) drawSmogClouds(p, nitrousData, currentDate);\n    if (methaneData) drawMethaneBubbles(p, methaneData, currentDate, seaLevelRise);\n    drawSeaboard(p);\n    drawMicroPlasticDots(p, microGrowth2050, currentDate, seaLevelRise);\n    drawMacroPlastics(p, macroGrowth2050, currentDate, seaLevelRise);\n\n    if (showLegend) {\n      p.noFill();\n      drawGuide(p);\n    } else if (hoveredBubbleData.mouseOver) {\n      const text = \"The bubbles rising up through the ocean represent methane entering the atmosphere, and increase and decrease in number accordingly.\";\n      const value = hoveredBubbleData.value ? `Value: ${hoveredBubbleData.value} ppb` : `[No Value For Current Date]`;\n      p.noFill();\n      drawLegend(p, text, value);\n    } else if (hoveredMacroPlasticData.mouseOver) {\n      const text = \"The piles or circles on top the ocean represent macroplastic, and increase and decrease in number accordingly.\\n\" + (hoveredMacroPlasticData.value ? `Macroplastic value: ${hoveredMacroPlasticData.value} tons\\n` : `[No Value For Current Date]\\n`) + \"The white dots or circles falling from top the ocean represent microplastic, and increase and decrease in number accordingly.\\n\" + (hoveredMicroPlasticData.value ? `Microplastic value: ${hoveredMicroPlasticData.value} tons` : `[No Value For Current Date]`);\n      p.noFill();\n      drawLegend(p, text, \" \");\n    } else if (hoveredSunData.mouseOver) {\n      const text = \"The sun and ocean grow and change color with the tempature of the planet.\";\n      const value = hoveredSunData.value ? `Value: ${hoveredSunData.value} degree C` : `[No Value For Current Date]`;\n      p.noFill();\n      drawLegend(p, text, value);\n    } else if (hoveredMicroPlasticData.mouseOver) {\n      const text = \"The white dots or circles falling from top the ocean represent microplastic, and increase and decrease in number accordingly.\";\n      const value = hoveredMicroPlasticData.value ? `Value: ${hoveredMicroPlasticData.value} tons` : `[No Value For Current Date]`;\n      p.noFill();\n      drawLegend(p, text, value);\n    } else if (hoveredSmogData.mouseOver) {\n      const text = \"The smog clouds represent the nitrous oxide in the atmosphere.\";\n      const value = hoveredSmogData.value ? `Value: ${hoveredSmogData.value} ppb` : `[No Value For Current Date]`;\n      p.noFill();\n      drawLegend(p, text, value);\n    }\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(wrapper.offsetWidth, p.windowHeight);\n    document.getElementById(\"slider\").style.bottom = `-${wrapper.offsetHeight}px`;\n    resizeSun(p);\n    resizeMicroPlastics(p);\n    resizeMacroPlastics(p);\n    p.redraw();\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    temperatureData = newProps.temperatureData;\n    currentDate = newProps.currentDate;\n    microGrowth2050 = newProps.microGrowth2050;\n    macroGrowth2050 = newProps.macroGrowth2050;\n    carbonData = newProps.carbonData;\n    methaneData = newProps.methaneData;\n    seaLevelRise = newProps.seaLevelRise;\n    nitrousData = newProps.nitrousData;\n    console.log(newProps);\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/sketch.js"],"names":["setUpSun","drawSun","hoveredSunData","resizeSun","setupLandscape","drawLandscape","drawSeaboard","setupMicroPlasticDrops","drawMicroPlasticDots","resizeMicroPlastics","hoveredMicroPlasticData","setupMacroPlastics","drawMacroPlastics","resizeMacroPlastics","hoveredMacroPlasticData","setupMethaneBubbles","drawMethaneBubbles","setupSmogClouds","drawSmogClouds","hoveredSmogData","drawSky","drawLegend","drawGuide","hoveredBubbleData","sketch","p","wrapper","document","getElementById","showLegend","temperatureData","microGrowth2050","macroGrowth2050","currentDate","carbonData","methaneData","seaLevelRise","nitrousData","setup","frameRate","canvas","createCanvas","offsetWidth","window","innerHeight","id","parent","remove","p5Canvas","style","display","guideButton","onclick","playAudioButton","margin","slider","bottom","offsetHeight","visibility","draw","clear","noFill","mouseOver","text","value","windowResized","resizeCanvas","windowHeight","redraw","myCustomRedrawAccordingToNewPropsHandler","newProps","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,EAA4BC,cAA5B,EAA4CC,SAA5C,QAA6D,OAA7D;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,YAAxC,QAA4D,aAA5D;AACA,SACIC,sBADJ,EAEIC,oBAFJ,EAGIC,mBAHJ,EAIIC,uBAJJ,QAKO,iBALP;AAMA,SACIC,kBADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,uBAJJ,QAKO,iBALP;AAMA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,kBAAxD;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,eAA1C,QAAiE,cAAjE;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,eAAe,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAhB;AAEA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,WAAW,GAAG,IAAlB;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,WAAW,GAAG,IAAlB;AACA,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,WAAW,GAAG,IAAlB;;AAEAZ,EAAAA,CAAC,CAACa,KAAF,GAAU,MAAM;AACZb,IAAAA,CAAC,CAACc,SAAF,CAAY,EAAZ;AACA,UAAMC,MAAM,GAAGf,CAAC,CAACgB,YAAF,CAAef,OAAO,CAACgB,WAAvB,EAAoCC,MAAM,CAACC,WAA3C,CAAf,CAFY,CAE4D;;AACxEJ,IAAAA,MAAM,CAACK,EAAP,CAAU,WAAV;AACAL,IAAAA,MAAM,CAACM,MAAP,GAAgBC,MAAhB;AACAP,IAAAA,MAAM,CAACM,MAAP,CAAc,KAAd;AAEA,UAAME,QAAQ,GAAGrB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAjB;AACA,QAAIoB,QAAJ,EAAcA,QAAQ,CAACC,KAAT,CAAeC,OAAf,GAAyB,OAAzB;AAEd,UAAMC,WAAW,GAAGxB,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB;AACA,QAAIuB,WAAJ,EAAiBA,WAAW,CAACC,OAAZ,GAAsB,MAAMvB,UAAU,GAAG,CAACA,UAA1C,CAXL,CAW2D;;AAEvE,UAAMwB,eAAe,GAAG1B,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAxB;AACA,QAAIyB,eAAJ,EAAqBA,eAAe,CAACJ,KAAhB,CAAsBK,MAAtB,GAA+B,MAA/B;AAErB,UAAMC,MAAM,GAAG5B,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;;AACA,QAAI2B,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACN,KAAP,CAAaO,MAAb,GAAuB,IAAG9B,OAAO,CAAC+B,YAAa,IAA/C;AACAF,MAAAA,MAAM,CAACN,KAAP,CAAaS,UAAb,GAA0B,SAA1B;AACH;;AAED1D,IAAAA,QAAQ,CAACyB,CAAD,EAAIK,eAAJ,EAAqBG,WAArB,CAAR;AACAlB,IAAAA,mBAAmB,CAACU,CAAD,EAAIU,WAAJ,CAAnB;AACA/B,IAAAA,cAAc,CAACqB,CAAD,CAAd;AACAR,IAAAA,eAAe,CAACQ,CAAD,CAAf,CAzBY,CA0BZ;;AACAd,IAAAA,kBAAkB,CAACc,CAAD,CAAlB;AACH,GA5BD;;AA8BAA,EAAAA,CAAC,CAACkC,IAAF,GAAS,MAAM;AACXlC,IAAAA,CAAC,CAACmC,KAAF;AACA,QAAI1B,UAAJ,EAAgBd,OAAO,CAACK,CAAD,EAAIS,UAAJ,EAAgBD,WAAhB,CAAP;AAChB,QAAIH,eAAJ,EAAqB7B,OAAO,CAACwB,CAAD,EAAIK,eAAJ,EAAqBG,WAArB,CAAP;AACrB,QAAIH,eAAJ,EAAqBzB,aAAa,CAACoB,CAAD,EAAIQ,WAAJ,EAAiBG,YAAjB,EAA+BN,eAA/B,CAAb;AACrB,QAAIO,WAAJ,EAAiBnB,cAAc,CAACO,CAAD,EAAIY,WAAJ,EAAiBJ,WAAjB,CAAd;AACjB,QAAIE,WAAJ,EAAiBnB,kBAAkB,CAACS,CAAD,EAAIU,WAAJ,EAAiBF,WAAjB,EAA8BG,YAA9B,CAAlB;AACjB9B,IAAAA,YAAY,CAACmB,CAAD,CAAZ;AACAjB,IAAAA,oBAAoB,CAACiB,CAAD,EAAIM,eAAJ,EAAqBE,WAArB,EAAkCG,YAAlC,CAApB;AACAxB,IAAAA,iBAAiB,CAACa,CAAD,EAAIO,eAAJ,EAAqBC,WAArB,EAAkCG,YAAlC,CAAjB;;AAEA,QAAIP,UAAJ,EAAgB;AACZJ,MAAAA,CAAC,CAACoC,MAAF;AACAvC,MAAAA,SAAS,CAACG,CAAD,CAAT;AACH,KAHD,MAIK,IAAIF,iBAAiB,CAACuC,SAAtB,EAAiC;AAClC,YAAMC,IAAI,GACN,qIADJ;AAEA,YAAMC,KAAK,GAAGzC,iBAAiB,CAACyC,KAAlB,GACP,UAASzC,iBAAiB,CAACyC,KAAM,MAD1B,GAEP,6BAFP;AAGAvC,MAAAA,CAAC,CAACoC,MAAF;AACAxC,MAAAA,UAAU,CAACI,CAAD,EAAIsC,IAAJ,EAAUC,KAAV,CAAV;AACH,KARI,MAQE,IAAIlD,uBAAuB,CAACgD,SAA5B,EAAuC;AAC1C,YAAMC,IAAI,GACN,sHACCjD,uBAAuB,CAACkD,KAAxB,GACM,uBAAsBlD,uBAAuB,CAACkD,KAAM,SAD1D,GAEM,+BAHP,IAIA,iIAJA,IAKCtD,uBAAuB,CAACsD,KAAxB,GACM,uBAAsBtD,uBAAuB,CAACsD,KAAM,OAD1D,GAEM,6BAPP,CADJ;AASAvC,MAAAA,CAAC,CAACoC,MAAF;AACAxC,MAAAA,UAAU,CAACI,CAAD,EAAIsC,IAAJ,EAAU,GAAV,CAAV;AACH,KAZM,MAYA,IAAI7D,cAAc,CAAC4D,SAAnB,EAA8B;AACjC,YAAMC,IAAI,GACN,2EADJ;AAEA,YAAMC,KAAK,GAAG9D,cAAc,CAAC8D,KAAf,GACP,UAAS9D,cAAc,CAAC8D,KAAM,WADvB,GAEP,6BAFP;AAGAvC,MAAAA,CAAC,CAACoC,MAAF;AACAxC,MAAAA,UAAU,CAACI,CAAD,EAAIsC,IAAJ,EAAUC,KAAV,CAAV;AACH,KARM,MAQA,IAAItD,uBAAuB,CAACoD,SAA5B,EAAuC;AAC1C,YAAMC,IAAI,GACN,+HADJ;AAEA,YAAMC,KAAK,GAAGtD,uBAAuB,CAACsD,KAAxB,GACP,UAAStD,uBAAuB,CAACsD,KAAM,OADhC,GAEP,6BAFP;AAGAvC,MAAAA,CAAC,CAACoC,MAAF;AACAxC,MAAAA,UAAU,CAACI,CAAD,EAAIsC,IAAJ,EAAUC,KAAV,CAAV;AACH,KARM,MAQA,IAAI7C,eAAe,CAAC2C,SAApB,EAA+B;AAClC,YAAMC,IAAI,GACN,gEADJ;AAEA,YAAMC,KAAK,GAAG7C,eAAe,CAAC6C,KAAhB,GACP,UAAS7C,eAAe,CAAC6C,KAAM,MADxB,GAEP,6BAFP;AAGAvC,MAAAA,CAAC,CAACoC,MAAF;AACAxC,MAAAA,UAAU,CAACI,CAAD,EAAIsC,IAAJ,EAAUC,KAAV,CAAV;AACH;AACJ,GA5DD;;AA8DAvC,EAAAA,CAAC,CAACwC,aAAF,GAAkB,MAAM;AACpBxC,IAAAA,CAAC,CAACyC,YAAF,CAAexC,OAAO,CAACgB,WAAvB,EAAoCjB,CAAC,CAAC0C,YAAtC;AACAxC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCqB,KAAlC,CAAwCO,MAAxC,GAAkD,IAAG9B,OAAO,CAAC+B,YAAa,IAA1E;AACAtD,IAAAA,SAAS,CAACsB,CAAD,CAAT;AACAhB,IAAAA,mBAAmB,CAACgB,CAAD,CAAnB;AACAZ,IAAAA,mBAAmB,CAACY,CAAD,CAAnB;AACAA,IAAAA,CAAC,CAAC2C,MAAF;AACH,GAPD;;AASA3C,EAAAA,CAAC,CAAC4C,wCAAF,GAA8CC,QAAD,IAAc;AACvDxC,IAAAA,eAAe,GAAGwC,QAAQ,CAACxC,eAA3B;AACAG,IAAAA,WAAW,GAAGqC,QAAQ,CAACrC,WAAvB;AACAF,IAAAA,eAAe,GAAGuC,QAAQ,CAACvC,eAA3B;AACAC,IAAAA,eAAe,GAAGsC,QAAQ,CAACtC,eAA3B;AACAE,IAAAA,UAAU,GAAGoC,QAAQ,CAACpC,UAAtB;AACAC,IAAAA,WAAW,GAAGmC,QAAQ,CAACnC,WAAvB;AACAC,IAAAA,YAAY,GAAGkC,QAAQ,CAAClC,YAAxB;AACAC,IAAAA,WAAW,GAAGiC,QAAQ,CAACjC,WAAvB;AACAkC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,GAVD;AAWH","sourcesContent":["import { setUpSun, drawSun, hoveredSunData, resizeSun } from \"./sun\";\r\nimport { setupLandscape, drawLandscape, drawSeaboard } from \"./landscape\";\r\nimport {\r\n    setupMicroPlasticDrops,\r\n    drawMicroPlasticDots,\r\n    resizeMicroPlastics,\r\n    hoveredMicroPlasticData,\r\n} from \"./microPlastics\";\r\nimport {\r\n    setupMacroPlastics,\r\n    drawMacroPlastics,\r\n    resizeMacroPlastics,\r\n    hoveredMacroPlasticData,\r\n} from \"./macroPlastics\";\r\nimport { setupMethaneBubbles, drawMethaneBubbles } from \"./methaneBubbles\";\r\nimport { setupSmogClouds, drawSmogClouds, hoveredSmogData } from \"./smogClouds\";\r\nimport { drawSky } from \"./skyColor\";\r\nimport { drawLegend, drawGuide } from \"./legend\";\r\nimport { hoveredBubbleData } from \"./methaneBubbles\";\r\n\r\nexport default function sketch(p) {\r\n    const wrapper = document.getElementById(\"page-wrapper\");\r\n\r\n    let showLegend = true;\r\n    let temperatureData = null;\r\n    let microGrowth2050 = null;\r\n    let macroGrowth2050 = null;\r\n    let currentDate = null;\r\n    let carbonData = null;\r\n    let methaneData = null;\r\n    let seaLevelRise = null;\r\n    let nitrousData = null;\r\n\r\n    p.setup = () => {\r\n        p.frameRate(30);\r\n        const canvas = p.createCanvas(wrapper.offsetWidth, window.innerHeight); // adjust to window width and height\r\n        canvas.id(\"p5-canvas\");\r\n        canvas.parent().remove();\r\n        canvas.parent(\"app\");\r\n\r\n        const p5Canvas = document.getElementById(\"p5-canvas\");\r\n        if (p5Canvas) p5Canvas.style.display = \"block\";\r\n\r\n        const guideButton = document.getElementById(\"guide-button\")\r\n        if (guideButton) guideButton.onclick = () => showLegend = !showLegend; // set guide button to show guide and (use noFill)\r\n\r\n        const playAudioButton = document.getElementById(\"play-audio-button\")\r\n        if (playAudioButton) playAudioButton.style.margin = '10px';\r\n\r\n        const slider = document.getElementById(\"slider\")\r\n        if (slider) {\r\n            slider.style.bottom = `-${wrapper.offsetHeight}px`;\r\n            slider.style.visibility = 'visible';\r\n        }\r\n\r\n        setUpSun(p, temperatureData, currentDate);\r\n        setupMethaneBubbles(p, methaneData);\r\n        setupLandscape(p);\r\n        setupSmogClouds(p);\r\n        //setupMicroPlasticDrops(p);\r\n        setupMacroPlastics(p);\r\n    };\r\n\r\n    p.draw = () => {\r\n        p.clear();\r\n        if (carbonData) drawSky(p, carbonData, currentDate);\r\n        if (temperatureData) drawSun(p, temperatureData, currentDate);\r\n        if (temperatureData) drawLandscape(p, currentDate, seaLevelRise, temperatureData);\r\n        if (nitrousData) drawSmogClouds(p, nitrousData, currentDate);\r\n        if (methaneData) drawMethaneBubbles(p, methaneData, currentDate, seaLevelRise);\r\n        drawSeaboard(p);\r\n        drawMicroPlasticDots(p, microGrowth2050, currentDate, seaLevelRise);\r\n        drawMacroPlastics(p, macroGrowth2050, currentDate, seaLevelRise);\r\n\r\n        if (showLegend) {\r\n            p.noFill();\r\n            drawGuide(p);\r\n        }\r\n        else if (hoveredBubbleData.mouseOver) {\r\n            const text =\r\n                \"The bubbles rising up through the ocean represent methane entering the atmosphere, and increase and decrease in number accordingly.\";\r\n            const value = hoveredBubbleData.value\r\n                ? `Value: ${hoveredBubbleData.value} ppb`\r\n                : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        } else if (hoveredMacroPlasticData.mouseOver) {\r\n            const text =\r\n                \"The piles or circles on top the ocean represent macroplastic, and increase and decrease in number accordingly.\\n\" +\r\n                (hoveredMacroPlasticData.value\r\n                    ? `Macroplastic value: ${hoveredMacroPlasticData.value} tons\\n`\r\n                    : `[No Value For Current Date]\\n`) +\r\n                \"The white dots or circles falling from top the ocean represent microplastic, and increase and decrease in number accordingly.\\n\" +\r\n                (hoveredMicroPlasticData.value\r\n                    ? `Microplastic value: ${hoveredMicroPlasticData.value} tons`\r\n                    : `[No Value For Current Date]`);\r\n            p.noFill();\r\n            drawLegend(p, text, \" \");\r\n        } else if (hoveredSunData.mouseOver) {\r\n            const text =\r\n                \"The sun and ocean grow and change color with the tempature of the planet.\";\r\n            const value = hoveredSunData.value\r\n                ? `Value: ${hoveredSunData.value} degree C`\r\n                : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        } else if (hoveredMicroPlasticData.mouseOver) {\r\n            const text =\r\n                \"The white dots or circles falling from top the ocean represent microplastic, and increase and decrease in number accordingly.\";\r\n            const value = hoveredMicroPlasticData.value\r\n                ? `Value: ${hoveredMicroPlasticData.value} tons`\r\n                : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        } else if (hoveredSmogData.mouseOver) {\r\n            const text =\r\n                \"The smog clouds represent the nitrous oxide in the atmosphere.\";\r\n            const value = hoveredSmogData.value\r\n                ? `Value: ${hoveredSmogData.value} ppb`\r\n                : `[No Value For Current Date]`;\r\n            p.noFill();\r\n            drawLegend(p, text, value);\r\n        }\r\n    };\r\n\r\n    p.windowResized = () => {\r\n        p.resizeCanvas(wrapper.offsetWidth, p.windowHeight);\r\n        document.getElementById(\"slider\").style.bottom = `-${wrapper.offsetHeight}px`;\r\n        resizeSun(p);\r\n        resizeMicroPlastics(p);\r\n        resizeMacroPlastics(p);\r\n        p.redraw();\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n        temperatureData = newProps.temperatureData;\r\n        currentDate = newProps.currentDate;\r\n        microGrowth2050 = newProps.microGrowth2050;\r\n        macroGrowth2050 = newProps.macroGrowth2050;\r\n        carbonData = newProps.carbonData;\r\n        methaneData = newProps.methaneData;\r\n        seaLevelRise = newProps.seaLevelRise;\r\n        nitrousData = newProps.nitrousData;\r\n        console.log(newProps);\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}