{"ast":null,"code":"/**\n * Make a copy of the current image\n * @memberof Image\n * @instance\n * @param {Image} fromImage\n * @param {Image} toImage\n * @param {number} x\n * @param {number} y\n */\nexport default function copyImage(fromImage, toImage, x, y) {\n  let fromWidth = fromImage.width;\n  let fromHeight = fromImage.height;\n  let toWidth = toImage.width;\n  let channels = fromImage.channels;\n\n  for (let i = 0; i < fromWidth; i++) {\n    for (let j = 0; j < fromHeight; j++) {\n      for (let k = 0; k < channels; k++) {\n        let source = (j * fromWidth + i) * channels + k;\n        let target = ((y + j) * toWidth + x + i) * channels + k;\n        toImage.data[target] = fromImage.data[source];\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/image-js/src/image/internal/copy.js"],"names":["copyImage","fromImage","toImage","x","y","fromWidth","width","fromHeight","height","toWidth","channels","i","j","k","source","target","data"],"mappings":"AAAA;;;;;;;;;AASA,eAAe,SAASA,SAAT,CAAmBC,SAAnB,EAA8BC,OAA9B,EAAuCC,CAAvC,EAA0CC,CAA1C,EAA6C;AAC1D,MAAIC,SAAS,GAAGJ,SAAS,CAACK,KAA1B;AACA,MAAIC,UAAU,GAAGN,SAAS,CAACO,MAA3B;AACA,MAAIC,OAAO,GAAGP,OAAO,CAACI,KAAtB;AACA,MAAII,QAAQ,GAAGT,SAAS,CAACS,QAAzB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,SAApB,EAA+BM,CAAC,EAAhC,EAAoC;AAClC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAApB,EAAgCK,CAAC,EAAjC,EAAqC;AACnC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8BG,CAAC,EAA/B,EAAmC;AACjC,YAAIC,MAAM,GAAG,CAACF,CAAC,GAAGP,SAAJ,GAAgBM,CAAjB,IAAsBD,QAAtB,GAAiCG,CAA9C;AACA,YAAIE,MAAM,GAAG,CAAC,CAACX,CAAC,GAAGQ,CAAL,IAAUH,OAAV,GAAoBN,CAApB,GAAwBQ,CAAzB,IAA8BD,QAA9B,GAAyCG,CAAtD;AACAX,QAAAA,OAAO,CAACc,IAAR,CAAaD,MAAb,IAAuBd,SAAS,CAACe,IAAV,CAAeF,MAAf,CAAvB;AACD;AACF;AACF;AACF","sourcesContent":["/**\n * Make a copy of the current image\n * @memberof Image\n * @instance\n * @param {Image} fromImage\n * @param {Image} toImage\n * @param {number} x\n * @param {number} y\n */\nexport default function copyImage(fromImage, toImage, x, y) {\n  let fromWidth = fromImage.width;\n  let fromHeight = fromImage.height;\n  let toWidth = toImage.width;\n  let channels = fromImage.channels;\n  for (let i = 0; i < fromWidth; i++) {\n    for (let j = 0; j < fromHeight; j++) {\n      for (let k = 0; k < channels; k++) {\n        let source = (j * fromWidth + i) * channels + k;\n        let target = ((y + j) * toWidth + x + i) * channels + k;\n        toImage.data[target] = fromImage.data[source];\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}