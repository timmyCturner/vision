{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuent\\\\Documents\\\\FinishDipshit\\\\Creative\\\\Ocean-Weather-Visualization\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport OWVisualization from \"./OWVisualization\"; // import both children\n\nimport OWSonification from \"./OWSonification\";\nimport axios from \"axios\"; // used for API stuff\n// below imports are for static files to avoid 429 errors from requests while testing\n\nimport carbonJSON from \"./static/carbon.json\";\nimport methaneJSON from \"./static/methane.json\";\nimport nitrousJSON from \"./static/nitrous.json\";\nimport temperatureJSON from \"./static/temperature.json\";\nimport macroGrowth2050 from \"./static/plastic_pollution/macroGrowth2050.json\";\nimport microGrowth2050 from \"./static/plastic_pollution/microGrowth2050.json\";\nimport seaLevelRise from \"./static/seaLevelRise/seaLevelRise.json\";\nimport * as d3 from \"d3\";\nimport Header from \"./components/Header\";\nimport Contents from \"./components/Contents\"; // import Features from \"./components/Features\";\n\nimport Footer from \"./components/Footer\";\nexport const startingYear = 1950;\n\nclass App extends React.Component {\n  // you can create class-scope fields in here like in Java\n  constructor(props) {\n    super();\n    this.state = {\n      // you can add new states here\n      // initialize below states to null if not using static data for testing\n      carbonData: carbonJSON.co2,\n      methaneData: methaneJSON.methane,\n      nitrousData: nitrousJSON.nitrous,\n      temperatureData: temperatureJSON.result,\n      //get plastic and repeat for others\n      macroGrowth2050: macroGrowth2050.macroGrowth2050,\n      microGrowth2050: microGrowth2050.microGrowth2050,\n      //sea seaLevelRise\n      seaLevelRise: seaLevelRise.seaLevelRise,\n      currentDate: new Date(`${startingYear}-11-01`),\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n      dataIsLoaded: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Contents, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(OWVisualization, {\n      currentDate: this.state.currentDate,\n      temperatureData: this.state.temperatureData // need to pass data into children via props\n      ,\n      microGrowth2050: this.state.microGrowth2050,\n      macroGrowth2050: this.state.macroGrowth2050,\n      carbonData: this.state.carbonData,\n      methaneData: this.state.methaneData,\n      seaLevelRise: this.state.seaLevelRise,\n      nitrousData: this.state.nitrousData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(OWSonification, {\n      currentDate: this.state.currentDate,\n      temperatureData: this.state.temperatureData,\n      microGrowth2050: this.state.microGrowth2050,\n      macroGrowth2050: this.state.macroGrowth2050,\n      carbonData: this.state.carbonData,\n      methaneData: this.state.methaneData,\n      seaLevelRise: this.state.seaLevelRise,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  componentDidMount() {\n    // this is called when the page is initially loaded/mounted\n    // console.log(\"Parent Mounted\");\n    // this.loadData(); // comment this out if using static files; loadData() will make API requests\n    this.createSlider(d3.select(\".app-container\"));\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {// when re-render occurs, componentDidUpdate() is called\n    // console.log(\"Parent Updated\");\n  }\n\n  loadData() {\n    const fetchData = async () => {\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // proxy url that is used in combination with real url\n\n      let promises = []; // make an array of promises\n\n      this.props.urls.split(\",\").forEach(function (url) {\n        promises.push(axios(proxyurl + url)); // push request onto promise array\n      }); // order of promises is retained; reference: https://stackoverflow.com/questions/28066429/promise-all-order-of-resolved-values/28066851\n\n      const data = await Promise.all(promises);\n      this.state.carbonData = data[0].data.co2; // directly modifying the state like this does NOT force re-render\n\n      this.state.methaneData = data[1].data.methane;\n      this.state.nitrousData = data[2].data.nitrous;\n      this.state.temperatureData = data[3].data.result;\n      this.setState({\n        dataIsLoaded: true\n      }); // calling this.setState(...) forces re-render\n    };\n\n    fetchData();\n  }\n\n  createSlider(element) {\n    // parameter is the app-container svg body\n    const self = this; // reference constructor\n\n    let formatDateIntoYear = d3.timeFormat(\"%Y\");\n    let formatDate = d3.timeFormat(\"%d %B %Y\"); // DD MM YY https://github.com/d3/d3-time-format\n\n    let startDate = new Date(\"1950-11-01\"); // subject to change\n\n    let endDate = new Date(); // subject to change (no params = current date)\n\n    let margin = {\n      top: 50,\n      right: 50,\n      bottom: 0,\n      left: 75\n    };\n    let width = window.innerWidth; // - margin.left - margin.right;\n\n    let timer = 0;\n    let currentValue = 0;\n    let targetValue = width - 50;\n    let sliderRange = element // appends svg on top of .App svg\n    .append(\"div\").classed(\"slider-svg\", true) // container class to make iresponsive\n    .attr(\"id\", \"slider\");\n    let gRange = sliderRange // gRange is the svg body that will be made responsive\n    .append(\"svg\") // append the responsive svg container\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\") // responsive svg container needs to preserve aspect ratio for responsiveness\n    .attr(\"viewBox\", `0 0 ${window.innerWidth + margin.left * 2} 200`) // set aspect ratio for slider svg body\n    // it seems that ADDING margin would actually shrink the slider svg body\n    .append(\"g\") // overlay the slider svg body; now gRange reflects the slider body\n    .attr(\"transform\", \"translate(\" + margin.left + \", 100)\"); // shift slider to right and down\n    // .classed(\"class\", \"slider\") // apply slider css properties\n\n    gRange // we want to add a foreign object embodied in a html element\n    .append(\"foreignObject\") // append the foreign object then set coordinates relative to slider svg body\n    .attr(\"x\", 20).attr(\"y\", 40).attr(\"width\", 200) // set width and height of the play button\n    .attr(\"height\", 60).html(function (d) {\n      // this is the html element we want to append\n      return '<button id=\"play-button\">Play</button>';\n    });\n    let playButton = d3.select(\"#play-button\"); // get the play button svg\n\n    playButton.on(\"click\", function () {\n      // set the play button's behavior\n      let button = d3.select(this); // note that 'this' references the play button svg\n\n      if (button.text() === \"Pause\") {\n        // if paused, clear interval and change text to 'play'\n        clearInterval(timer);\n        button.text(\"Play\");\n      } else {\n        // otherwise set behavior for the play button\n        timer = setInterval(function () {\n          // play interval asynchronously\n          update(x.invert(currentValue)); // update handle position and adjust current value tick jumps\n\n          currentValue = currentValue + targetValue / 151;\n\n          if (currentValue > targetValue) {\n            // if at end of range, clear interval and change text to 'play'\n            clearInterval(timer); // this will stop the asynchronous interval\n\n            playButton.text(\"Play\");\n          }\n\n          self.setState({\n            currentDate: x.invert(currentValue)\n          }); // ref parent constructor and communicate with child\n        }, 200); // loops for about 20 seconds going from month to month (or longer)\n\n        button.text(\"Pause\"); // when play button is selected, change text to 'pause'\n      }\n    });\n    let x = d3.scaleTime() // ref: https://observablehq.com/@d3/d3-scaletime\n    .domain([startDate, endDate]) // use timescale domain between start and end dates\n    .range([0, targetValue]) // define range of slider being from beginning to end of its range\n    .clamp(true); // ensure that handle does not escape range\n\n    gRange.append(\"line\").attr(\"class\", \"track\") // apply track css properties within slider svg body\n    .attr(\"x1\", x.range()[0]).attr(\"x2\", x.range()[1]).select(function () {\n      return this.parentNode.appendChild(this.cloneNode(true)); // not sure what this is yet\n    }).attr(\"class\", \"track-inset\") // apply track-inset css properties within slider svg body\n    .select(function () {\n      return this.parentNode.appendChild(this.cloneNode(true));\n    }).attr(\"class\", \"track-overlay\") // apply track-overlay css properties within slider svg body\n    .call(d3.drag() // dragging behavior\n    .on(\"start.interrupt\", function () {\n      // handle interrupts\n      gRange.interrupt();\n    }).on(\"start drag\", function (event) {\n      // while hande is dragged, store current value and update handle location\n      currentValue = event.x;\n      update(x.invert(currentValue));\n    }).on(\"end\", function (event) {\n      // when handle is released, use the last recorded current value\n      self.setState({\n        currentDate: x.invert(currentValue)\n      });\n    }));\n    let handle = gRange.insert(\"circle\", \".track-overlay\") // inserts the track\n    .attr(\"class\", \"handle\") // apply handle css properties to track within slider svg body\n    .attr(\"r\", 9); // set radius of handle\n\n    let label = gRange.append(\"text\") // append text onto slider which will be our tick representations\n    .attr(\"class\", \"label\") // apply label css properties\n    .attr(\"text-anchor\", \"middle\") // anchor text to middle\n    .attr(\"font-family\", 'Raleway, Helvetica, sans-serif').attr(\"font-weight\", \"700\").attr(\"fill\", \"rgba(0, 0, 0, 0.750)\").text(formatDate(startDate)) // display currently selected date in text\n    .attr(\"transform\", \"translate(0,\" + -25 + \")\"); // shift text to left\n\n    document.addEventListener(\"keydown\", function (event) {\n      // listen for keypresses\n      switch (event.key // we are only concerned about left/right arrow keys\n      ) {\n        case \"ArrowLeft\":\n          currentValue = // ensure handle does not decrement below zero\n          currentValue === 0 ? currentValue : currentValue - 1;\n          update(x.invert(currentValue)); // shift handle one tick to left\n\n          break;\n\n        case \"ArrowRight\":\n          currentValue++; // increment current value\n\n          update(x.invert(currentValue)); // shift handle one tick to right\n\n          break;\n\n        default:\n          break;\n      }\n    });\n    gRange.insert(\"g\", \".track-overlay\") // create the track overlay\n    .attr(\"class\", \"ticks\") // apply ticks css properties within slider svg body\n    .attr(\"transform\", \"translate(0,\" + 18 + \")\") // shift to right\n    .selectAll(\"text\") // apply following changes to all text on slider (ticks)\n    .data(x.ticks(10)) // ref: https://observablehq.com/@d3/d3-scaletime\n    .enter() // ref: https://observablehq.com/@dnarvaez27/understanding-enter-exit-merge-key-function\n    .append(\"text\") // append text representing ticks then set its coordinates (x-coordinate is variable, y-coordinate is fixed)\n    .attr(\"x\", x).attr(\"y\", 10).attr(\"text-anchor\", \"middle\") // center text on tick\n    .attr(\"font-family\", 'Raleway, Helvetica, sans-serif').attr(\"font-weight\", \"700\").attr(\"fill\", \"rgba(0, 0, 0, 0.750)\").attr(\"class\", \"track-text\").text(d => formatDateIntoYear(d)); // write formatted date as text\n\n    function update(h) {\n      // update position and text of label according to slider scale\n      handle.attr(\"cx\", x(h)); // update handle position\n\n      label // update tick label position and tick label content to new date\n      .attr(\"x\", x(h)).text(formatDate(h));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/App.js"],"names":["React","OWVisualization","OWSonification","axios","carbonJSON","methaneJSON","nitrousJSON","temperatureJSON","macroGrowth2050","microGrowth2050","seaLevelRise","d3","Header","Contents","Footer","startingYear","App","Component","constructor","props","state","carbonData","co2","methaneData","methane","nitrousData","nitrous","temperatureData","result","currentDate","Date","dataIsLoaded","render","componentDidMount","createSlider","select","componentDidUpdate","prevProps","prevState","snapshot","loadData","fetchData","proxyurl","promises","urls","split","forEach","url","push","data","Promise","all","setState","element","self","formatDateIntoYear","timeFormat","formatDate","startDate","endDate","margin","top","right","bottom","left","width","window","innerWidth","timer","currentValue","targetValue","sliderRange","append","classed","attr","gRange","html","d","playButton","on","button","text","clearInterval","setInterval","update","x","invert","scaleTime","domain","range","clamp","parentNode","appendChild","cloneNode","call","drag","interrupt","event","handle","insert","label","document","addEventListener","key","selectAll","ticks","enter","h"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport OWVisualization from \"./OWVisualization\"; // import both children\r\nimport OWSonification from \"./OWSonification\";\r\nimport axios from \"axios\"; // used for API stuff\r\n\r\n// below imports are for static files to avoid 429 errors from requests while testing\r\nimport carbonJSON from \"./static/carbon.json\";\r\nimport methaneJSON from \"./static/methane.json\";\r\nimport nitrousJSON from \"./static/nitrous.json\";\r\nimport temperatureJSON from \"./static/temperature.json\";\r\n\r\nimport macroGrowth2050 from \"./static/plastic_pollution/macroGrowth2050.json\";\r\nimport microGrowth2050 from \"./static/plastic_pollution/microGrowth2050.json\";\r\n\r\nimport seaLevelRise from \"./static/seaLevelRise/seaLevelRise.json\";\r\n\r\nimport * as d3 from \"d3\";\r\nimport Header from \"./components/Header\";\r\nimport Contents from \"./components/Contents\";\r\n// import Features from \"./components/Features\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nexport const startingYear = 1950;\r\n\r\nclass App extends React.Component {\r\n    // you can create class-scope fields in here like in Java\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            // you can add new states here\r\n            // initialize below states to null if not using static data for testing\r\n            carbonData: carbonJSON.co2,\r\n            methaneData: methaneJSON.methane,\r\n            nitrousData: nitrousJSON.nitrous,\r\n            temperatureData: temperatureJSON.result,\r\n\r\n            //get plastic and repeat for others\r\n            macroGrowth2050: macroGrowth2050.macroGrowth2050,\r\n            microGrowth2050: microGrowth2050.microGrowth2050,\r\n\r\n            //sea seaLevelRise\r\n            seaLevelRise: seaLevelRise.seaLevelRise,\r\n\r\n            currentDate: new Date(`${startingYear}-11-01`), // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\r\n            dataIsLoaded: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app\" className=\"app-container\">\r\n                <div id=\"page-wrapper\">\r\n                    <Header />\r\n                    <Contents />\r\n                    {/* <Features /> */}\r\n                    <Footer />\r\n                </div>\r\n\r\n                <OWVisualization\r\n                    currentDate={this.state.currentDate}\r\n                    temperatureData={this.state.temperatureData} // need to pass data into children via props\r\n                    microGrowth2050={this.state.microGrowth2050}\r\n                    macroGrowth2050={this.state.macroGrowth2050}\r\n                    carbonData={this.state.carbonData}\r\n                    methaneData={this.state.methaneData}\r\n                    seaLevelRise={this.state.seaLevelRise}\r\n                    nitrousData={this.state.nitrousData}\r\n                />\r\n                <OWSonification\r\n                    currentDate={this.state.currentDate}\r\n                    temperatureData={this.state.temperatureData}\r\n                    microGrowth2050={this.state.microGrowth2050}\r\n                    macroGrowth2050={this.state.macroGrowth2050}\r\n                    carbonData={this.state.carbonData}\r\n                    methaneData={this.state.methaneData}\r\n                    seaLevelRise={this.state.seaLevelRise}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this is called when the page is initially loaded/mounted\r\n        // console.log(\"Parent Mounted\");\r\n        // this.loadData(); // comment this out if using static files; loadData() will make API requests\r\n        this.createSlider(d3.select(\".app-container\"));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // when re-render occurs, componentDidUpdate() is called\r\n        // console.log(\"Parent Updated\");\r\n    }\r\n\r\n    loadData() {\r\n        const fetchData = async () => {\r\n            const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // proxy url that is used in combination with real url\r\n\r\n            let promises = []; // make an array of promises\r\n            this.props.urls.split(\",\").forEach(function (url) {\r\n                promises.push(axios(proxyurl + url)); // push request onto promise array\r\n            });\r\n\r\n            // order of promises is retained; reference: https://stackoverflow.com/questions/28066429/promise-all-order-of-resolved-values/28066851\r\n            const data = await Promise.all(promises);\r\n\r\n            this.state.carbonData = data[0].data.co2; // directly modifying the state like this does NOT force re-render\r\n            this.state.methaneData = data[1].data.methane;\r\n            this.state.nitrousData = data[2].data.nitrous;\r\n            this.state.temperatureData = data[3].data.result;\r\n\r\n            this.setState({ dataIsLoaded: true }); // calling this.setState(...) forces re-render\r\n        };\r\n        fetchData();\r\n    }\r\n\r\n    createSlider(element) {\r\n        // parameter is the app-container svg body\r\n        const self = this; // reference constructor\r\n\r\n        let formatDateIntoYear = d3.timeFormat(\"%Y\");\r\n        let formatDate = d3.timeFormat(\"%d %B %Y\"); // DD MM YY https://github.com/d3/d3-time-format\r\n\r\n        let startDate = new Date(\"1950-11-01\"); // subject to change\r\n        let endDate = new Date(); // subject to change (no params = current date)\r\n\r\n        let margin = { top: 50, right: 50, bottom: 0, left: 75 };\r\n        let width = window.innerWidth; // - margin.left - margin.right;\r\n\r\n        let timer = 0;\r\n        let currentValue = 0;\r\n        let targetValue = width - 50;\r\n\r\n        let sliderRange = element // appends svg on top of .App svg\r\n            .append(\"div\")\r\n            .classed(\"slider-svg\", true) // container class to make iresponsive\r\n            .attr(\"id\", \"slider\");\r\n\r\n        let gRange = sliderRange // gRange is the svg body that will be made responsive\r\n            .append(\"svg\") // append the responsive svg container\r\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\") // responsive svg container needs to preserve aspect ratio for responsiveness\r\n            .attr(\"viewBox\", `0 0 ${window.innerWidth + margin.left * 2} 200`) // set aspect ratio for slider svg body\r\n            // it seems that ADDING margin would actually shrink the slider svg body\r\n            .append(\"g\") // overlay the slider svg body; now gRange reflects the slider body\r\n            .attr(\"transform\", \"translate(\" + margin.left + \", 100)\"); // shift slider to right and down\r\n        // .classed(\"class\", \"slider\") // apply slider css properties\r\n\r\n        gRange // we want to add a foreign object embodied in a html element\r\n            .append(\"foreignObject\") // append the foreign object then set coordinates relative to slider svg body\r\n            .attr(\"x\", 20)\r\n            .attr(\"y\", 40)\r\n            .attr(\"width\", 200) // set width and height of the play button\r\n            .attr(\"height\", 60)\r\n            .html(function (d) {\r\n                // this is the html element we want to append\r\n                return '<button id=\"play-button\">Play</button>';\r\n            });\r\n\r\n        let playButton = d3.select(\"#play-button\"); // get the play button svg\r\n\r\n        playButton.on(\"click\", function () {\r\n            // set the play button's behavior\r\n            let button = d3.select(this); // note that 'this' references the play button svg\r\n            if (button.text() === \"Pause\") {\r\n                // if paused, clear interval and change text to 'play'\r\n                clearInterval(timer);\r\n                button.text(\"Play\");\r\n            } else {\r\n                // otherwise set behavior for the play button\r\n                timer = setInterval(function () {\r\n                    // play interval asynchronously\r\n                    update(x.invert(currentValue)); // update handle position and adjust current value tick jumps\r\n                    currentValue = currentValue + targetValue / 151;\r\n                    if (currentValue > targetValue) {\r\n                        // if at end of range, clear interval and change text to 'play'\r\n                        clearInterval(timer); // this will stop the asynchronous interval\r\n                        playButton.text(\"Play\");\r\n                    }\r\n                    self.setState({ currentDate: x.invert(currentValue) }); // ref parent constructor and communicate with child\r\n                }, 200); // loops for about 20 seconds going from month to month (or longer)\r\n                button.text(\"Pause\"); // when play button is selected, change text to 'pause'\r\n            }\r\n        });\r\n\r\n        let x = d3\r\n            .scaleTime() // ref: https://observablehq.com/@d3/d3-scaletime\r\n            .domain([startDate, endDate]) // use timescale domain between start and end dates\r\n            .range([0, targetValue]) // define range of slider being from beginning to end of its range\r\n            .clamp(true); // ensure that handle does not escape range\r\n\r\n        gRange\r\n            .append(\"line\")\r\n            .attr(\"class\", \"track\") // apply track css properties within slider svg body\r\n            .attr(\"x1\", x.range()[0])\r\n            .attr(\"x2\", x.range()[1])\r\n            .select(function () {\r\n                return this.parentNode.appendChild(this.cloneNode(true)); // not sure what this is yet\r\n            })\r\n            .attr(\"class\", \"track-inset\") // apply track-inset css properties within slider svg body\r\n            .select(function () {\r\n                return this.parentNode.appendChild(this.cloneNode(true));\r\n            })\r\n            .attr(\"class\", \"track-overlay\") // apply track-overlay css properties within slider svg body\r\n            .call(\r\n                d3\r\n                    .drag() // dragging behavior\r\n                    .on(\"start.interrupt\", function () {\r\n                        // handle interrupts\r\n                        gRange.interrupt();\r\n                    })\r\n                    .on(\"start drag\", function (event) {\r\n                        // while hande is dragged, store current value and update handle location\r\n                        currentValue = event.x;\r\n                        update(x.invert(currentValue));\r\n                    })\r\n                    .on(\"end\", function (event) {\r\n                        // when handle is released, use the last recorded current value\r\n                        self.setState({ currentDate: x.invert(currentValue) });\r\n                    })\r\n            );\r\n\r\n        let handle = gRange\r\n            .insert(\"circle\", \".track-overlay\") // inserts the track\r\n            .attr(\"class\", \"handle\") // apply handle css properties to track within slider svg body\r\n            .attr(\"r\", 9); // set radius of handle\r\n\r\n        let label = gRange\r\n            .append(\"text\") // append text onto slider which will be our tick representations\r\n            .attr(\"class\", \"label\") // apply label css properties\r\n            .attr(\"text-anchor\", \"middle\") // anchor text to middle\r\n            .attr(\"font-family\", 'Raleway, Helvetica, sans-serif')\r\n            .attr(\"font-weight\", \"700\")\r\n            .attr(\"fill\", \"rgba(0, 0, 0, 0.750)\")\r\n            .text(formatDate(startDate)) // display currently selected date in text\r\n            .attr(\"transform\", \"translate(0,\" + -25 + \")\"); // shift text to left\r\n\r\n        document.addEventListener(\"keydown\", function (event) {\r\n            // listen for keypresses\r\n            switch (\r\n                event.key // we are only concerned about left/right arrow keys\r\n            ) {\r\n                case \"ArrowLeft\":\r\n                    currentValue = // ensure handle does not decrement below zero\r\n                        currentValue === 0 ? currentValue : currentValue - 1;\r\n                    update(x.invert(currentValue)); // shift handle one tick to left\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    currentValue++; // increment current value\r\n                    update(x.invert(currentValue)); // shift handle one tick to right\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        gRange\r\n            .insert(\"g\", \".track-overlay\") // create the track overlay\r\n            .attr(\"class\", \"ticks\") // apply ticks css properties within slider svg body\r\n            .attr(\"transform\", \"translate(0,\" + 18 + \")\") // shift to right\r\n            .selectAll(\"text\") // apply following changes to all text on slider (ticks)\r\n            .data(x.ticks(10)) // ref: https://observablehq.com/@d3/d3-scaletime\r\n            .enter() // ref: https://observablehq.com/@dnarvaez27/understanding-enter-exit-merge-key-function\r\n            .append(\"text\") // append text representing ticks then set its coordinates (x-coordinate is variable, y-coordinate is fixed)\r\n            .attr(\"x\", x)\r\n            .attr(\"y\", 10)\r\n            .attr(\"text-anchor\", \"middle\") // center text on tick\r\n            .attr(\"font-family\", 'Raleway, Helvetica, sans-serif')\r\n            .attr(\"font-weight\", \"700\")\r\n            .attr(\"fill\", \"rgba(0, 0, 0, 0.750)\")\r\n            .attr(\"class\", \"track-text\")\r\n            .text((d) => formatDateIntoYear(d)); // write formatted date as text\r\n\r\n        function update(h) {\r\n            // update position and text of label according to slider scale\r\n            handle.attr(\"cx\", x(h)); // update handle position\r\n            label // update tick label position and tick label content to new date\r\n                .attr(\"x\", x(h))\r\n                .text(formatDate(h));\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}