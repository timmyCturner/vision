{"ast":null,"code":"export const pngSignature = [137, 80, 78, 71, 13, 10, 26, 10];\nconst crcTable = [];\n\nfor (let n = 0; n < 256; n++) {\n  let c = n;\n\n  for (let k = 0; k < 8; k++) {\n    if (c & 1) {\n      c = 0xedb88320 ^ c >>> 1;\n    } else {\n      c = c >>> 1;\n    }\n  }\n\n  crcTable[n] = c;\n}\n\nconst initialCrc = 0xffffffff;\n\nfunction updateCrc(currentCrc, data, length) {\n  let c = currentCrc;\n\n  for (let n = 0; n < length; n++) {\n    c = crcTable[(c ^ data[n]) & 0xff] ^ c >>> 8;\n  }\n\n  return c;\n}\n\nexport function crc(data, length) {\n  return (updateCrc(initialCrc, data, length) ^ initialCrc) >>> 0;\n}","map":{"version":3,"sources":["../src/common.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,YAAY,GAAG,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CAArB;AAEP,MAAM,QAAQ,GAAa,EAA3B;;AACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,CAAC,EAA1B,EAA8B;AAC5B,MAAI,CAAC,GAAG,CAAR;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,QAAI,CAAC,GAAG,CAAR,EAAW;AACT,MAAA,CAAC,GAAG,aAAc,CAAC,KAAK,CAAxB;AACD,KAFD,MAEO;AACL,MAAA,CAAC,GAAG,CAAC,KAAK,CAAV;AACD;AACF;;AACD,EAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd;AACD;;AAED,MAAM,UAAU,GAAG,UAAnB;;AACA,SAAS,SAAT,CACE,UADF,EAEE,IAFF,EAGE,MAHF,EAGgB;AAEd,MAAI,CAAC,GAAG,UAAR;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,IAAA,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAD,CAAT,IAAgB,IAAjB,CAAR,GAAkC,CAAC,KAAK,CAA5C;AACD;;AACD,SAAO,CAAP;AACD;;AAED,OAAM,SAAU,GAAV,CAAc,IAAd,EAAgC,MAAhC,EAA8C;AAClD,SAAO,CAAC,SAAS,CAAC,UAAD,EAAa,IAAb,EAAmB,MAAnB,CAAT,GAAsC,UAAvC,MAAuD,CAA9D;AACD","sourceRoot":"","sourcesContent":["export const pngSignature = [137, 80, 78, 71, 13, 10, 26, 10];\r\nconst crcTable = [];\r\nfor (let n = 0; n < 256; n++) {\r\n    let c = n;\r\n    for (let k = 0; k < 8; k++) {\r\n        if (c & 1) {\r\n            c = 0xedb88320 ^ (c >>> 1);\r\n        }\r\n        else {\r\n            c = c >>> 1;\r\n        }\r\n    }\r\n    crcTable[n] = c;\r\n}\r\nconst initialCrc = 0xffffffff;\r\nfunction updateCrc(currentCrc, data, length) {\r\n    let c = currentCrc;\r\n    for (let n = 0; n < length; n++) {\r\n        c = crcTable[(c ^ data[n]) & 0xff] ^ (c >>> 8);\r\n    }\r\n    return c;\r\n}\r\nexport function crc(data, length) {\r\n    return (updateCrc(initialCrc, data, length) ^ initialCrc) >>> 0;\r\n}\r\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"module"}