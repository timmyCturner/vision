{"ast":null,"code":"/**\n * Flip an image vertically. The image\n * @memberof Image\n * @instance\n * @return {this}\n */\nexport default function flipY() {\n  this.checkProcessable('flipY', {\n    bitDepth: [8, 16]\n  });\n\n  for (let i = 0; i < Math.floor(this.height / 2); i++) {\n    for (let j = 0; j < this.width; j++) {\n      let posCurrent = j * this.channels + i * this.width * this.channels;\n      let posOpposite = j * this.channels + (this.height - 1 - i) * this.channels * this.width;\n\n      for (let k = 0; k < this.channels; k++) {\n        let tmp = this.data[posCurrent + k];\n        this.data[posCurrent + k] = this.data[posOpposite + k];\n        this.data[posOpposite + k] = tmp;\n      }\n    }\n  }\n\n  return this;\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/image-js/src/image/filter/flipY.js"],"names":["flipY","checkProcessable","bitDepth","i","Math","floor","height","j","width","posCurrent","channels","posOpposite","k","tmp","data"],"mappings":"AAAA;;;;;;AAMA,eAAe,SAASA,KAAT,GAAiB;AAC9B,OAAKC,gBAAL,CAAsB,OAAtB,EAA+B;AAC7BC,IAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,EAAJ;AADmB,GAA/B;;AAIA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,MAAL,GAAc,CAAzB,CAApB,EAAiDH,CAAC,EAAlD,EAAsD;AACpD,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAzB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIE,UAAU,GAAGF,CAAC,GAAG,KAAKG,QAAT,GAAoBP,CAAC,GAAG,KAAKK,KAAT,GAAiB,KAAKE,QAA3D;AACA,UAAIC,WAAW,GACbJ,CAAC,GAAG,KAAKG,QAAT,GAAoB,CAAC,KAAKJ,MAAL,GAAc,CAAd,GAAkBH,CAAnB,IAAwB,KAAKO,QAA7B,GAAwC,KAAKF,KADnE;;AAGA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,QAAzB,EAAmCE,CAAC,EAApC,EAAwC;AACtC,YAAIC,GAAG,GAAG,KAAKC,IAAL,CAAUL,UAAU,GAAGG,CAAvB,CAAV;AACA,aAAKE,IAAL,CAAUL,UAAU,GAAGG,CAAvB,IAA4B,KAAKE,IAAL,CAAUH,WAAW,GAAGC,CAAxB,CAA5B;AACA,aAAKE,IAAL,CAAUH,WAAW,GAAGC,CAAxB,IAA6BC,GAA7B;AACD;AACF;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["/**\n * Flip an image vertically. The image\n * @memberof Image\n * @instance\n * @return {this}\n */\nexport default function flipY() {\n  this.checkProcessable('flipY', {\n    bitDepth: [8, 16],\n  });\n\n  for (let i = 0; i < Math.floor(this.height / 2); i++) {\n    for (let j = 0; j < this.width; j++) {\n      let posCurrent = j * this.channels + i * this.width * this.channels;\n      let posOpposite =\n        j * this.channels + (this.height - 1 - i) * this.channels * this.width;\n\n      for (let k = 0; k < this.channels; k++) {\n        let tmp = this.data[posCurrent + k];\n        this.data[posCurrent + k] = this.data[posOpposite + k];\n        this.data[posOpposite + k] = tmp;\n      }\n    }\n  }\n\n  return this;\n}\n"]},"metadata":{},"sourceType":"module"}