{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuent\\\\Documents\\\\FinishDipshit\\\\Creative\\\\Ocean-Weather-Visualization\\\\src\\\\OWVisualization.js\";\nimport React from 'react';\nimport './Child1.css';\nimport P5Wrapper from 'react-p5-wrapper';\nimport sketch from './sketches/sketch';\n\nclass Child1 extends React.Component {\n  constructor(props) {\n    super();\n    this.methaneMap = new Map();\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/React.createElement(P5Wrapper, {\n      sketch: sketch,\n      temperatureData: this.props.temperatureData,\n      currentDate: this.props.currentDate,\n      microGrowth2050: this.props.microGrowth2050,\n      macroGrowth2050: this.props.macroGrowth2050,\n      carbonData: this.props.carbonData,\n      methaneData: {\n        \"map\": this.methaneMap,\n        \"arr\": this.props.methaneData\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }) //<P5Wrapper sketch={wave}></P5Wrapper>\n    ;\n  }\n\n  componentDidMount() {\n    if (this.props.methaneData) {\n      this.props.methaneData.forEach(e => {\n        // look over methane data\n        let yyyy = e.date.substring(0, 4);\n        let mm = e.date.substring(5, e.date.length).padStart(2, '0');\n        let dd = \"01\";\n        let date = `${yyyy}-${mm}-${dd}`;\n        this.methaneMap.set(date, e.average); // map date to average\n      });\n    } else {\n      console.error(`Methane data ${this.props.methaneData}`);\n    } // console.log(\"Child Mounted\");\n\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {// console.log(\"Child Updated\");\n  }\n\n}\n\nexport default Child1;","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/OWVisualization.js"],"names":["React","P5Wrapper","sketch","Child1","Component","constructor","props","methaneMap","Map","render","temperatureData","currentDate","microGrowth2050","macroGrowth2050","carbonData","methaneData","componentDidMount","forEach","e","yyyy","date","substring","mm","length","padStart","dd","set","average","console","error","componentDidUpdate","prevProps","prevState","snapshot"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACE,wBACI,oBAAC,SAAD;AACI,MAAA,MAAM,EAAEP,MADZ;AAEI,MAAA,eAAe,EAAE,KAAKI,KAAL,CAAWI,eAFhC;AAGI,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAH5B;AAII,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eAJhC;AAKI,MAAA,eAAe,EAAE,KAAKN,KAAL,CAAWO,eALhC;AAMI,MAAA,UAAU,EAAE,KAAKP,KAAL,CAAWQ,UAN3B;AAOI,MAAA,WAAW,EAAE;AAAC,eAAO,KAAKP,UAAb;AAAyB,eAAO,KAAKD,KAAL,CAAWS;AAA3C,OAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAUI;AAVJ;AAYH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKV,KAAL,CAAWS,WAAf,EAA4B;AACxB,WAAKT,KAAL,CAAWS,WAAX,CAAuBE,OAAvB,CAA+BC,CAAC,IAAI;AAAE;AAClC,YAAIC,IAAI,GAAGD,CAAC,CAACE,IAAF,CAAOC,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAX;AACA,YAAIC,EAAE,GAAGJ,CAAC,CAACE,IAAF,CAAOC,SAAP,CAAiB,CAAjB,EAAoBH,CAAC,CAACE,IAAF,CAAOG,MAA3B,EAAmCC,QAAnC,CAA4C,CAA5C,EAA+C,GAA/C,CAAT;AACA,YAAIC,EAAE,GAAG,IAAT;AAEA,YAAIL,IAAI,GAAI,GAAED,IAAK,IAAGG,EAAG,IAAGG,EAAG,EAA/B;AACA,aAAKlB,UAAL,CAAgBmB,GAAhB,CAAoBN,IAApB,EAA0BF,CAAC,CAACS,OAA5B,EANgC,CAMM;AACzC,OAPD;AAQH,KATD,MAUK;AACDC,MAAAA,OAAO,CAACC,KAAR,CAAe,gBAAe,KAAKvB,KAAL,CAAWS,WAAY,EAArD;AACH,KAbe,CAchB;;AACH;;AAEDe,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC,CAC/C;AACH;;AAzCgC;;AA4CrC,eAAe9B,MAAf","sourcesContent":["import React from 'react'\r\nimport './Child1.css'\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport sketch from './sketches/sketch';\r\n\r\nclass Child1 extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.methaneMap = new Map();\r\n    }\r\n\r\n    render() {\r\n      //console.log(this.props);\r\n        return (\r\n            <P5Wrapper\r\n                sketch={sketch}\r\n                temperatureData={this.props.temperatureData}\r\n                currentDate={this.props.currentDate}\r\n                microGrowth2050={this.props.microGrowth2050}\r\n                macroGrowth2050={this.props.macroGrowth2050}\r\n                carbonData={this.props.carbonData}\r\n                methaneData={{\"map\": this.methaneMap, \"arr\": this.props.methaneData}}>\r\n            </P5Wrapper>\r\n            //<P5Wrapper sketch={wave}></P5Wrapper>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.methaneData) {\r\n            this.props.methaneData.forEach(e => { // look over methane data\r\n                let yyyy = e.date.substring(0, 4);\r\n                let mm = e.date.substring(5, e.date.length).padStart(2, '0');\r\n                let dd = \"01\"\r\n    \r\n                let date = `${yyyy}-${mm}-${dd}`;\r\n                this.methaneMap.set(date, e.average); // map date to average\r\n            });\r\n        }\r\n        else {\r\n            console.error(`Methane data ${this.props.methaneData}`);\r\n        }\r\n        // console.log(\"Child Mounted\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // console.log(\"Child Updated\");\r\n    }\r\n}\r\n\r\nexport default Child1\r\n"]},"metadata":{},"sourceType":"module"}