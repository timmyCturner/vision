{"ast":null,"code":"//var color ;\nexport default function sketch(p) {\n  let canvas;\n  var temp_array;\n  var yvalues;\n\n  p.setup = () => {\n    canvas = p.createCanvas(600, 300);\n    p.noStroke();\n    yvalues = new Array(p.floor(200));\n    tempArray = new Array(p.floor(1600));\n  };\n\n  p.draw = () => {\n    //console.log('draw');\n    //console.log(this);\n    p.background('blue');\n    p.calcSun();\n    p.drawSun(); //p.fill(color)\n    //console.log(temp_array);\n  };\n\n  p.calcSun = () => {\n    //console.log(temp_array)\n    for (let i = 0; i < temp_array.length / 8; i++) {\n      //console.log(temp_array);\n      var average = (temp_array[i * 8].station + temp_array[i * 8].land) / 2;\n      yvalues[i] = average + 1; //console.log(average);\n    }\n  };\n\n  p.drawSun = () => {\n    for (let i = 0; i < yvalues.length; i++) {\n      //console.log(yvalues);\n      p.ellipse(p.width, 0, yvalues[i] * 10, yvalues[i] * 10);\n      p.fill('yellow');\n    }\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    if (canvas) {\n      //Make sure the canvas has been created\n      //console.log('customProp');\n      //console.log(newProps.tempArray);\n      temp_array = newProps.tempArray.tempData;\n      console.log(newProps.tempArray.tempData);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/samiea.github.io/react-deploy/src/sketches/sun.js"],"names":["sketch","p","canvas","temp_array","yvalues","setup","createCanvas","noStroke","Array","floor","tempArray","draw","background","calcSun","drawSun","i","length","average","station","land","ellipse","width","fill","myCustomRedrawAccordingToNewPropsHandler","newProps","tempData","console","log"],"mappings":"AACA;AAGA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,MAAIC,MAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,OAAJ;;AAGAH,EAAAA,CAAC,CAACI,KAAF,GAAU,MAAM;AACZH,IAAAA,MAAM,GAAGD,CAAC,CAACK,YAAF,CAAe,GAAf,EAAoB,GAApB,CAAT;AACAL,IAAAA,CAAC,CAACM,QAAF;AACAH,IAAAA,OAAO,GAAG,IAAII,KAAJ,CAAUP,CAAC,CAACQ,KAAF,CAAQ,GAAR,CAAV,CAAV;AACAC,IAAAA,SAAS,GAAG,IAAIF,KAAJ,CAAUP,CAAC,CAACQ,KAAF,CAAQ,IAAR,CAAV,CAAZ;AAEH,GAND;;AAQAR,EAAAA,CAAC,CAACU,IAAF,GAAS,MAAM;AACX;AACA;AACAV,IAAAA,CAAC,CAACW,UAAF,CAAa,MAAb;AACAX,IAAAA,CAAC,CAACY,OAAF;AACAZ,IAAAA,CAAC,CAACa,OAAF,GALW,CAMX;AACA;AACH,GARD;;AASAb,EAAAA,CAAC,CAACY,OAAF,GAAW,MAAM;AAEf;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIZ,UAAU,CAACa,MAAX,GAAkB,CAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C;AACA,UAAIE,OAAO,GAAG,CAACd,UAAU,CAACY,CAAC,GAAC,CAAH,CAAV,CAAgBG,OAAhB,GAAwBf,UAAU,CAACY,CAAC,GAAC,CAAH,CAAV,CAAgBI,IAAzC,IAA+C,CAA7D;AACAf,MAAAA,OAAO,CAACW,CAAD,CAAP,GAAaE,OAAO,GAAC,CAArB,CAH8C,CAI9C;AAED;AACF,GAVD;;AAWAhB,EAAAA,CAAC,CAACa,OAAF,GAAW,MAAM;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIX,OAAO,CAACY,MAA7B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC;AACAd,MAAAA,CAAC,CAACmB,OAAF,CAAUnB,CAAC,CAACoB,KAAZ,EAAmB,CAAnB,EAAsBjB,OAAO,CAACW,CAAD,CAAP,GAAW,EAAjC,EAAqCX,OAAO,CAACW,CAAD,CAAP,GAAW,EAAhD;AACAd,MAAAA,CAAC,CAACqB,IAAF,CAAO,QAAP;AAED;AACF,GAPD;;AAQArB,EAAAA,CAAC,CAACsB,wCAAF,GAA8CC,QAAD,IAAc;AACzD,QAAGtB,MAAH,EAAU;AAAE;AACV;AACA;AACAC,MAAAA,UAAU,GAAGqB,QAAQ,CAACd,SAAT,CAAmBe,QAAhC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACd,SAAT,CAAmBe,QAA/B;AAED;AAEF,GATD;AAaH","sourcesContent":["\r\n//var color ;\r\n\r\n\r\nexport default function sketch(p) {\r\n    let canvas;\r\n    var temp_array;\r\n    var yvalues;\r\n\r\n\r\n    p.setup = () => {\r\n        canvas = p.createCanvas(600, 300);\r\n        p.noStroke();\r\n        yvalues = new Array(p.floor(200));\r\n        tempArray = new Array(p.floor(1600));\r\n\r\n    }\r\n\r\n    p.draw = () => {\r\n        //console.log('draw');\r\n        //console.log(this);\r\n        p.background('blue');\r\n        p.calcSun();\r\n        p.drawSun();\r\n        //p.fill(color)\r\n        //console.log(temp_array);\r\n    }\r\n    p.calcSun= () => {\r\n\r\n      //console.log(temp_array)\r\n      for (let i = 0; i < (temp_array.length/8); i++) {\r\n        //console.log(temp_array);\r\n        var average = (temp_array[i*8].station+temp_array[i*8].land)/2\r\n        yvalues[i] = average+1\r\n        //console.log(average);\r\n\r\n      }\r\n    }\r\n    p.drawSun= () => {\r\n      for (let i = 0; i < (yvalues.length); i++) {\r\n        //console.log(yvalues);\r\n        p.ellipse(p.width, 0, yvalues[i]*10, yvalues[i]*10);\r\n        p.fill('yellow')\r\n\r\n      }\r\n    }\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n      if(canvas){ //Make sure the canvas has been created\r\n        //console.log('customProp');\r\n        //console.log(newProps.tempArray);\r\n        temp_array = newProps.tempArray.tempData\r\n        console.log(newProps.tempArray.tempData);\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}