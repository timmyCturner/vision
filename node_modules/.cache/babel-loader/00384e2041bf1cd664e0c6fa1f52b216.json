{"ast":null,"code":"import PotentialRegression from './regression/potential-regression';\nexport { default as SimpleLinearRegression, default as SLR } from 'ml-regression-simple-linear';\nexport { default as PolynomialRegression } from 'ml-regression-polynomial';\nexport { default as ExponentialRegression } from 'ml-regression-exponential';\nexport { default as PowerRegression } from 'ml-regression-power';\nexport { default as MultivariateLinearRegression } from 'ml-regression-multivariate-linear';\nconst NLR = {\n  PotentialRegression\n};\nexport { NLR, NLR as NonLinearRegression };\nexport { default as KernelRidgeRegression, default as KRR } from './regression/kernel-ridge-regression';\nexport { default as PolinomialFitting2D } from './regression/poly-fit-regression2d'; // robust regressions\n\nexport { default as TheilSenRegression } from 'ml-regression-theil-sen';\nexport { default as RobustPolynomialRegression } from 'ml-regression-robust-polynomial';","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/ml-regression/src/index.js"],"names":["PotentialRegression","default","SimpleLinearRegression","SLR","PolynomialRegression","ExponentialRegression","PowerRegression","MultivariateLinearRegression","NLR","NonLinearRegression","KernelRidgeRegression","KRR","PolinomialFitting2D","TheilSenRegression","RobustPolynomialRegression"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,mCAAhC;AAEA,SACEC,OAAO,IAAIC,sBADb,EAEED,OAAO,IAAIE,GAFb,QAGO,6BAHP;AAIA,SAASF,OAAO,IAAIG,oBAApB,QAAgD,0BAAhD;AACA,SAASH,OAAO,IAAII,qBAApB,QAAiD,2BAAjD;AACA,SAASJ,OAAO,IAAIK,eAApB,QAA2C,qBAA3C;AACA,SACEL,OAAO,IAAIM,4BADb,QAEO,mCAFP;AAGA,MAAMC,GAAG,GAAG;AACVR,EAAAA;AADU,CAAZ;AAGA,SAASQ,GAAT,EAAcA,GAAG,IAAIC,mBAArB;AAEA,SACER,OAAO,IAAIS,qBADb,EAEET,OAAO,IAAIU,GAFb,QAGO,sCAHP;AAIA,SACEV,OAAO,IAAIW,mBADb,QAEO,oCAFP,C,CAIA;;AACA,SAASX,OAAO,IAAIY,kBAApB,QAA8C,yBAA9C;AACA,SACEZ,OAAO,IAAIa,0BADb,QAEO,iCAFP","sourcesContent":["import PotentialRegression from './regression/potential-regression';\n\nexport {\n  default as SimpleLinearRegression,\n  default as SLR\n} from 'ml-regression-simple-linear';\nexport { default as PolynomialRegression } from 'ml-regression-polynomial';\nexport { default as ExponentialRegression } from 'ml-regression-exponential';\nexport { default as PowerRegression } from 'ml-regression-power';\nexport {\n  default as MultivariateLinearRegression\n} from 'ml-regression-multivariate-linear';\nconst NLR = {\n  PotentialRegression\n};\nexport { NLR, NLR as NonLinearRegression };\n\nexport {\n  default as KernelRidgeRegression,\n  default as KRR\n} from './regression/kernel-ridge-regression';\nexport {\n  default as PolinomialFitting2D\n} from './regression/poly-fit-regression2d';\n\n// robust regressions\nexport { default as TheilSenRegression } from 'ml-regression-theil-sen';\nexport {\n  default as RobustPolynomialRegression\n} from 'ml-regression-robust-polynomial';\n"]},"metadata":{},"sourceType":"module"}