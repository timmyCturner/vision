{"ast":null,"code":"import WorkerManager from 'web-worker-manager';\nimport extend from './extend';\n\nclass Worker {\n  constructor() {\n    this._url = null;\n    this._deps = [null];\n  }\n\n  checkUrl() {\n    if (this._url === null) {\n      throw new Error('image worker must be initialized with an URL');\n    }\n  }\n\n  get url() {\n    return this._url;\n  }\n\n  set url(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('worker URL must be a string');\n    }\n\n    this._url = value;\n    this._deps[0] = value;\n  }\n\n  static extendMethod(name, method) {\n    let manager;\n    let url;\n    let runner = {};\n\n    function run(...args) {\n      if (!manager) {\n        this.checkUrl();\n        url = this.url;\n        manager = new WorkerManager(method.work, {\n          deps: url\n        });\n        runner.manager = manager;\n      }\n\n      return method.run.call(runner, ...args);\n    }\n\n    run.reset = function () {\n      if (manager) {\n        manager.terminate();\n        manager = new WorkerManager(method.work, {\n          deps: url\n        });\n        runner.manager = manager;\n      }\n    };\n\n    Worker.prototype[name] = run;\n  }\n\n}\n\nextend(Worker);\nexport default new Worker();","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/image-js/src/browser/worker/worker.js"],"names":["WorkerManager","extend","Worker","constructor","_url","_deps","checkUrl","Error","url","value","TypeError","extendMethod","name","method","manager","runner","run","args","work","deps","call","reset","terminate","prototype"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,MAAN,CAAa;AACXC,EAAAA,WAAW,GAAG;AACZ,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,KAAL,GAAa,CAAC,IAAD,CAAb;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAKF,IAAL,KAAc,IAAlB,EAAwB;AACtB,YAAM,IAAIG,KAAJ,CAAU,8CAAV,CAAN;AACD;AACF;;AACD,MAAIC,GAAJ,GAAU;AACR,WAAO,KAAKJ,IAAZ;AACD;;AACD,MAAII,GAAJ,CAAQC,KAAR,EAAe;AACb,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,YAAM,IAAIC,SAAJ,CAAc,6BAAd,CAAN;AACD;;AACD,SAAKN,IAAL,GAAYK,KAAZ;AACA,SAAKJ,KAAL,CAAW,CAAX,IAAgBI,KAAhB;AACD;;AACD,SAAOE,YAAP,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;AAChC,QAAIC,OAAJ;AACA,QAAIN,GAAJ;AACA,QAAIO,MAAM,GAAG,EAAb;;AACA,aAASC,GAAT,CAAa,GAAGC,IAAhB,EAAsB;AACpB,UAAI,CAACH,OAAL,EAAc;AACZ,aAAKR,QAAL;AACAE,QAAAA,GAAG,GAAG,KAAKA,GAAX;AACAM,QAAAA,OAAO,GAAG,IAAId,aAAJ,CAAkBa,MAAM,CAACK,IAAzB,EAA+B;AAAEC,UAAAA,IAAI,EAAEX;AAAR,SAA/B,CAAV;AACAO,QAAAA,MAAM,CAACD,OAAP,GAAiBA,OAAjB;AACD;;AACD,aAAOD,MAAM,CAACG,GAAP,CAAWI,IAAX,CAAgBL,MAAhB,EAAwB,GAAGE,IAA3B,CAAP;AACD;;AACDD,IAAAA,GAAG,CAACK,KAAJ,GAAY,YAAY;AACtB,UAAIP,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACQ,SAAR;AACAR,QAAAA,OAAO,GAAG,IAAId,aAAJ,CAAkBa,MAAM,CAACK,IAAzB,EAA+B;AAAEC,UAAAA,IAAI,EAAEX;AAAR,SAA/B,CAAV;AACAO,QAAAA,MAAM,CAACD,OAAP,GAAiBA,OAAjB;AACD;AACF,KAND;;AAOAZ,IAAAA,MAAM,CAACqB,SAAP,CAAiBX,IAAjB,IAAyBI,GAAzB;AACD;;AAzCU;;AA4Cbf,MAAM,CAACC,MAAD,CAAN;AAEA,eAAe,IAAIA,MAAJ,EAAf","sourcesContent":["import WorkerManager from 'web-worker-manager';\n\nimport extend from './extend';\n\nclass Worker {\n  constructor() {\n    this._url = null;\n    this._deps = [null];\n  }\n  checkUrl() {\n    if (this._url === null) {\n      throw new Error('image worker must be initialized with an URL');\n    }\n  }\n  get url() {\n    return this._url;\n  }\n  set url(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('worker URL must be a string');\n    }\n    this._url = value;\n    this._deps[0] = value;\n  }\n  static extendMethod(name, method) {\n    let manager;\n    let url;\n    let runner = {};\n    function run(...args) {\n      if (!manager) {\n        this.checkUrl();\n        url = this.url;\n        manager = new WorkerManager(method.work, { deps: url });\n        runner.manager = manager;\n      }\n      return method.run.call(runner, ...args);\n    }\n    run.reset = function () {\n      if (manager) {\n        manager.terminate();\n        manager = new WorkerManager(method.work, { deps: url });\n        runner.manager = manager;\n      }\n    };\n    Worker.prototype[name] = run;\n  }\n}\n\nextend(Worker);\n\nexport default new Worker();\n"]},"metadata":{},"sourceType":"module"}