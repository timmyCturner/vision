{"ast":null,"code":"'use strict';\n\nconst defaultOptions = {\n  sigma: 1,\n  degree: 1\n};\n\nclass ANOVAKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.degree = options.degree;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    var len = Math.min(x.length, y.length);\n\n    for (var i = 1; i <= len; ++i) {\n      sum += Math.pow(Math.exp(-this.sigma * Math.pow(Math.pow(x[i - 1], i) - Math.pow(y[i - 1], i), 2)), this.degree);\n    }\n\n    return sum;\n  }\n\n}\n\nmodule.exports = ANOVAKernel;","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/ml-kernel/src/kernels/anova-kernel.js"],"names":["defaultOptions","sigma","degree","ANOVAKernel","constructor","options","Object","assign","compute","x","y","sum","len","Math","min","length","i","pow","exp","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,CADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;;AAKA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnBA,IAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,cAAlB,EAAkCK,OAAlC,CAAV;AACA,SAAKJ,KAAL,GAAaI,OAAO,CAACJ,KAArB;AACA,SAAKC,MAAL,GAAcG,OAAO,CAACH,MAAtB;AACD;;AAEDM,EAAAA,OAAO,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACZ,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASL,CAAC,CAACM,MAAX,EAAmBL,CAAC,CAACK,MAArB,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,GAArB,EAA0B,EAAEI,CAA5B,EAA+B;AAC7BL,MAAAA,GAAG,IAAIE,IAAI,CAACI,GAAL,CACLJ,IAAI,CAACK,GAAL,CACE,CAAC,KAAKjB,KAAN,GACEY,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACI,GAAL,CAASR,CAAC,CAACO,CAAC,GAAG,CAAL,CAAV,EAAmBA,CAAnB,IAAwBH,IAAI,CAACI,GAAL,CAASP,CAAC,CAACM,CAAC,GAAG,CAAL,CAAV,EAAmBA,CAAnB,CAAjC,EAAwD,CAAxD,CAFJ,CADK,EAKL,KAAKd,MALA,CAAP;AAOD;;AACD,WAAOS,GAAP;AACD;;AApBe;;AAuBlBQ,MAAM,CAACC,OAAP,GAAiBjB,WAAjB","sourcesContent":["'use strict';\n\nconst defaultOptions = {\n  sigma: 1,\n  degree: 1\n};\n\nclass ANOVAKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.degree = options.degree;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    var len = Math.min(x.length, y.length);\n    for (var i = 1; i <= len; ++i) {\n      sum += Math.pow(\n        Math.exp(\n          -this.sigma *\n            Math.pow(Math.pow(x[i - 1], i) - Math.pow(y[i - 1], i), 2)\n        ),\n        this.degree\n      );\n    }\n    return sum;\n  }\n}\n\nmodule.exports = ANOVAKernel;\n"]},"metadata":{},"sourceType":"script"}