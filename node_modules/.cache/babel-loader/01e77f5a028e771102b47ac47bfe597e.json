{"ast":null,"code":"import { drawSun } from \"./sun\";\nimport { setupLandscape, drawLandscape } from \"./landscape\";\nimport { setupMicroPlasticDrops, drawMicroPlasticDots } from \"./microPlastics\";\nimport { setupMacroPlastics, drawMacroPlastics } from \"./macroPlastics\";\nimport { setupMethaneBubbles, drawMethaneBubbles } from \"./methaneBubbles\";\nimport { setupSmogClouds, drawSmogClouds } from \"./smogClouds\";\nimport { drawSky } from \"./skyColor\";\nimport { drawLegend } from \"./legend\";\nexport default function sketch(p) {\n  let temperatureData = null;\n  let microGrowth2050 = null;\n  let macroGrowth2050 = null;\n  let currentDate = null;\n  let carbonData = null;\n  let methaneData = null;\n  let showLegend = false;\n\n  p.setup = () => {\n    p.frameRate(30);\n    p.createCanvas(p.windowWidth, p.windowHeight); // adjust to window width and height\n\n    setupLandscape(p);\n    setupSmogClouds(p);\n    setupMethaneBubbles(p, methaneData);\n    setupMicroPlasticDrops(p);\n    setupMacroPlastics(p);\n  };\n\n  p.draw = () => {\n    p.clear();\n    drawSky(p, carbonData, currentDate);\n    drawSun(p, temperatureData, currentDate);\n    drawLandscape(p, currentDate);\n    drawSmogClouds(p);\n    drawMethaneBubbles(p, methaneData, currentDate);\n    drawMicroPlasticDots(p, microGrowth2050, currentDate);\n    drawMacroPlastics(p, macroGrowth2050, currentDate);\n\n    if (showLegend) {\n      p.noFill();\n      drawLegend(p);\n    }\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    temperatureData = newProps.temperatureData;\n    currentDate = newProps.currentDate;\n    microGrowth2050 = newProps.microGrowth2050;\n    macroGrowth2050 = newProps.macroGrowth2050;\n    carbonData = newProps.carbonData;\n    methaneData = newProps.methaneData;\n  };\n\n  p.mouseClicked = () => {\n    if (p.mouseX < p.width && p.mouseX > 0 && p.mouseY < p.height && p.mouseY > 0) {\n      showLegend = !showLegend;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/sketch.js"],"names":["drawSun","setupLandscape","drawLandscape","setupMicroPlasticDrops","drawMicroPlasticDots","setupMacroPlastics","drawMacroPlastics","setupMethaneBubbles","drawMethaneBubbles","setupSmogClouds","drawSmogClouds","drawSky","drawLegend","sketch","p","temperatureData","microGrowth2050","macroGrowth2050","currentDate","carbonData","methaneData","showLegend","setup","frameRate","createCanvas","windowWidth","windowHeight","draw","clear","noFill","myCustomRedrawAccordingToNewPropsHandler","newProps","mouseClicked","mouseX","width","mouseY","height"],"mappings":"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","sourcesContent":["import { drawSun } from \"./sun\";\r\nimport { setupLandscape, drawLandscape } from \"./landscape\";\r\nimport { setupMicroPlasticDrops, drawMicroPlasticDots } from \"./microPlastics\";\r\nimport { setupMacroPlastics, drawMacroPlastics } from \"./macroPlastics\";\r\nimport { setupMethaneBubbles, drawMethaneBubbles } from \"./methaneBubbles\";\r\nimport { setupSmogClouds, drawSmogClouds } from \"./smogClouds\";\r\nimport { drawSky } from \"./skyColor\";\r\nimport { drawLegend } from \"./legend\";\r\n\r\nexport default function sketch(p) {\r\n    let temperatureData = null;\r\n    let microGrowth2050 = null;\r\n    let macroGrowth2050 = null;\r\n    let currentDate = null;\r\n    let carbonData = null;\r\n    let methaneData = null;\r\n\r\n    let showLegend = false;\r\n\r\n    p.setup = () => {\r\n        p.frameRate(30);\r\n        p.createCanvas(p.windowWidth, p.windowHeight); // adjust to window width and height\r\n        setupLandscape(p);\r\n        setupSmogClouds(p);\r\n        setupMethaneBubbles(p, methaneData);\r\n        setupMicroPlasticDrops(p);\r\n        setupMacroPlastics(p);\r\n    };\r\n\r\n    p.draw = () => {\r\n        p.clear();\r\n        drawSky(p, carbonData, currentDate);\r\n        drawSun(p, temperatureData, currentDate);\r\n\r\n        drawLandscape(p,currentDate);\r\n        drawSmogClouds(p);\r\n        drawMethaneBubbles(p, methaneData, currentDate);\r\n        drawMicroPlasticDots(p, microGrowth2050, currentDate);\r\n        drawMacroPlastics(p, macroGrowth2050, currentDate);\r\n\r\n        if(showLegend) {\r\n            p.noFill();\r\n            drawLegend(p);\r\n        }\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n        temperatureData = newProps.temperatureData;\r\n        currentDate = newProps.currentDate;\r\n        microGrowth2050 = newProps.microGrowth2050;\r\n        macroGrowth2050 = newProps.macroGrowth2050;\r\n        carbonData = newProps.carbonData;\r\n        methaneData = newProps.methaneData;\r\n    };\r\n\r\n    p.mouseClicked = () => {\r\n        if(p.mouseX < p.width && p.mouseX > 0 && p.mouseY < p.height && p.mouseY > 0){\r\n            showLegend = !showLegend;\r\n        }\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}