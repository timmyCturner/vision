{"ast":null,"code":"'use strict';\n\nvar workerTemplate = require('./workerTemplate');\n\nvar CORES = navigator.hardwareConcurrency || 1;\nvar noop = Function.prototype;\n\nfunction WorkerManager(func, options) {\n  // Check arguments\n  if (typeof func !== 'string' && typeof func !== 'function') throw new TypeError('func argument must be a function');\n  if (options === undefined) options = {};\n  if (typeof options !== 'object' || options === null) throw new TypeError('options argument must be an object');\n  this._workerCode = func.toString(); // Parse options\n\n  if (options.maxWorkers === undefined || options.maxWorkers === 'auto') {\n    this._numWorkers = Math.min(CORES - 1, 1);\n  } else if (options.maxWorkers > 0) {\n    this._numWorkers = Math.min(options.maxWorkers, CORES);\n  } else {\n    this._numWorkers = CORES;\n  }\n\n  this._workers = new Map();\n  this._timeout = options.timeout || 0;\n  this._terminateOnError = !!options.terminateOnError;\n  var deps = options.deps;\n  if (typeof deps === 'string') deps = [deps];\n  if (!Array.isArray(deps)) deps = undefined;\n  this._id = 0;\n  this._terminated = false;\n  this._working = 0;\n  this._waiting = [];\n\n  this._init(deps);\n}\n\nWorkerManager.prototype._init = function (deps) {\n  var workerURL = workerTemplate.newWorkerURL(this._workerCode, deps);\n\n  for (var i = 0; i < this._numWorkers; i++) {\n    var worker = new Worker(workerURL);\n    worker.onmessage = this._onmessage.bind(this, worker);\n    worker.onerror = this._onerror.bind(this, worker);\n    worker.running = false;\n    worker.id = i;\n\n    this._workers.set(worker, null);\n  }\n\n  URL.revokeObjectURL(workerURL);\n};\n\nWorkerManager.prototype._onerror = function (worker, error) {\n  if (this._terminated) return;\n  this._working--;\n  worker.running = false;\n\n  var callback = this._workers.get(worker);\n\n  if (callback) {\n    callback[1](error.message);\n  }\n\n  this._workers.set(worker, null);\n\n  if (this._terminateOnError) {\n    this.terminate();\n  } else {\n    this._exec();\n  }\n};\n\nWorkerManager.prototype._onmessage = function (worker, event) {\n  if (this._terminated) return;\n  this._working--;\n  worker.running = false;\n\n  var callback = this._workers.get(worker);\n\n  if (callback) {\n    callback[0](event.data.data);\n  }\n\n  this._workers.set(worker, null);\n\n  this._exec();\n};\n\nWorkerManager.prototype._exec = function () {\n  for (var worker of this._workers.keys()) {\n    if (this._working === this._numWorkers || this._waiting.length === 0) {\n      return;\n    }\n\n    if (!worker.running) {\n      for (var i = 0; i < this._waiting.length; i++) {\n        var execInfo = this._waiting[i];\n\n        if (typeof execInfo[4] === 'number' && execInfo[4] !== worker.id) {\n          // this message is intended to another worker, let's ignore it\n          continue;\n        }\n\n        this._waiting.splice(i, 1);\n\n        worker.postMessage({\n          action: 'exec',\n          event: execInfo[0],\n          args: execInfo[1]\n        }, execInfo[2]);\n        worker.running = true;\n        worker.time = Date.now();\n\n        this._workers.set(worker, execInfo[3]);\n\n        this._working++;\n        break;\n      }\n    }\n  }\n};\n\nWorkerManager.prototype.terminate = function () {\n  if (this._terminated) return;\n\n  for (var entry of this._workers) {\n    entry[0].terminate();\n\n    if (entry[1]) {\n      entry[1][1](new Error('Terminated'));\n    }\n  }\n\n  this._workers.clear();\n\n  this._waiting = [];\n  this._working = 0;\n  this._terminated = true;\n};\n\nWorkerManager.prototype.postAll = function (event, args) {\n  if (this._terminated) throw new Error('Cannot post (terminated)');\n  var promises = [];\n\n  for (var worker of this._workers.keys()) {\n    promises.push(this.post(event, args, [], worker.id));\n  }\n\n  return Promise.all(promises);\n};\n\nWorkerManager.prototype.post = function (event, args, transferable, id) {\n  if (args === undefined) args = [];\n  if (transferable === undefined) transferable = [];\n\n  if (!Array.isArray(args)) {\n    args = [args];\n  }\n\n  if (!Array.isArray(transferable)) {\n    transferable = [transferable];\n  }\n\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    if (self._terminated) throw new Error('Cannot post (terminated)');\n\n    self._waiting.push([event, args, transferable, [resolve, reject], id]);\n\n    self._exec();\n  });\n};\n\nmodule.exports = WorkerManager;","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/web-worker-manager/src/index.js"],"names":["workerTemplate","require","CORES","navigator","hardwareConcurrency","noop","Function","prototype","WorkerManager","func","options","TypeError","undefined","_workerCode","toString","maxWorkers","_numWorkers","Math","min","_workers","Map","_timeout","timeout","_terminateOnError","terminateOnError","deps","Array","isArray","_id","_terminated","_working","_waiting","_init","workerURL","newWorkerURL","i","worker","Worker","onmessage","_onmessage","bind","onerror","_onerror","running","id","set","URL","revokeObjectURL","error","callback","get","message","terminate","_exec","event","data","keys","length","execInfo","splice","postMessage","action","args","time","Date","now","entry","Error","clear","postAll","promises","push","post","Promise","all","transferable","self","resolve","reject","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar workerTemplate = require('./workerTemplate');\n\nvar CORES = navigator.hardwareConcurrency || 1;\n\nvar noop = Function.prototype;\n\nfunction WorkerManager(func, options) {\n    // Check arguments\n    if (typeof func !== 'string' && typeof func !== 'function')\n        throw new TypeError('func argument must be a function');\n    if (options === undefined)\n        options = {};\n    if (typeof options !== 'object' || options === null)\n        throw new TypeError('options argument must be an object');\n\n    this._workerCode = func.toString();\n\n    // Parse options\n    if (options.maxWorkers === undefined || options.maxWorkers === 'auto') {\n        this._numWorkers = Math.min(CORES - 1, 1);\n    } else if (options.maxWorkers > 0) {\n        this._numWorkers = Math.min(options.maxWorkers, CORES);\n    } else {\n        this._numWorkers = CORES;\n    }\n\n    this._workers = new Map();\n    this._timeout = options.timeout || 0;\n    this._terminateOnError = !!options.terminateOnError;\n\n    var deps = options.deps;\n    if (typeof deps === 'string')\n        deps = [deps];\n    if (!Array.isArray(deps))\n        deps = undefined;\n\n    this._id = 0;\n    this._terminated = false;\n    this._working = 0;\n    this._waiting = [];\n\n    this._init(deps);\n}\n\nWorkerManager.prototype._init = function (deps) {\n    var workerURL = workerTemplate.newWorkerURL(this._workerCode, deps);\n\n    for (var i = 0; i < this._numWorkers; i++) {\n        var worker = new Worker(workerURL);\n        worker.onmessage = this._onmessage.bind(this, worker);\n        worker.onerror = this._onerror.bind(this, worker);\n        worker.running = false;\n        worker.id = i;\n        this._workers.set(worker, null);\n    }\n\n    URL.revokeObjectURL(workerURL);\n};\n\nWorkerManager.prototype._onerror = function (worker, error) {\n    if (this._terminated)\n        return;\n    this._working--;\n    worker.running = false;\n    var callback = this._workers.get(worker);\n    if (callback) {\n        callback[1](error.message);\n    }\n    this._workers.set(worker, null);\n    if (this._terminateOnError) {\n        this.terminate();\n    } else {\n        this._exec();\n    }\n};\n\nWorkerManager.prototype._onmessage = function (worker, event) {\n    if (this._terminated)\n        return;\n    this._working--;\n    worker.running = false;\n    var callback = this._workers.get(worker);\n    if (callback) {\n        callback[0](event.data.data);\n    }\n    this._workers.set(worker, null);\n    this._exec();\n};\n\nWorkerManager.prototype._exec = function () {\n    for (var worker of this._workers.keys()) {\n        if (this._working === this._numWorkers ||\n            this._waiting.length === 0) {\n            return;\n        }\n        if (!worker.running) {\n            for (var i = 0; i < this._waiting.length; i++) {\n                var execInfo = this._waiting[i];\n                if (typeof execInfo[4] === 'number' && execInfo[4] !== worker.id) {\n                    // this message is intended to another worker, let's ignore it\n                    continue;\n                }\n                this._waiting.splice(i, 1);\n                worker.postMessage({\n                    action: 'exec',\n                    event: execInfo[0],\n                    args: execInfo[1]\n                }, execInfo[2]);\n                worker.running = true;\n                worker.time = Date.now();\n                this._workers.set(worker, execInfo[3]);\n                this._working++;\n                break;\n            }\n        }\n    }\n};\n\nWorkerManager.prototype.terminate = function () {\n    if (this._terminated) return;\n    for (var entry of this._workers) {\n        entry[0].terminate();\n        if (entry[1]) {\n            entry[1][1](new Error('Terminated'));\n        }\n    }\n    this._workers.clear();\n    this._waiting = [];\n    this._working = 0;\n    this._terminated = true;\n};\n\nWorkerManager.prototype.postAll = function (event, args) {\n    if (this._terminated)\n        throw new Error('Cannot post (terminated)');\n    var promises = [];\n    for (var worker of this._workers.keys()) {\n        promises.push(this.post(event, args, [], worker.id));\n    }\n    return Promise.all(promises);\n};\n\nWorkerManager.prototype.post = function (event, args, transferable, id) {\n    if (args === undefined) args = [];\n    if (transferable === undefined) transferable = [];\n    if (!Array.isArray(args)) {\n        args = [args];\n    }\n    if (!Array.isArray(transferable)) {\n        transferable = [transferable];\n    }\n\n    var self = this;\n    return new Promise(function (resolve, reject) {\n        if (self._terminated) throw new Error('Cannot post (terminated)');\n        self._waiting.push([event, args, transferable, [resolve, reject], id]);\n        self._exec();\n    });\n};\n\nmodule.exports = WorkerManager;\n"]},"metadata":{},"sourceType":"script"}