{"ast":null,"code":"//var yvalues;\n//var size_index = 0;\nvar currentY_value = 0;\nexport function drawSun(p, temperatureData, current_date) {\n  calcSun(temperatureData, current_date); //changeY(current_date);\n  //console.log(temperatureData);\n\n  createSun(p, temperatureData);\n}\n\nfunction calcSun(temperatureData, current_date) {\n  if (temperatureData != null) {\n    //get current date based on scroller\n    //get year\n    var currentDate = current_date.getFullYear();\n\n    if (currentDate === 2020) {\n      currentDate = 2015;\n    }\n\n    var index = (currentDate - 1880) * temperatureData.length / 140 - 100;\n    var i = Math.round(index);\n    var average = 0;\n\n    for (var count = 0; count < 100; count++) {\n      average = average + parseFloat(temperatureData[i + count].station);\n    } //console.log(i);\n    // console.log(average);\n\n\n    currentY_value = average / 50 + 2; //yvalues[i] = average + 1;\n\n    /*for (let i = 0; i < temperatureData.length / 8; i++) {\r\n        var average = parseFloat(temperatureData[i * 8].station); // + parseFloat(temperatureData[i * 8].land)) / 2);\r\n        yvalues[i] = average + 1;\r\n    }*/\n  }\n}\n/*function changeY ()  {\r\n    if (size_index === yvalues.length) size_index = 0;\r\n\r\n    size_index += 1;\r\n};*/\n\n\nfunction createSun(p, temperatureData) {\n  if (temperatureData != null) {\n    //console.log(currentY_value);\n    p.ellipse(p.width / 2, p.height / 2, //yvalues[size_index] * 50,\n    //yvalues[size_index] * 50\n    currentY_value * 100, currentY_value * 100);\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/sun.js"],"names":["currentY_value","drawSun","p","temperatureData","current_date","calcSun","createSun","currentDate","getFullYear","index","length","i","Math","round","average","count","parseFloat","station","ellipse","width","height"],"mappings":"AAAA;AACA;AACA,IAAIA,cAAc,GAAG,CAArB;AAGA,OAAO,SAASC,OAAT,CAAiBC,CAAjB,EAAoBC,eAApB,EAAqCC,YAArC,EAAmD;AACtDC,EAAAA,OAAO,CAACF,eAAD,EAAkBC,YAAlB,CAAP,CADsD,CAEtD;AACA;;AACAE,EAAAA,SAAS,CAACJ,CAAD,EAAIC,eAAJ,CAAT;AACH;;AAED,SAASE,OAAT,CAAiBF,eAAjB,EAAkCC,YAAlC,EAAgD;AAC5C,MAAID,eAAe,IAAI,IAAvB,EAA6B;AACzB;AACA;AACA,QAAII,WAAW,GAAGH,YAAY,CAACI,WAAb,EAAlB;;AACA,QAAID,WAAW,KAAK,IAApB,EAA0B;AACtBA,MAAAA,WAAW,GAAG,IAAd;AACH;;AACD,QAAIE,KAAK,GAAI,CAACF,WAAW,GAAG,IAAf,IAAuBJ,eAAe,CAACO,MAAxC,GAAkD,GAAlD,GAAwD,GAApE;AAEA,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;AACA,QAAIK,OAAO,GAAG,CAAd;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,GAA5B,EAAiCA,KAAK,EAAtC,EAA0C;AACtCD,MAAAA,OAAO,GAAGA,OAAO,GAAGE,UAAU,CAACb,eAAe,CAACQ,CAAC,GAAGI,KAAL,CAAf,CAA2BE,OAA5B,CAA9B;AACH,KAbwB,CAczB;AACA;;;AACAjB,IAAAA,cAAc,GAAGc,OAAO,GAAG,EAAV,GAAe,CAAhC,CAhByB,CAiBzB;;AACA;;;;AAIH;AACJ;AAED;;;;;;;AAMA,SAASR,SAAT,CAAmBJ,CAAnB,EAAsBC,eAAtB,EAAuC;AACnC,MAAIA,eAAe,IAAI,IAAvB,EAA6B;AACzB;AAGAD,IAAAA,CAAC,CAACgB,OAAF,CACIhB,CAAC,CAACiB,KAAF,GAAU,CADd,EAEIjB,CAAC,CAACkB,MAAF,GAAW,CAFf,EAGI;AACA;AACApB,IAAAA,cAAc,GAAG,GALrB,EAMIA,cAAc,GAAG,GANrB;AAQH;AACJ","sourcesContent":["//var yvalues;\r\n//var size_index = 0;\r\nvar currentY_value = 0;\r\n\r\n\r\nexport function drawSun(p, temperatureData, current_date) {\r\n    calcSun(temperatureData, current_date);\r\n    //changeY(current_date);\r\n    //console.log(temperatureData);\r\n    createSun(p, temperatureData);\r\n}\r\n\r\nfunction calcSun(temperatureData, current_date) {\r\n    if (temperatureData != null) {\r\n        //get current date based on scroller\r\n        //get year\r\n        var currentDate = current_date.getFullYear();\r\n        if (currentDate === 2020) {\r\n            currentDate = 2015;\r\n        }\r\n        var index = ((currentDate - 1880) * temperatureData.length) / 140 - 100;\r\n\r\n        var i = Math.round(index);\r\n        var average = 0;\r\n        for (var count = 0; count < 100; count++) {\r\n            average = average + parseFloat(temperatureData[i + count].station);\r\n        }\r\n        //console.log(i);\r\n        // console.log(average);\r\n        currentY_value = average / 50 + 2;\r\n        //yvalues[i] = average + 1;\r\n        /*for (let i = 0; i < temperatureData.length / 8; i++) {\r\n            var average = parseFloat(temperatureData[i * 8].station); // + parseFloat(temperatureData[i * 8].land)) / 2);\r\n            yvalues[i] = average + 1;\r\n        }*/\r\n    }\r\n}\r\n\r\n/*function changeY ()  {\r\n    if (size_index === yvalues.length) size_index = 0;\r\n\r\n    size_index += 1;\r\n};*/\r\n\r\nfunction createSun(p, temperatureData) {\r\n    if (temperatureData != null) {\r\n        //console.log(currentY_value);\r\n\r\n\r\n        p.ellipse(\r\n            p.width / 2,\r\n            p.height / 2,\r\n            //yvalues[size_index] * 50,\r\n            //yvalues[size_index] * 50\r\n            currentY_value * 100,\r\n            currentY_value * 100\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}