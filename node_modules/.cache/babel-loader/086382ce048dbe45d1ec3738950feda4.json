{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kuent\\\\Documents\\\\FinishDipshit\\\\Creative\\\\samiea.github.io\\\\react-deploy\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport P5Wrapper from 'react-p5-wrapper';\nimport sun from './sketches/sun';\nimport sun_size from './sketches/sun';\n\nvar startCarbonDioxide = function (carbonArray) {\n  console.log(carbonArray.co2[100]);\n  console.log(carbonArray.co2.length);\n  return carbonArray;\n};\n\nvar startMethane = function (methArray) {\n  console.log(methArray.methane[100]);\n  console.log(methArray.methane.length);\n  return methArray;\n};\n\nvar startNitrous = function (nitArray) {\n  console.log(nitArray.nitrous[100]);\n  console.log(nitArray.nitrous.length);\n  return nitArray;\n};\n\nfunction Enviorment() {\n  let color = {\n    color: [Math.random() * 255, Math.random() * 255, Math.random() * 255]\n  };\n\n  const fetchData = async () => {\n    function getApibyUrl(url, dataFunction) {\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      var response = axios.get(proxyurl + url).then(function (response) {\n        console.log(response.data);\n        return dataFunction(response.data);\n      }).catch(err => {\n        // what now?\n        console.log(err);\n      });\n    } //Air\n\n\n    var url = 'https://global-warming.org/api/co2-api';\n    const carbonData = getApibyUrl(url, startCarbonDioxide); //console.log(carbonData);\n\n    url = 'https://global-warming.org/api/methane-api';\n    var responseData = getApibyUrl(url, startMethane); //console.log(responseData.result);\n\n    url = 'https://global-warming.org/api/nitrous-oxide-api';\n    responseData = getApibyUrl(url, startNitrous); //console.log(responseData.result);\n    //surface temperature\n\n    url = 'https://global-warming.org/api/temperature-api'; //responseData = getApibyUrl(url.result)\n    //arctic ice\n\n    url = 'https://global-warming.org/api/arctic-api'; //responseData = getApibyUrl(url result)\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Air Quality\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Fetch a list from an API and display it\"), \"/* Fetch data from API */\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fetch-button\",\n    onClick: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Fetch Data\"), /*#__PURE__*/React.createElement(P5Wrapper, {\n    sketch: sun,\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })));\n} //start application\n\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(Enviorment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/samiea.github.io/react-deploy/src/index.js"],"names":["React","useState","ReactDOM","App","serviceWorker","axios","P5Wrapper","sun","sun_size","startCarbonDioxide","carbonArray","console","log","co2","length","startMethane","methArray","methane","startNitrous","nitArray","nitrous","Enviorment","color","Math","random","fetchData","getApibyUrl","url","dataFunction","proxyurl","response","get","then","data","catch","err","carbonData","responseData","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAGA,IAAIC,kBAAkB,GAAC,UAASC,WAAT,EAAqB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,GAAZ,CAAgB,GAAhB,CAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,GAAZ,CAAgBC,MAA5B;AACA,SAAOJ,WAAP;AAED,CALD;;AAMA,IAAIK,YAAY,GAAC,UAASC,SAAT,EAAmB;AAClCL,EAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,CAACC,OAAV,CAAkB,GAAlB,CAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,CAACC,OAAV,CAAkBH,MAA9B;AACA,SAAOE,SAAP;AAED,CALD;;AAMA,IAAIE,YAAY,GAAC,UAASC,QAAT,EAAkB;AACjCR,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACC,OAAT,CAAiB,GAAjB,CAAZ;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACC,OAAT,CAAiBN,MAA7B;AACA,SAAOK,QAAP;AAED,CALD;;AAOA,SAASE,UAAT,GAAsB;AAEpB,MAAIC,KAAK,GAAG;AAACA,IAAAA,KAAK,EAAC,CAACC,IAAI,CAACC,MAAL,KAAc,GAAf,EAAoBD,IAAI,CAACC,MAAL,KAAc,GAAlC,EAAuCD,IAAI,CAACC,MAAL,KAAc,GAArD;AAAP,GAAZ;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAE5B,aAASC,WAAT,CAAqBC,GAArB,EAA0BC,YAA1B,EAAuC;AAErC,YAAMC,QAAQ,GAAG,sCAAjB;AAEA,UAAIC,QAAQ,GAAGzB,KAAK,CAAC0B,GAAN,CACbF,QAAQ,GAACF,GADI,EAEbK,IAFa,CAER,UAASF,QAAT,EAAkB;AACrBnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,QAAQ,CAACG,IAArB;AACA,eAAOL,YAAY,CAACE,QAAQ,CAACG,IAAV,CAAnB;AACH,OALc,EAKZC,KALY,CAKNC,GAAG,IAAI;AACZ;AACFxB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAZ;AACD,OARc,CAAf;AAUD,KAhB2B,CAiB5B;;;AACA,QAAIR,GAAG,GAAG,wCAAV;AACA,UAAMS,UAAU,GAAGV,WAAW,CAACC,GAAD,EAAKlB,kBAAL,CAA9B,CAnB4B,CAoB5B;;AAEAkB,IAAAA,GAAG,GAAG,4CAAN;AACA,QAAIU,YAAY,GAAIX,WAAW,CAACC,GAAD,EAAKZ,YAAL,CAA/B,CAvB4B,CAwB5B;;AAEAY,IAAAA,GAAG,GAAG,kDAAN;AACAU,IAAAA,YAAY,GAAGX,WAAW,CAACC,GAAD,EAAKT,YAAL,CAA1B,CA3B4B,CA4B5B;AACA;;AACAS,IAAAA,GAAG,GAAG,gDAAN,CA9B4B,CA+B5B;AACA;;AACAA,IAAAA,GAAG,GAAG,2CAAN,CAjC4B,CAkC5B;AACD,GAnCD;;AAqCA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFF,4CAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEF,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAElB,GAAnB;AAAwB,IAAA,KAAK,EAAEe,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CALF,CADJ;AAiBD,C,CAED;;;AAEA,MAAMgB,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AAEAtC,QAAQ,CAACuC,MAAT,eAAgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAgCH,WAAhC","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport axios from 'axios';\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport sun from './sketches/sun';\r\nimport sun_size from './sketches/sun';\r\n\r\n\r\nvar startCarbonDioxide=function(carbonArray){\r\n  console.log(carbonArray.co2[100]);\r\n  console.log(carbonArray.co2.length)\r\n  return carbonArray\r\n\r\n}\r\nvar startMethane=function(methArray){\r\n  console.log(methArray.methane[100]);\r\n  console.log(methArray.methane.length)\r\n  return methArray\r\n\r\n}\r\nvar startNitrous=function(nitArray){\r\n  console.log(nitArray.nitrous[100]);\r\n  console.log(nitArray.nitrous.length)\r\n  return nitArray\r\n\r\n}\r\n\r\nfunction Enviorment() {\r\n\r\n  let color = {color:[Math.random()*255, Math.random()*255, Math.random()*255]}\r\n\r\n  const fetchData = async () => {\r\n\r\n    function getApibyUrl(url, dataFunction){\r\n\r\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\n      var response = axios.get(\r\n        proxyurl+url\r\n      ).then(function(response){\r\n          console.log(response.data)\r\n          return dataFunction(response.data)\r\n      }).catch(err => {\r\n          // what now?\r\n        console.log(err);\r\n      });\r\n\r\n    }\r\n    //Air\r\n    var url = 'https://global-warming.org/api/co2-api'\r\n    const carbonData = getApibyUrl(url,startCarbonDioxide)\r\n    //console.log(carbonData);\r\n\r\n    url = 'https://global-warming.org/api/methane-api'\r\n    var responseData =  getApibyUrl(url,startMethane)\r\n    //console.log(responseData.result);\r\n\r\n    url = 'https://global-warming.org/api/nitrous-oxide-api'\r\n    responseData = getApibyUrl(url,startNitrous)\r\n    //console.log(responseData.result);\r\n    //surface temperature\r\n    url = 'https://global-warming.org/api/temperature-api'\r\n    //responseData = getApibyUrl(url.result)\r\n    //arctic ice\r\n    url = 'https://global-warming.org/api/arctic-api'\r\n    //responseData = getApibyUrl(url result)\r\n  };\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <h1>Air Quality</h1>\r\n        <h2>Fetch a list from an API and display it</h2>\r\n\r\n        /* Fetch data from API */\r\n        <div>\r\n          <button className=\"fetch-button\" onClick={fetchData}>\r\n            Fetch Data\r\n          </button>\r\n          <P5Wrapper sketch={sun} color={color}></P5Wrapper>\r\n\r\n          <br />\r\n        </div>\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\n//start application\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(<Enviorment />, rootElement);\r\n"]},"metadata":{},"sourceType":"module"}