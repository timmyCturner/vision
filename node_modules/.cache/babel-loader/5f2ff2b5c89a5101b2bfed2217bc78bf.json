{"ast":null,"code":"let canvas; //these are gonna be the variables for our garbage collection\n\nvar drops = [];\nvar micro_Size = 5;\n\nclass Drop {\n  constructor(p) {\n    this.x = p.random(0, p.width);\n    this.y = p.random(0, p.height);\n  }\n\n  show(p) {\n    p.noStroke();\n    p.fill(255);\n    p.ellipse(this.x, this.y, p.random(5, micro_Size), p.random(5, micro_Size));\n  }\n\n  update(p) {\n    this.speed = this.speed = p.random(2, 4);\n    ;\n    this.gravity = 1.05;\n    this.y = this.y + this.speed * this.gravity;\n\n    if (this.y > p.height) {\n      this.y = 400;\n      this.gravity = 0;\n    }\n  }\n\n}\n\nexport function setupDrops(p, microGrowth2050) {\n  //\n  //set up plastic\n  //\n  for (var i = 0; i < 200; i++) {\n    drops[i] = new Drop(p);\n  }\n}\nexport function drawDots(p, microGrowth2050, current_date) {\n  //calc microplastic\n  //\n  //p.background(230, 230, 250);\n  //console.log(microGrowth2050);\n  //console.log(current_date);\n  currentDate = currentDate.getFullYear();\n\n  for (var i = 0; i < drops.length; i++) {\n    drops[i].update(p);\n    drops[i].show(p);\n  }\n\n  if (microGrowth2050 != null) {\n    console.log(currentDate);\n    console.log(microGrowth2050[7]);\n    micro_Size = -1 * (microGrowth2050[(currentDate - 2000) * 5][1] - 367) / 10;\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/src/sketches/microPlastic.js"],"names":["canvas","drops","micro_Size","Drop","constructor","p","x","random","width","y","height","show","noStroke","fill","ellipse","update","speed","gravity","setupDrops","microGrowth2050","i","drawDots","current_date","currentDate","getFullYear","length","console","log"],"mappings":"AACA,IAAIA,MAAJ,C,CACA;;AACA,IAAIC,KAAK,GAAG,EAAZ;AAEA,IAAIC,UAAU,GAAG,CAAjB;;AAEA,MAAMC,IAAN,CAAU;AAERC,EAAAA,WAAW,CAACC,CAAD,EAAG;AACZ,SAAKC,CAAL,GAASD,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYF,CAAC,CAACG,KAAd,CAAT;AACA,SAAKC,CAAL,GAASJ,CAAC,CAACE,MAAF,CAAS,CAAT,EAAWF,CAAC,CAACK,MAAb,CAAT;AACD;;AAGDC,EAAAA,IAAI,CAACN,CAAD,EAAI;AACNA,IAAAA,CAAC,CAACO,QAAF;AACAP,IAAAA,CAAC,CAACQ,IAAF,CAAO,GAAP;AACAR,IAAAA,CAAC,CAACS,OAAF,CAAU,KAAKR,CAAf,EAAkB,KAAKG,CAAvB,EAA0BJ,CAAC,CAACE,MAAF,CAAS,CAAT,EAAWL,UAAX,CAA1B,EAAkDG,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYL,UAAZ,CAAlD;AACD;;AACDa,EAAAA,MAAM,CAACV,CAAD,EAAI;AACR,SAAKW,KAAL,GAAa,KAAKA,KAAL,GAAaX,CAAC,CAACE,MAAF,CAAS,CAAT,EAAY,CAAZ,CAA1B;AAAyC;AACzC,SAAKU,OAAL,GAAe,IAAf;AACA,SAAKR,CAAL,GAAS,KAAKA,CAAL,GAAS,KAAKO,KAAL,GAAW,KAAKC,OAAlC;;AAEA,QAAI,KAAKR,CAAL,GAASJ,CAAC,CAACK,MAAf,EAAuB;AACrB,WAAKD,CAAL,GAAS,GAAT;AACA,WAAKQ,OAAL,GAAe,CAAf;AACC;AACF;;AAtBK;;AAyBV,OAAO,SAASC,UAAT,CAAoBb,CAApB,EAAsBc,eAAtB,EAAwC;AAE7C;AACA;AACA;AACE,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBnB,IAAAA,KAAK,CAACmB,CAAD,CAAL,GAAW,IAAIjB,IAAJ,CAASE,CAAT,CAAX;AACH;AACF;AAEH,OAAO,SAASgB,QAAT,CAAkBhB,CAAlB,EAAoBc,eAApB,EAAoCG,YAApC,EAAkD;AACvD;AACA;AACA;AACA;AACA;AACAC,EAAAA,WAAW,GAAGA,WAAW,CAACC,WAAZ,EAAd;;AACA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,KAAK,CAACwB,MAA1B,EAAkCL,CAAC,EAAnC,EAAuC;AACrCnB,IAAAA,KAAK,CAACmB,CAAD,CAAL,CAASL,MAAT,CAAgBV,CAAhB;AACAJ,IAAAA,KAAK,CAACmB,CAAD,CAAL,CAAST,IAAT,CAAcN,CAAd;AACD;;AACD,MAAIc,eAAe,IAAI,IAAvB,EAA4B;AAC1BO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYR,eAAe,CAAC,CAAD,CAA3B;AACAjB,IAAAA,UAAU,GAAG,CAAC,CAAD,IAAIiB,eAAe,CAAC,CAACI,WAAW,GAAE,IAAd,IAAoB,CAArB,CAAf,CAAuC,CAAvC,IAA0C,GAA9C,IAAmD,EAAhE;AAGD;AAIF","sourcesContent":["\r\nlet canvas;\r\n//these are gonna be the variables for our garbage collection\r\nvar drops = []\r\n\r\nvar micro_Size = 5;\r\n\r\nclass Drop{\r\n\r\n  constructor(p){\r\n    this.x = p.random(0, p.width);\r\n    this.y = p.random(0,p.height);\r\n  }\r\n\r\n\r\n  show(p) {\r\n    p.noStroke();\r\n    p.fill(255);\r\n    p.ellipse(this.x, this.y, p.random(5,micro_Size), p.random(5, micro_Size));\r\n  }\r\n  update(p) {\r\n    this.speed = this.speed = p.random(2, 4);;\r\n    this.gravity = 1.05;\r\n    this.y = this.y + this.speed*this.gravity;\r\n\r\n    if (this.y > p.height) {\r\n      this.y = 400;\r\n      this.gravity = 0;\r\n      }\r\n    }\r\n  }\r\n\r\nexport function setupDrops(p,microGrowth2050)  {\r\n\r\n  //\r\n  //set up plastic\r\n  //\r\n    for(var i = 0; i < 200; i++) {\r\n        drops[i] = new Drop(p);\r\n    }\r\n  }\r\n\r\nexport function drawDots(p,microGrowth2050,current_date) {\r\n  //calc microplastic\r\n  //\r\n  //p.background(230, 230, 250);\r\n  //console.log(microGrowth2050);\r\n  //console.log(current_date);\r\n  currentDate = currentDate.getFullYear()\r\n  for (var i = 0; i < drops.length; i++) {\r\n    drops[i].update(p);\r\n    drops[i].show(p);\r\n  }\r\n  if (microGrowth2050 != null){\r\n    console.log(currentDate);\r\n    console.log(microGrowth2050[7]);\r\n    micro_Size = -1*(microGrowth2050[(currentDate -2000)*5][1]-367)/10\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}