{"ast":null,"code":"//var color ;\nexport default function sketch(p) {\n  let canvas;\n  var temp_array = 0;\n  var yvalues = 0;\n\n  p.setup = () => {\n    canvas = p.createCanvas(600, 300);\n    p.noStroke(); //yvalues = new Array(p.floor(200));\n  };\n\n  p.draw = () => {\n    //console.log('draw');\n    //console.log(this);\n    p.background('blue');\n    p.calcSun();\n    p.drawSun(); //p.fill(color)\n\n    console.log(temp_array);\n  };\n\n  p.calcSun = () => {\n    //console.log(temp_array)\n    for (let i = 0; i < temp_array.length / 8; i++) {\n      //console.log(temp_array);\n      var average = (temp_array[i * 8].station + temp_array[i * 8].land) / 2;\n      yvalues[i] = average + 1; //console.log(average);\n    }\n  };\n\n  p.drawSun = () => {\n    for (let i = 0; i < yvalues.length; i++) {\n      //console.log(yvalues);\n      p.ellipse(p.width, 0, yvalues[i] * 10, yvalues[i] * 10);\n      p.fill('yellow');\n    }\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    if (canvas) {\n      //Make sure the canvas has been created\n      //console.log('customProp');\n      //console.log(newProps.tempArray);\n      temp_array = newProps.tempArray.tempData;\n      console.log(newProps.tempArray.tempData);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/samiea.github.io/react-deploy/src/sketches/sun.js"],"names":["sketch","p","canvas","temp_array","yvalues","setup","createCanvas","noStroke","draw","background","calcSun","drawSun","console","log","i","length","average","station","land","ellipse","width","fill","myCustomRedrawAccordingToNewPropsHandler","newProps","tempArray","tempData"],"mappings":"AACA;AAGA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,MAAIC,MAAJ;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,OAAO,GAAG,CAAd;;AAGAH,EAAAA,CAAC,CAACI,KAAF,GAAU,MAAM;AACZH,IAAAA,MAAM,GAAGD,CAAC,CAACK,YAAF,CAAe,GAAf,EAAoB,GAApB,CAAT;AACAL,IAAAA,CAAC,CAACM,QAAF,GAFY,CAGZ;AACH,GAJD;;AAMAN,EAAAA,CAAC,CAACO,IAAF,GAAS,MAAM;AACX;AACA;AACAP,IAAAA,CAAC,CAACQ,UAAF,CAAa,MAAb;AACAR,IAAAA,CAAC,CAACS,OAAF;AACAT,IAAAA,CAAC,CAACU,OAAF,GALW,CAMX;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACH,GARD;;AASAF,EAAAA,CAAC,CAACS,OAAF,GAAW,MAAM;AAEf;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIX,UAAU,CAACY,MAAX,GAAkB,CAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C;AACA,UAAIE,OAAO,GAAG,CAACb,UAAU,CAACW,CAAC,GAAC,CAAH,CAAV,CAAgBG,OAAhB,GAAwBd,UAAU,CAACW,CAAC,GAAC,CAAH,CAAV,CAAgBI,IAAzC,IAA+C,CAA7D;AACAd,MAAAA,OAAO,CAACU,CAAD,CAAP,GAAaE,OAAO,GAAC,CAArB,CAH8C,CAI9C;AAED;AACF,GAVD;;AAWAf,EAAAA,CAAC,CAACU,OAAF,GAAW,MAAM;AACf,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIV,OAAO,CAACW,MAA7B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC;AACAb,MAAAA,CAAC,CAACkB,OAAF,CAAUlB,CAAC,CAACmB,KAAZ,EAAmB,CAAnB,EAAsBhB,OAAO,CAACU,CAAD,CAAP,GAAW,EAAjC,EAAqCV,OAAO,CAACU,CAAD,CAAP,GAAW,EAAhD;AACAb,MAAAA,CAAC,CAACoB,IAAF,CAAO,QAAP;AAED;AACF,GAPD;;AAQApB,EAAAA,CAAC,CAACqB,wCAAF,GAA8CC,QAAD,IAAc;AACzD,QAAGrB,MAAH,EAAU;AAAE;AACV;AACA;AACAC,MAAAA,UAAU,GAAGoB,QAAQ,CAACC,SAAT,CAAmBC,QAAhC;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAQ,CAACC,SAAT,CAAmBC,QAA/B;AAED;AAEF,GATD;AAaH","sourcesContent":["\r\n//var color ;\r\n\r\n\r\nexport default function sketch(p) {\r\n    let canvas;\r\n    var temp_array = 0;\r\n    var yvalues = 0;\r\n\r\n\r\n    p.setup = () => {\r\n        canvas = p.createCanvas(600, 300);\r\n        p.noStroke();\r\n        //yvalues = new Array(p.floor(200));\r\n    }\r\n\r\n    p.draw = () => {\r\n        //console.log('draw');\r\n        //console.log(this);\r\n        p.background('blue');\r\n        p.calcSun();\r\n        p.drawSun();\r\n        //p.fill(color)\r\n        console.log(temp_array);\r\n    }\r\n    p.calcSun= () => {\r\n\r\n      //console.log(temp_array)\r\n      for (let i = 0; i < (temp_array.length/8); i++) {\r\n        //console.log(temp_array);\r\n        var average = (temp_array[i*8].station+temp_array[i*8].land)/2\r\n        yvalues[i] = average+1\r\n        //console.log(average);\r\n\r\n      }\r\n    }\r\n    p.drawSun= () => {\r\n      for (let i = 0; i < (yvalues.length); i++) {\r\n        //console.log(yvalues);\r\n        p.ellipse(p.width, 0, yvalues[i]*10, yvalues[i]*10);\r\n        p.fill('yellow')\r\n\r\n      }\r\n    }\r\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n      if(canvas){ //Make sure the canvas has been created\r\n        //console.log('customProp');\r\n        //console.log(newProps.tempArray);\r\n        temp_array = newProps.tempArray.tempData\r\n        console.log(newProps.tempArray.tempData);\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}