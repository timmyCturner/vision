{"ast":null,"code":"'use strict';\n\nvar types = new Map([[1, [1, readByte]], // BYTE\n[2, [1, readASCII]], // ASCII\n[3, [2, readShort]], // SHORT\n[4, [4, readLong]], // LONG\n[5, [8, readRational]], // RATIONAL\n[6, [1, readSByte]], // SBYTE\n[7, [1, readByte]], // UNDEFINED\n[8, [2, readSShort]], // SSHORT\n[9, [4, readSLong]], // SLONG\n[10, [8, readSRational]], // SRATIONAL\n[11, [4, readFloat]], // FLOAT\n[12, [8, readDouble]] // DOUBLE\n]);\n\nexports.getByteLength = function (type, count) {\n  return types.get(type)[0] * count;\n};\n\nexports.readData = function (decoder, type, count) {\n  return types.get(type)[1](decoder, count);\n};\n\nfunction readByte(decoder, count) {\n  if (count === 1) return decoder.readUint8();\n  var array = new Uint8Array(count);\n\n  for (var i = 0; i < count; i++) {\n    array[i] = decoder.readUint8();\n  }\n\n  return array;\n}\n\nfunction readASCII(decoder, count) {\n  var strings = [];\n  var currentString = '';\n\n  for (var i = 0; i < count; i++) {\n    var char = String.fromCharCode(decoder.readUint8());\n\n    if (char === '\\0') {\n      strings.push(currentString);\n      currentString = '';\n    } else {\n      currentString += char;\n    }\n  }\n\n  if (strings.length === 1) {\n    return strings[0];\n  } else {\n    return strings;\n  }\n}\n\nfunction readShort(decoder, count) {\n  if (count === 1) return decoder.readUint16();\n  var array = new Uint16Array(count);\n\n  for (var i = 0; i < count; i++) {\n    array[i] = decoder.readUint16();\n  }\n\n  return array;\n}\n\nfunction readLong(decoder, count) {\n  if (count === 1) return decoder.readUint32();\n  var array = new Uint32Array(count);\n\n  for (var i = 0; i < count; i++) {\n    array[i] = decoder.readUint32();\n  }\n\n  return array;\n}\n\nfunction readRational(decoder, count) {\n  if (count === 1) {\n    return decoder.readUint32() / decoder.readUint32();\n  }\n\n  var rationals = new Array(count);\n\n  for (var i = 0; i < count; i++) {\n    rationals[i] = decoder.readUint32() / decoder.readUint32();\n  }\n\n  return rationals;\n}\n\nfunction readSByte(decoder, count) {\n  if (count === 1) return decoder.readInt8();\n  var array = new Int8Array(count);\n\n  for (var i = 0; i < count; i++) {\n    array[i] = decoder.readInt8();\n  }\n\n  return array;\n}\n\nfunction readSShort(decoder, count) {\n  if (count === 1) return decoder.readInt16();\n  var array = new Int16Array(count);\n\n  for (var i = 0; i < count; i++) {\n    array[i] = decoder.readInt16();\n  }\n\n  return array;\n}\n\nfunction readSLong(decoder, count) {\n  if (count === 1) return decoder.readInt32();\n  var array = new Int32Array(count);\n\n  for (var i = 0; i < count; i++) {\n    array[i] = decoder.readInt32();\n  }\n\n  return array;\n}\n\nfunction readSRational(decoder, count) {\n  if (count === 1) {\n    return decoder.readInt32() / decoder.readInt32();\n  }\n\n  var rationals = new Array(count);\n\n  for (var i = 0; i < count; i++) {\n    rationals[i] = decoder.readInt32() / decoder.readInt32();\n  }\n\n  return rationals;\n}\n\nfunction readFloat(decoder, count) {\n  if (count === 1) return decoder.readFloat32();\n  var array = new Float32Array(count);\n\n  for (var i = 0; i < count; i++) {\n    array[i] = decoder.readFloat32();\n  }\n\n  return array;\n}\n\nfunction readDouble(decoder, count) {\n  if (count === 1) return decoder.readFloat64();\n  var array = new Float64Array(count);\n\n  for (var i = 0; i < count; i++) {\n    array[i] = decoder.readFloat64();\n  }\n\n  return array;\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/fast-jpeg/node_modules/tiff/src/ifdValue.js"],"names":["types","Map","readByte","readASCII","readShort","readLong","readRational","readSByte","readSShort","readSLong","readSRational","readFloat","readDouble","exports","getByteLength","type","count","get","readData","decoder","readUint8","array","Uint8Array","i","strings","currentString","char","String","fromCharCode","push","length","readUint16","Uint16Array","readUint32","Uint32Array","rationals","Array","readInt8","Int8Array","readInt16","Int16Array","readInt32","Int32Array","readFloat32","Float32Array","readFloat64","Float64Array"],"mappings":"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","sourcesContent":["'use strict';\n\nvar types = new Map([\n    [1, [1, readByte]],       // BYTE\n    [2, [1, readASCII]],      // ASCII\n    [3, [2, readShort]],      // SHORT\n    [4, [4, readLong]],       // LONG\n    [5, [8, readRational]],   // RATIONAL\n    [6, [1, readSByte]],      // SBYTE\n    [7, [1, readByte]],       // UNDEFINED\n    [8, [2, readSShort]],     // SSHORT\n    [9, [4, readSLong]],      // SLONG\n    [10, [8, readSRational]], // SRATIONAL\n    [11, [4, readFloat]],     // FLOAT\n    [12, [8, readDouble]]     // DOUBLE\n]);\n\nexports.getByteLength = function (type, count) {\n    return types.get(type)[0] * count;\n};\n\nexports.readData = function (decoder, type, count) {\n    return types.get(type)[1](decoder, count);\n};\n\nfunction readByte(decoder, count) {\n    if (count === 1) return decoder.readUint8();\n    var array = new Uint8Array(count);\n    for (var i = 0; i < count; i++) {\n        array[i] = decoder.readUint8();\n    }\n    return array;\n}\n\nfunction readASCII(decoder, count) {\n    var strings = [];\n    var currentString = '';\n    for (var i = 0; i < count; i++) {\n        var char = String.fromCharCode(decoder.readUint8());\n        if (char === '\\0') {\n            strings.push(currentString);\n            currentString = '';\n        } else {\n            currentString += char;\n        }\n    }\n    if (strings.length === 1) {\n        return strings[0];\n    } else {\n        return strings;\n    }\n}\n\nfunction readShort(decoder, count) {\n    if (count === 1) return decoder.readUint16();\n    var array = new Uint16Array(count);\n    for (var i = 0; i < count; i++) {\n        array[i] = decoder.readUint16();\n    }\n    return array;\n}\n\nfunction readLong(decoder, count) {\n    if (count === 1) return decoder.readUint32();\n    var array = new Uint32Array(count);\n    for (var i = 0; i < count; i++) {\n        array[i] = decoder.readUint32();\n    }\n    return array;\n}\n\nfunction readRational(decoder, count) {\n    if (count === 1) {\n        return decoder.readUint32() / decoder.readUint32();\n    }\n    var rationals = new Array(count);\n    for (var i = 0; i < count; i++) {\n        rationals[i] = decoder.readUint32() / decoder.readUint32();\n    }\n    return rationals;\n}\n\nfunction readSByte(decoder, count) {\n    if (count === 1) return decoder.readInt8();\n    var array = new Int8Array(count);\n    for (var i = 0; i < count; i++) {\n        array[i] = decoder.readInt8();\n    }\n    return array;\n}\n\nfunction readSShort(decoder, count) {\n    if (count === 1) return decoder.readInt16();\n    var array = new Int16Array(count);\n    for (var i = 0; i < count; i++) {\n        array[i] = decoder.readInt16();\n    }\n    return array;\n}\n\nfunction readSLong(decoder, count) {\n    if (count === 1) return decoder.readInt32();\n    var array = new Int32Array(count);\n    for (var i = 0; i < count; i++) {\n        array[i] = decoder.readInt32();\n    }\n    return array;\n}\n\nfunction readSRational(decoder, count) {\n    if (count === 1) {\n        return decoder.readInt32() / decoder.readInt32();\n    }\n    var rationals = new Array(count);\n    for (var i = 0; i < count; i++) {\n        rationals[i] = decoder.readInt32() / decoder.readInt32();\n    }\n    return rationals;\n}\n\nfunction readFloat(decoder, count) {\n    if (count === 1) return decoder.readFloat32();\n    var array = new Float32Array(count);\n    for (var i = 0; i < count; i++) {\n        array[i] = decoder.readFloat32();\n    }\n    return array;\n}\n\nfunction readDouble(decoder, count) {\n    if (count === 1) return decoder.readFloat64();\n    var array = new Float64Array(count);\n    for (var i = 0; i < count; i++) {\n        array[i] = decoder.readFloat64();\n    }\n    return array;\n}\n"]},"metadata":{},"sourceType":"script"}