{"ast":null,"code":"'use strict';\n\nconst IOBuffer = require('iobuffer');\n\nconst tiff = require('tiff');\n\nfunction decode(data) {\n  const buffer = new IOBuffer(data);\n  const result = {};\n  buffer.setBigEndian();\n  const val = buffer.readUint16();\n\n  if (val !== 0xffd8) {\n    throw new Error('SOI marker not found. Not a valid JPEG file');\n  }\n\n  const next = buffer.readUint16();\n\n  if (next === 0xffe1) {\n    const length = buffer.readUint16();\n    const header = buffer.readBytes(6);\n\n    if (header[0] === 69 && // E\n    header[1] === 120 && // x\n    header[2] === 105 && // i\n    header[3] === 102 && // f\n    header[4] === 0 && header[5] === 0) {\n      //     buffer.skip(2);\n      const exif = tiff.decode(buffer, {\n        onlyFirst: true,\n        ignoreImageData: true,\n        offset: buffer.offset\n      });\n      result.exif = exif;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = decode;","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/fast-jpeg/src/decode.js"],"names":["IOBuffer","require","tiff","decode","data","buffer","result","setBigEndian","val","readUint16","Error","next","length","header","readBytes","exif","onlyFirst","ignoreImageData","offset","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,SAASE,MAAT,CAAgBC,IAAhB,EAAsB;AAClB,QAAMC,MAAM,GAAG,IAAIL,QAAJ,CAAaI,IAAb,CAAf;AACA,QAAME,MAAM,GAAG,EAAf;AACAD,EAAAA,MAAM,CAACE,YAAP;AACA,QAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,EAAZ;;AACA,MAAID,GAAG,KAAK,MAAZ,EAAoB;AAChB,UAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACH;;AACD,QAAMC,IAAI,GAAGN,MAAM,CAACI,UAAP,EAAb;;AACA,MAAIE,IAAI,KAAK,MAAb,EAAqB;AACjB,UAAMC,MAAM,GAAGP,MAAM,CAACI,UAAP,EAAf;AACA,UAAMI,MAAM,GAAGR,MAAM,CAACS,SAAP,CAAiB,CAAjB,CAAf;;AACA,QAAID,MAAM,CAAC,CAAD,CAAN,KAAc,EAAd,IAAoB;AACpBA,IAAAA,MAAM,CAAC,CAAD,CAAN,KAAc,GADd,IACqB;AACrBA,IAAAA,MAAM,CAAC,CAAD,CAAN,KAAc,GAFd,IAEqB;AACrBA,IAAAA,MAAM,CAAC,CAAD,CAAN,KAAc,GAHd,IAGqB;AACrBA,IAAAA,MAAM,CAAC,CAAD,CAAN,KAAc,CAJd,IAKAA,MAAM,CAAC,CAAD,CAAN,KAAc,CALlB,EAKqB;AACtB;AACK,YAAME,IAAI,GAAGb,IAAI,CAACC,MAAL,CAAYE,MAAZ,EAAoB;AAC7BW,QAAAA,SAAS,EAAE,IADkB;AAE7BC,QAAAA,eAAe,EAAE,IAFY;AAG7BC,QAAAA,MAAM,EAAEb,MAAM,CAACa;AAHc,OAApB,CAAb;AAKAZ,MAAAA,MAAM,CAACS,IAAP,GAAcA,IAAd;AACH;AACJ;;AACD,SAAOT,MAAP;AACH;;AAEDa,MAAM,CAACC,OAAP,GAAiBjB,MAAjB","sourcesContent":["'use strict';\n\nconst IOBuffer = require('iobuffer');\nconst tiff = require('tiff');\n\nfunction decode(data) {\n    const buffer = new IOBuffer(data);\n    const result = {};\n    buffer.setBigEndian();\n    const val = buffer.readUint16();\n    if (val !== 0xffd8) {\n        throw new Error('SOI marker not found. Not a valid JPEG file');\n    }\n    const next = buffer.readUint16();\n    if (next === 0xffe1) {\n        const length = buffer.readUint16();\n        const header = buffer.readBytes(6);\n        if (header[0] === 69 && // E\n            header[1] === 120 && // x\n            header[2] === 105 && // i\n            header[3] === 102 && // f\n            header[4] === 0 &&\n            header[5] === 0) {\n       //     buffer.skip(2);\n            const exif = tiff.decode(buffer, {\n                onlyFirst: true,\n                ignoreImageData: true,\n                offset: buffer.offset\n            });\n            result.exif = exif;\n        }\n    }\n    return result;\n}\n\nmodule.exports = decode;\n"]},"metadata":{},"sourceType":"script"}