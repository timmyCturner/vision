{"ast":null,"code":"const valueMethods = {\n  /**\n   * Get the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number} channel\n   * @return {number} - the value of this pixel channel\n   */\n  getValueXY(x, y, channel) {\n    return this.data[(y * this.width + x) * this.channels + channel];\n  },\n\n  /**\n   * Set the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number} channel\n   * @param {number} value - the new value of this pixel channel\n   * @return {this}\n   */\n  setValueXY(x, y, channel, value) {\n    this.data[(y * this.width + x) * this.channels + channel] = value;\n    this.computed = null;\n    return this;\n  },\n\n  /**\n   * Get the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number} channel\n   * @return {number} - the value of this pixel channel\n   */\n  getValue(index, channel) {\n    return this.data[index * this.channels + channel];\n  },\n\n  /**\n   * Set the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number} channel\n   * @param {number} value - the new value of this pixel channel\n   * @return {this}\n   */\n  setValue(index, channel, value) {\n    this.data[index * this.channels + channel] = value;\n    this.computed = null;\n    return this;\n  },\n\n  /**\n   * Get the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @return {number[]} the value of this pixel\n   */\n  getPixelXY(x, y) {\n    return this.getPixel(y * this.width + x);\n  },\n\n  /**\n   * Set the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number[]} value - the new value of this pixel\n   * @return {this}\n   */\n  setPixelXY(x, y, value) {\n    return this.setPixel(y * this.width + x, value);\n  },\n\n  /**\n   * Get the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @return {number[]} the value of this pixel\n   */\n  getPixel(index) {\n    const value = new Array(this.channels);\n    const target = index * this.channels;\n\n    for (let i = 0; i < this.channels; i++) {\n      value[i] = this.data[target + i];\n    }\n\n    return value;\n  },\n\n  /**\n   * Set the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number[]} value - the new value of this pixel\n   * @return {this}\n   */\n  setPixel(index, value) {\n    const target = index * this.channels;\n\n    for (let i = 0; i < value.length; i++) {\n      this.data[target + i] = value[i];\n    }\n\n    this.computed = null;\n    return this;\n  }\n\n};\nexport default function setValueMethods(Image) {\n  for (const i in valueMethods) {\n    Image.prototype[i] = valueMethods[i];\n  }\n}","map":{"version":3,"sources":["C:/Users/kuent/Documents/FinishDipshit/Creative/Ocean-Weather-Visualization/node_modules/image-js/src/image/core/valueMethods.js"],"names":["valueMethods","getValueXY","x","y","channel","data","width","channels","setValueXY","value","computed","getValue","index","setValue","getPixelXY","getPixel","setPixelXY","setPixel","Array","target","i","length","setValueMethods","Image","prototype"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnB;;;;;;;;;AASAC,EAAAA,UAAU,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,EAAgB;AACxB,WAAO,KAAKC,IAAL,CAAU,CAACF,CAAC,GAAG,KAAKG,KAAT,GAAiBJ,CAAlB,IAAuB,KAAKK,QAA5B,GAAuCH,OAAjD,CAAP;AACD,GAZkB;;AAcnB;;;;;;;;;;AAUAI,EAAAA,UAAU,CAACN,CAAD,EAAIC,CAAJ,EAAOC,OAAP,EAAgBK,KAAhB,EAAuB;AAC/B,SAAKJ,IAAL,CAAU,CAACF,CAAC,GAAG,KAAKG,KAAT,GAAiBJ,CAAlB,IAAuB,KAAKK,QAA5B,GAAuCH,OAAjD,IAA4DK,KAA5D;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,WAAO,IAAP;AACD,GA5BkB;;AA8BnB;;;;;;;;AAQAC,EAAAA,QAAQ,CAACC,KAAD,EAAQR,OAAR,EAAiB;AACvB,WAAO,KAAKC,IAAL,CAAUO,KAAK,GAAG,KAAKL,QAAb,GAAwBH,OAAlC,CAAP;AACD,GAxCkB;;AA0CnB;;;;;;;;;AASAS,EAAAA,QAAQ,CAACD,KAAD,EAAQR,OAAR,EAAiBK,KAAjB,EAAwB;AAC9B,SAAKJ,IAAL,CAAUO,KAAK,GAAG,KAAKL,QAAb,GAAwBH,OAAlC,IAA6CK,KAA7C;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,WAAO,IAAP;AACD,GAvDkB;;AAyDnB;;;;;;;;AAQAI,EAAAA,UAAU,CAACZ,CAAD,EAAIC,CAAJ,EAAO;AACf,WAAO,KAAKY,QAAL,CAAcZ,CAAC,GAAG,KAAKG,KAAT,GAAiBJ,CAA/B,CAAP;AACD,GAnEkB;;AAqEnB;;;;;;;;;AASAc,EAAAA,UAAU,CAACd,CAAD,EAAIC,CAAJ,EAAOM,KAAP,EAAc;AACtB,WAAO,KAAKQ,QAAL,CAAcd,CAAC,GAAG,KAAKG,KAAT,GAAiBJ,CAA/B,EAAkCO,KAAlC,CAAP;AACD,GAhFkB;;AAkFnB;;;;;;;AAOAM,EAAAA,QAAQ,CAACH,KAAD,EAAQ;AACd,UAAMH,KAAK,GAAG,IAAIS,KAAJ,CAAU,KAAKX,QAAf,CAAd;AACA,UAAMY,MAAM,GAAGP,KAAK,GAAG,KAAKL,QAA5B;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,QAAzB,EAAmCa,CAAC,EAApC,EAAwC;AACtCX,MAAAA,KAAK,CAACW,CAAD,CAAL,GAAW,KAAKf,IAAL,CAAUc,MAAM,GAAGC,CAAnB,CAAX;AACD;;AACD,WAAOX,KAAP;AACD,GAhGkB;;AAkGnB;;;;;;;;AAQAQ,EAAAA,QAAQ,CAACL,KAAD,EAAQH,KAAR,EAAe;AACrB,UAAMU,MAAM,GAAGP,KAAK,GAAG,KAAKL,QAA5B;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,WAAKf,IAAL,CAAUc,MAAM,GAAGC,CAAnB,IAAwBX,KAAK,CAACW,CAAD,CAA7B;AACD;;AACD,SAAKV,QAAL,GAAgB,IAAhB;AACA,WAAO,IAAP;AACD;;AAjHkB,CAArB;AAoHA,eAAe,SAASY,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,OAAK,MAAMH,CAAX,IAAgBpB,YAAhB,EAA8B;AAC5BuB,IAAAA,KAAK,CAACC,SAAN,CAAgBJ,CAAhB,IAAqBpB,YAAY,CAACoB,CAAD,CAAjC;AACD;AACF","sourcesContent":["const valueMethods = {\n  /**\n   * Get the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number} channel\n   * @return {number} - the value of this pixel channel\n   */\n  getValueXY(x, y, channel) {\n    return this.data[(y * this.width + x) * this.channels + channel];\n  },\n\n  /**\n   * Set the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number} channel\n   * @param {number} value - the new value of this pixel channel\n   * @return {this}\n   */\n  setValueXY(x, y, channel, value) {\n    this.data[(y * this.width + x) * this.channels + channel] = value;\n    this.computed = null;\n    return this;\n  },\n\n  /**\n   * Get the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number} channel\n   * @return {number} - the value of this pixel channel\n   */\n  getValue(index, channel) {\n    return this.data[index * this.channels + channel];\n  },\n\n  /**\n   * Set the value of specific pixel channel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number} channel\n   * @param {number} value - the new value of this pixel channel\n   * @return {this}\n   */\n  setValue(index, channel, value) {\n    this.data[index * this.channels + channel] = value;\n    this.computed = null;\n    return this;\n  },\n\n  /**\n   * Get the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @return {number[]} the value of this pixel\n   */\n  getPixelXY(x, y) {\n    return this.getPixel(y * this.width + x);\n  },\n\n  /**\n   * Set the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} x - x coordinate (0 = left)\n   * @param {number} y - y coordinate (0 = top)\n   * @param {number[]} value - the new value of this pixel\n   * @return {this}\n   */\n  setPixelXY(x, y, value) {\n    return this.setPixel(y * this.width + x, value);\n  },\n\n  /**\n   * Get the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @return {number[]} the value of this pixel\n   */\n  getPixel(index) {\n    const value = new Array(this.channels);\n    const target = index * this.channels;\n    for (let i = 0; i < this.channels; i++) {\n      value[i] = this.data[target + i];\n    }\n    return value;\n  },\n\n  /**\n   * Set the value of an entire pixel\n   * @memberof Image\n   * @instance\n   * @param {number} index - 1D index of the pixel\n   * @param {number[]} value - the new value of this pixel\n   * @return {this}\n   */\n  setPixel(index, value) {\n    const target = index * this.channels;\n    for (let i = 0; i < value.length; i++) {\n      this.data[target + i] = value[i];\n    }\n    this.computed = null;\n    return this;\n  },\n};\n\nexport default function setValueMethods(Image) {\n  for (const i in valueMethods) {\n    Image.prototype[i] = valueMethods[i];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}